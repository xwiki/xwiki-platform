<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.xwiki.platform</groupId>
    <artifactId>xwiki-platform</artifactId>
    <version>8.1-SNAPSHOT</version>
  </parent>
  <artifactId>xwiki-platform-core</artifactId>
  <name>XWiki Platform - Core - Parent POM</name>
  <packaging>pom</packaging>
  <description>XWiki Platform - Core - Parent POM</description>
  <properties>
    <gwt.version>2.7.0</gwt.version>
    <gwt.maven.plugin.version>2.7.0</gwt.maven.plugin.version>
    <!-- JS/CSS minification is on by default, this property is used in order to able to skip minification when the
         debug profile is active. It can also be used from the command line to skip minification -->
    <xwiki.minification.skip>false</xwiki.minification.skip>
    <!-- Follow the specifications regarding the WebJar content path. -->
    <webjar.contentDirectory>${project.build.outputDirectory}/META-INF/resources/webjars/${project.artifactId}/${project.version}</webjar.contentDirectory>
    <!-- The bootstrap version is used is several places -->
    <bootstrap.version>3.3.6</bootstrap.version>
    <batik.version>1.8</batik.version>
  </properties>
  <dependencyManagement>
    <dependencies>
      <!-- Standard dependencies used in several modules -->
      <!-- Jython engine -->
      <!-- We use a customized Jython JAR here because the standard one contains lots of useless files creating conflicts -->
      <dependency>
        <groupId>org.python</groupId>
        <artifactId>jython-standalone</artifactId>
        <version>2.7.0-xwiki-2</version>
      </dependency>
      <!-- Used on remote observation and also by JBossCache/Infinispan (even if it does not really use it) -->
      <dependency>
        <groupId>org.jgroups</groupId>
        <artifactId>jgroups</artifactId>
        <version>3.6.9.Final</version>
      </dependency>
      <!-- Apache Tika used by several modules (Lucene, Office, etc) -->
      <dependency>
        <groupId>org.apache.tika</groupId>
        <artifactId>tika-core</artifactId>
        <version>1.12</version>
      </dependency>
      <dependency>
        <groupId>org.apache.tika</groupId>
        <artifactId>tika-parsers</artifactId>
        <version>1.12</version>
        <exclusions>
          <!-- We want to choose the SLF4J binding only when XWiki is packaged. -->
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
          </exclusion>
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging-api</artifactId>
          </exclusion>
          <!-- Exclude so that we control our own version of it. Note that Tika uses it for reading encrypted PDFs  -->
          <exclusion>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcprov-jdk15on</artifactId>
          </exclusion>
          <!-- Exclude so that we control our own version of it. Note that Tika uses it for reading encrypted PDFs  -->
          <exclusion>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcmail-jdk15on</artifactId>
          </exclusion>
          <!-- Tika depends on junrar for handling RAR files and junrar itself depends on Commons VFS2 which depends on
               org.apache.maven.scm:maven-scm-provider-svnexe:jar:1.4. AFAIK we shouldn't require this dependency and
               we can safely exclude it. The other reason for excluding it is that it itself depends on
               regexp:regexp:jar:1.3 and this causes some duplicate class conflicts with Xalan, and we already depend
               on jakarta-regexp:jakarta-regexp. -->
          <exclusion>
            <artifactId>regexp</artifactId>
            <groupId>regexp</groupId>
          </exclusion>
          <!-- We don't need it the way we use Tika and it causes various conflicts -->
          <exclusion>
            <artifactId>cxf-rt-rs-client</artifactId>
            <groupId>org.apache.cxf</groupId>
          </exclusion>
        </exclusions>
      </dependency>
      <!-- Rome is used in rss macro and feed api modules and in Tika -->
      <dependency>
        <groupId>rome</groupId>
        <artifactId>rome</artifactId>
        <version>1.0</version>
        <exclusions>
          <!-- Exclude JDOM since Rome depends on jdom:jdom and we want to use org.jdom:jdom -->
          <exclusion>
            <groupId>jdom</groupId>
            <artifactId>jdom</artifactId>
          </exclusion>
          <!-- We want to choose the SLF4J binding only when XWiki is packaged. -->
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging-api</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>rome</groupId>
        <artifactId>rome-fetcher</artifactId>
        <version>1.0</version>
        <!-- Exclude JDOM since Rome depends on jdom:jdom and we want to use org.jdom:jdom -->
        <exclusions>
          <exclusion>
            <groupId>jdom</groupId>
            <artifactId>jdom</artifactId>
          </exclusion>
          <!-- We want to choose the SLF4J binding only when XWiki is packaged. -->
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
          </exclusion>
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging-api</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <!-- Replace the runtime transitive dependency we excluded above with this one which repackages the NekoHTML classes to prevent conflicts. -->
        <groupId>de.l3s.boilerpipe</groupId>
        <artifactId>boilerpipe</artifactId>
        <version>1.2.0-xwiki</version>
        <scope>runtime</scope>
      </dependency>
      <!-- Used by xwiki-platform-oldcore and xwiki-platform-captcha -->
      <dependency>
        <groupId>org.apache.struts</groupId>
        <artifactId>struts-core</artifactId>
        <version>1.3.10</version>
        <exclusions>
          <!-- There is conflict with hibernate antlr-2.7.6 dependency -->
          <exclusion>
            <groupId>antlr</groupId>
            <artifactId>antlr</artifactId>
          </exclusion>
          <!-- We want to choose the SLF4J binding only when XWiki is packaged. -->
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <!-- Standard dependencies used in GWT modules -->
      <dependency>
        <groupId>com.google.gwt</groupId>
        <artifactId>gwt-user</artifactId>
        <version>${gwt.version}</version>
        <!-- Only needed at build time -->
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>com.google.gwt</groupId>
        <artifactId>gwt-servlet</artifactId>
        <version>${gwt.version}</version>
      </dependency>
      <!-- Used at least in Solr Search and in Infinispan Cache -->
      <dependency>
        <groupId>org.codehaus.woodstox</groupId>
        <artifactId>woodstox-core-asl</artifactId>
        <version>4.4.1</version>
        <exclusions>
          <!-- Already part of Java SE 6 -->
          <exclusion>
            <artifactId>stax-api</artifactId>
            <groupId>javax.xml.stream</groupId>
          </exclusion>
        </exclusions>
      </dependency>
      <!-- Drawn by several transitive dependencies -->
      <dependency>
        <groupId>javax.transaction</groupId>
        <artifactId>jta</artifactId>
        <version>1.1</version>
      </dependency>
      <dependency>
        <groupId>org.jfree</groupId>
        <artifactId>jfreechart</artifactId>
        <version>1.0.19</version>
      </dependency>
      <!-- Used directly and indirectly in various projects. -->
      <dependency>
        <groupId>joda-time</groupId>
        <artifactId>joda-time</artifactId>
        <version>2.9.2</version>
      </dependency>
      <!-- Common WebJars -->
      <dependency>
        <groupId>org.webjars</groupId>
        <artifactId>requirejs</artifactId>
        <version>2.2.0</version>
        <scope>runtime</scope>
      </dependency>
      <dependency>
        <groupId>org.webjars</groupId>
        <artifactId>jquery</artifactId>
        <version>2.2.2</version>
        <scope>runtime</scope>
      </dependency>
      <dependency>
        <groupId>org.webjars</groupId>
        <artifactId>bootstrap</artifactId>
        <version>${bootstrap.version}</version>
        <scope>runtime</scope>
      </dependency>
      <!-- All Batik artifacts should be in sync -->
      <dependency>
        <groupId>org.apache.xmlgraphics</groupId>
        <artifactId>batik-rasterizer</artifactId>
        <version>${batik.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.xmlgraphics</groupId>
        <artifactId>batik-bridge</artifactId>
        <version>${batik.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.xmlgraphics</groupId>
        <artifactId>batik-css</artifactId>
        <version>${batik.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.xmlgraphics</groupId>
        <artifactId>batik-util</artifactId>
        <version>${batik.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.xmlgraphics</groupId>
        <artifactId>batik-codec</artifactId>
        <version>${batik.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.xmlgraphics</groupId>
        <artifactId>batik-ext</artifactId>
        <version>${batik.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.xmlgraphics</groupId>
        <artifactId>batik-extension</artifactId>
        <version>${batik.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.xmlgraphics</groupId>
        <artifactId>batik-transcoder</artifactId>
        <version>${batik.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.xmlgraphics</groupId>
        <artifactId>batik-gvt</artifactId>
        <version>${batik.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.xmlgraphics</groupId>
        <artifactId>batik-svg-dom</artifactId>
        <version>${batik.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <configuration>
            <archive>
              <!-- Use the manifest file generated by the OSGi Maven Bundle Plugin -->
              <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
            </archive>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.xwiki.commons</groupId>
          <artifactId>xwiki-commons-tool-xar-plugin</artifactId>
          <version>${commons.version}</version>
        </plugin>
        <plugin>
          <!-- Default configuration for the GWT maven plugin -->
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>gwt-maven-plugin</artifactId>
          <version>${gwt.maven.plugin.version}</version>
          <!-- We declare these dependencies here in case we use different value for ${gwt.version} and
               ${gwt.maven.plugin.version} variables.
               See http://mojo.codehaus.org/gwt-maven-plugin/user-guide/using-different-gwt-sdk-version.html -->
          <dependencies>
            <dependency>
              <groupId>com.google.gwt</groupId>
              <artifactId>gwt-user</artifactId>
              <version>${gwt.version}</version>
            </dependency>
            <dependency>
              <groupId>com.google.gwt</groupId>
              <artifactId>gwt-dev</artifactId>
              <version>${gwt.version}</version>
            </dependency>
          </dependencies>
          <configuration>
            <mode>htmlunit</mode>
            <testTimeOut>600</testTimeOut>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>test</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <configuration>
            <!--
              We exclude the GWT client tests because of http://jira.codehaus.org/browse/SUREFIRE-508 (Cannot run
              GWTTestCases with Surefire). GWT client tests are currently run by gwt-maven-plugin.
            -->
            <excludes>
              <exclude>**/gwt/**/client/**/*.java</exclude>
            </excludes>
            <systemProperties combine.children="append">
              <!-- Tells XWiki Platform Test module to generate screenshots in the target dir when a test is failing -->
              <property>
                <name>screenshotDirectory</name>
                <value>${basedir}/target/screenshots</value>
              </property>
            </systemProperties>
            <!-- Verify that unit tests don't output anything to stdout/stderr -->
            <properties>
              <property>
                <name>listener</name>
                <value>org.xwiki.test.CaptureConsoleRunListener</value>
              </property>
            </properties>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>org.xwiki.commons</groupId>
              <artifactId>xwiki-commons-tool-test-simple</artifactId>
              <version>${commons.version}</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>com.atlassian.maven.plugins</groupId>
          <artifactId>maven-clover2-plugin</artifactId>
          <configuration>
            <!--
              Exclude GWT client code since otherwise it would mean they would get instrumented by Clover and GWT would
              complain that it doesn't find the sources for Clover at runtime.
            -->
            <excludes>
              <exclude>**/gwt/**/client/**/*.java</exclude>
            </excludes>
          </configuration>
        </plugin>
        <plugin>
          <groupId>net.alchim31.maven</groupId>
          <artifactId>yuicompressor-maven-plugin</artifactId>
          <version>1.3.2</version>
          <executions>
            <execution>
              <!-- Minify the WebJar resources before packing the jar. -->
              <id>minify-webjar-resources</id>
              <!-- Make sure this execution is not used by default (you need to call it explicitly in your pom). -->
              <phase>none</phase>
              <goals>
                <goal>compress</goal>
              </goals>
              <configuration>
                <sourceDirectory>${webjar.contentDirectory}</sourceDirectory>
                <excludes>
                  <exclude>**/*.min.*</exclude>
                </excludes>
                <outputDirectory>${webjar.contentDirectory}</outputDirectory>
              </configuration>
            </execution>
          </executions>
          <configuration>
            <skip>${xwiki.minification.skip}</skip>
            <!-- We prefer to use the JSHint Maven Plugin because it gives us more control over the validation rules. -->
            <jswarn>false</jswarn>
            <!-- The default suffix uses the dash as separator (-min) but we prefer the dot (.min) because it is
              currently more widely used in the JavaScript world. -->
            <suffix>.min</suffix>
          </configuration>
        </plugin>
        <plugin>
          <groupId>com.cj.jshintmojo</groupId>
          <artifactId>jshint-maven-plugin</artifactId>
          <version>1.6.0</version>
          <executions>
            <execution>
              <goals>
                <goal>lint</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <globals>require,define</globals>
            <!-- See https://github.com/jshint/jshint/blob/master/examples/.jshintrc -->
            <options>camelcase,maxparams:5,maxdepth:3,maxstatements:20,maxcomplexity:10,maxlen:120</options>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <executions>
            <execution>
              <!-- Copy the WebJar resources to the right path before packing the jar. -->
              <id>copy-webjar-resources</id>
              <!-- Make sure this execution is not used by default (you need to call it explicitly in your pom). -->
              <phase>none</phase>
              <goals>
                <goal>resources</goal>
              </goals>
              <configuration>
                <outputDirectory>${webjar.contentDirectory}</outputDirectory>
              </configuration>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <!-- Generate OSGi Manifest information to all XWiki Core JARs -->
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <executions>
          <execution>
            <id>bundle-manifest</id>
            <phase>process-classes</phase>
            <goals>
              <goal>manifest</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.revapi</groupId>
        <artifactId>revapi-maven-plugin</artifactId>
        <configuration>
          <analysisConfiguration><![CDATA[
            {
              "revapi": {
                "java": {
                  "filter": {
                    "packages": {
                      "regex": true,
                      "include": ["org\\.xwiki\\..*"],
                      "exclude": ["org\\.xwiki\\..*\\.internal(\\..*)?", "org\\.xwiki\\..*\\.test(\\..*)?"]
                    }
                  }
                },
                "ignore": [
                  {
                    "code": "java.method.returnTypeTypeParametersChanged",
                    "old": "method java.util.List<? extends org.xwiki.extension.ExtensionDependency> org.xwiki.extension.AbstractExtension::getDependencies()",
                    "new": "method java.util.List<org.xwiki.extension.ExtensionDependency> org.xwiki.extension.AbstractExtension::getDependencies()",
                    "justification": "? return type makes signature more complex for nothing"
                  },
                  {
                    "code": "java.method.returnTypeTypeParametersChanged",
                    "old": "method java.util.Collection<? extends org.xwiki.extension.ExtensionDependency> org.xwiki.extension.Extension::getDependencies()",
                    "new": "method java.util.Collection<org.xwiki.extension.ExtensionDependency> org.xwiki.extension.Extension::getDependencies()",
                    "justification": "? return type makes signature more complex for nothing"
                  },
                  {
                    "code": "java.method.returnTypeTypeParametersChanged",
                    "old": "method java.util.Collection<? extends org.xwiki.extension.ExtensionDependency> org.xwiki.extension.wrap.WrappingExtension<E extends org.xwiki.extension.Extension>::getDependencies()",
                    "new": "method java.util.Collection<org.xwiki.extension.ExtensionDependency> org.xwiki.extension.wrap.WrappingExtension<E extends org.xwiki.extension.Extension>::getDependencies()",
                    "justification": "? return type makes signature more complex for nothing"
                  }
                ]
              }
            }
          ]]></analysisConfiguration>
        </configuration>
      </plugin>
    </plugins>
    <extensions>
      <!-- Needed to add support for the "xar" packaging -->
      <extension>
        <groupId>org.xwiki.commons</groupId>
        <artifactId>xwiki-commons-tool-xar-handlers</artifactId>
        <version>${commons.version}</version>
      </extension>
    </extensions>
  </build>
  <modules>
    <!-- Sorted Alphabetically -->
    <module>xwiki-platform-activeinstalls</module>
    <module>xwiki-platform-activitystream</module>
    <module>xwiki-platform-administration</module>
    <module>xwiki-platform-annotations</module>
    <module>xwiki-platform-application-manager</module>
    <module>xwiki-platform-appwithinminutes</module>
    <module>xwiki-platform-attachment</module>
    <module>xwiki-platform-autotag</module>
    <module>xwiki-platform-blog</module>
    <module>xwiki-platform-bridge</module>
    <module>xwiki-platform-cache</module>
    <module>xwiki-platform-captcha</module>
    <module>xwiki-platform-chart</module>
    <module>xwiki-platform-classloader</module>
    <module>xwiki-platform-component</module>
    <module>xwiki-platform-configuration</module>
    <module>xwiki-platform-containers</module>
    <module>xwiki-platform-crypto</module>
    <module>xwiki-platform-csrf</module>
    <module>xwiki-platform-dashboard</module>
    <module>xwiki-platform-diffplugin</module>
    <module>xwiki-platform-display</module>
    <module>xwiki-platform-eventstream</module>
    <module>xwiki-platform-extension</module>
    <module>xwiki-platform-feed</module>
    <module>xwiki-platform-filter</module>
    <module>xwiki-platform-flamingo</module>
    <module>xwiki-platform-flavor</module>
    <module>xwiki-platform-formula</module>
    <module>xwiki-platform-git</module>
    <module>xwiki-platform-groovy</module>
    <module>xwiki-platform-gwt</module>
    <module>xwiki-platform-help</module>
    <module>xwiki-platform-icon</module>
    <module>xwiki-platform-index</module>
    <module>xwiki-platform-instance</module>
    <module>xwiki-platform-invitation</module>
    <module>xwiki-platform-jira</module>
    <module>xwiki-platform-job</module>
    <module>xwiki-platform-jodatime</module>
    <module>xwiki-platform-ldap</module>
    <module>xwiki-platform-lesscss</module>
    <module>xwiki-platform-linkchecker</module>
    <module>xwiki-platform-livetable</module>
    <module>xwiki-platform-localization</module>
    <module>xwiki-platform-logging</module>
    <module>xwiki-platform-mail</module>
    <module>xwiki-platform-mailsender</module>
    <module>xwiki-platform-menu</module>
    <module>xwiki-platform-messagestream</module>
    <module>xwiki-platform-model</module>
    <module>xwiki-platform-notifications</module>
    <module>xwiki-platform-observation</module>
    <module>xwiki-platform-office</module>
    <module>xwiki-platform-oldcore</module>
    <module>xwiki-platform-panels</module>
    <module>xwiki-platform-query</module>
    <module>xwiki-platform-ratings</module>
    <module>xwiki-platform-refactoring</module>
    <module>xwiki-platform-release</module>
    <module>xwiki-platform-rendering</module>
    <module>xwiki-platform-repository</module>
    <module>xwiki-platform-resource</module>
    <module>xwiki-platform-rest</module>
    <module>xwiki-platform-sandbox</module>
    <module>xwiki-platform-sharepage</module>
    <module>xwiki-platform-scheduler</module>
    <module>xwiki-platform-search</module>
    <module>xwiki-platform-security</module>
    <module>xwiki-platform-sheet</module>
    <module>xwiki-platform-skin</module>
    <module>xwiki-platform-statistics</module>
    <module>xwiki-platform-store</module>
    <module>xwiki-platform-svg</module>
    <module>xwiki-platform-tag</module>
    <module>xwiki-platform-template</module>
    <module>xwiki-platform-test</module>
    <module>xwiki-platform-tree</module>
    <module>xwiki-platform-user</module>
    <module>xwiki-platform-uiextension</module>
    <module>xwiki-platform-url</module>
    <module>xwiki-platform-velocity</module>
    <module>xwiki-platform-vfs</module>
    <module>xwiki-platform-watchlist</module>
    <module>xwiki-platform-web</module>
    <module>xwiki-platform-webdav</module>
    <module>xwiki-platform-webjars</module>
    <module>xwiki-platform-wiki</module>
    <module>xwiki-platform-wysiwyg</module>
    <module>xwiki-platform-xar</module>
    <module>xwiki-platform-xclass</module>
    <module>xwiki-platform-xml</module>
    <module>xwiki-platform-zipexplorer</module>
  </modules>
  <profiles>
    <!-- Profile to build Legacy modules -->
    <profile>
      <id>legacy</id>
      <modules>
        <module>xwiki-platform-legacy</module>
      </modules>
    </profile>
    <profile>
      <!-- Allows running GWT tests manually -->
      <id>gwt-test-manual</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>gwt-maven-plugin</artifactId>
            <configuration>
              <mode>manual</mode>
              <productionMode>true</productionMode>
              <style>DETAILED</style>
              <!-- HACK: We inject the GWT arguments in the out parameter because we have no other option. -->
              <out>target/www-test -port 54321 -codeServerPort 12345</out>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
