## ---------------------------------------------------------------------------
## See the NOTICE file distributed with this work for additional
## information regarding copyright ownership.
##
## This is free software; you can redistribute it and/or modify it
## under the terms of the GNU Lesser General Public License as
## published by the Free Software Foundation; either version 2.1 of
## the License, or (at your option) any later version.
##
## This software is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
## Lesser General Public License for more details.
##
## You should have received a copy of the GNU Lesser General Public
## License along with this software; if not, write to the Free
## Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
## 02110-1301 USA, or see the FSF site: http://www.fsf.org.
## ---------------------------------------------------------------------------
###
### Main "edit" template
###
### General wrapper for edit actions
###
##
## Check if actually in edit action
##
#if($xcontext.getAction() != 'edit' && $xcontext.getAction() != 'inline')
  $response.sendRedirect($doc.getURL('edit', "editor=$!{request.getParameter('editor')}"))
#end
##
## Check if the edit action requires a confirmation.
##
#template('edit_macros.vm')
#getEditConfirmation()
#if ($editConfirmation)
  #template("startpage.vm")
  <div class="main">
    <div id="mainContentArea">
      ## The edit confirmation message may contain block level content that cannot be put into the paragrah generated by
      ## the message box macro, so we print the message ourselves into the message box body.
      #xwikimessageboxstart($editConfirmation.title $NULL)
      $editConfirmation.message
      <p>
        <a href="$tdoc.getURL()" class="btn btn-default">$escapetool.xml($editConfirmation.reject)</a>
        #if ($editConfirmation.confirm)
          ## Allow the user to force the edit.
          #set ($newQueryString = "$!request.getQueryString().replaceAll('&', '&amp;').replaceAll('&amp;amp;', '&amp;')"
            + '&amp;force=1')
          #set ($forceEditURL = $tdoc.getURL($xcontext.action, ${newQueryString}))
          <a href="$forceEditURL" class="btn btn-warning">$escapetool.xml($editConfirmation.confirm)</a>
          $response.setStatus(423)
        #else
          ## We cannot force the edit.
          $response.setStatus(403)
        #end
      </p>
      #xwikimessageboxend()
    </div>## mainContentArea
  </div>## main
  #template("endpage.vm")
#else
  ##
  ## Determine what editor to show
  ##
  #if ("$!editor" == '')
    ## Normally no special characters should exist in the editor parameter, so this is just a protection measure.
    #set ($editor = "$!{escapetool.xml($request.getParameter('editor'))}")
    #if ($editor == '')
      #getDefaultDocumentEditor($editor)
    #end
  #end
  #if ($editor == 'inline')
    ## The inline editor uses the view layout, unlike the rest of the editors.
    #template('startpage.vm')
    #template('editinline.vm')
    #template('endpage.vm')
  #else
  ##
  ## "Compute" the title
  ##
  #set ($title = $services.localization.render("platform.web.editors.${editor}.pageTitle", [$tdoc.plainTitle]))
  #if ($title == "platform.web.editors.${editor}.pageTitle")
    #set ($title = $services.localization.render('platform.web.editors.unknown.pageTitle', [$tdoc.plainTitle]))
  #end
  ##
  ## Header
  ##
  #template("xwikivars.vm")
  #template("layoutvars.vm")
  #template("htmlheader.vm")
  #if($displayMainMenu)
    <div id="menuview">
      #template("menus_view.vm")
    </div>
  #end
  #template("header.vm")
  #if($editor == 'wiki' || $editor == 'wysiwyg')
    <form id="edit" method="post" action="$doc.getURL('preview')" class="withLock xform">
    <div class="hidden">
    ## CSRF prevention
    <input type="hidden" name="form_token" value="$!{services.csrf.getToken()}" />

    ## Pass the section number when the form is submitted in order to affect only the specified section.
    ## We need to test if the section number is present to prevent a NumberFormatException for the empty string.
    #if("$!{request.section}" != '')
      <input type="hidden" name="section" value="$!{escapetool.xml($request.section)}" />
    #end
    ## This input is used by the full screen widget: it stores the selector of the maximized element, so that the full screen can be restored when coming back from preview.
    <input type="hidden" name="x-maximized" value="$!{escapetool.xml($request.get('x-maximized'))}"/>
    #if ("$!request.template" != '')
      ## Used when creating a document (i.e. editing for the first time) from a template to wait asynchronously
      ## (with javascript progress information) for the save operation to finish. Without this, the save operation
      ## is synchronous by default.
      #set ($async = $request.async)
      #if ("$!async" == '')
        #set ($async = 'true')
      #end
      <input type="hidden" name="async" value="$escapetool.xml($async)" />
    #end
    </div>
  #end
  ##################
  ##   Edit zone  ##
  ##################
  <div id="xwikieditor">
  <div id="xwikieditorinner">
  <div class="leftsidecolumns main">
  <div id="editcolumn" class="editor editor-${editor}">
  <div class="alleditcontent">
  <div id="mainEditArea">
  #if(($editor == 'wiki' || $editor == 'wysiwyg' || $editor == 'inline') && $services.parentchild.isParentChildMechanismEnabled())
    ## Note: the inline editor never reaches this part since it is handled separately. We add the edit parent button in editinline.vm explicitly.
    <div class='edit-meta-tools'>
      <a id='editParentTrigger' class='tool edit-parent' href='#mainEditArea' title="$services.localization.render('core.editors.content.parentField.edit.title')">[$services.localization.render('core.editors.content.parentField.edit')]</a>
    </div>
  #end
  #template("hierarchy.vm")
  <div class="row">
    #if ($displayContentMenu)
      <div class="col-xs-12 col-md-5 pull-right">
        #template("menus_content.vm")
      </div>
    #end
    #if (($editor == 'wiki' || $editor == 'wysiwyg') && !$request.section)
      <div id="editMeta" class="col-xs-12#if ($displayContentMenu) col-md-7#end">
        #template('editmeta.vm')
      </div>
    #else
      <div id="document-title" class="col-xs-12#if ($displayContentMenu) col-md-7#end"><h1>
      #if($editor == 'rights')
        $services.localization.render('core.editors.rights.title', [$escapetool.xml($doc.plainTitle), $doc.getURL()])
      #elseif($editor == 'object')
        $services.localization.render('core.editors.object.title', [$escapetool.xml($doc.plainTitle), $doc.getURL()])
      #elseif($editor == 'class')
        $services.localization.render('core.editors.class.title', [$escapetool.xml($doc.fullName), $doc.getURL()])
      #end
      </h1></div>
    #end
  </div> ## row
  #template("edit${editor}.vm")
  ## This javascript must be placed here since it uses velocity variables set in the template above.
  <script>
    //<![CDATA[
    if ($('tmEditWysiwyg')) {
      // Manage switch from wiki to wysiwyg, content must be preserved between those editors.
      Event.observe($('tmEditWysiwyg'), "click", function(event) {
        #if($doc.syntax.toIdString() == "xwiki/1.0")
        if (checkAdvancedContent("$services.localization.render('checkadvancedcontent')") == false) {
          Event.stop(event);
          return;
        }
        #end
        document.forms.${formname}.action='$doc.getURL("edit", "editor=wysiwyg&$languageparams")';
        document.forms.${formname}.submit();
        Event.stop(event);
      });

      // Manage switch from wysiwyg to wiki, content must be preserved between those editors.
      Event.observe($('tmEditWiki'), "click", function(event) {
        document.forms.${formname}.action='$doc.getURL("edit", "editor=wiki&$languageparams")';
        document.forms.${formname}.submit();
        Event.stop(event);
      });
    }
    //]]>
  </script>
  </div> ## mainEditArea
  </div> ## alleditcontent
  </div> ## editcolumn
  <div class="clearfix"></div>
  </div> ## leftsidecolumns
  #template("editpanels.vm")
  <div class="clearfix"></div>
  </div> ## xwikieditorinner
  </div> ## xwikieditor
  ##
  ## Footer
  ##
  #if($editor == 'wiki' || $editor == 'wysiwyg')
    </form>
  #end
  #template("footer.vm")
  #template("htmlfooter.vm")
  #end ## $editor != 'inline'
#end
