## -------------------------------------------------------------------------------------------------------------------
## In non-Servlet mode (in Portlet mode for example) we don't display the <HTML>, <HEAD> and <BODY>
## elements.
## -------------------------------------------------------------------------------------------------------------------
#if($isInServletMode)
## TODO this should be more specific
#if("$!request.noDoctype" != "true")
<!DOCTYPE html>
#end
#macro(xwikiDataAttribute $name $value)
  data-xwiki-${name}="$escapetool.xml($value)"
#end
<html xmlns="http://www.w3.org/1999/xhtml" lang="$xcontext.locale" xml:lang="$xcontext.locale"
  ## NOTE: you should not use these attributes in javascript directly, but via the 'xwiki-meta' module instead:
  ## http://www.xwiki.org/xwiki/bin/view/Documentation/DevGuide/FrontendResources/JavaScriptAPI/#HGetsomeinformationaboutthecurrentdocument
  #xwikiDataAttribute('reference', $services.model.serialize($doc.documentReference, 'default'))
  #xwikiDataAttribute('document', $doc.fullName)##deprecated, use 'reference' instead
  #xwikiDataAttribute('wiki', $doc.wiki)##deprecated, use 'reference' instead
  #xwikiDataAttribute('space', $doc.space)##deprecated, use 'reference' instead
  #xwikiDataAttribute('page', $doc.name)##deprecated, use 'reference' instead
  #xwikiDataAttribute('version', $tdoc.version)
  #xwikiDataAttribute('rest-url', $services.rest.url($tdoc.documentReferenceWithLocale))
  #xwikiDataAttribute('form-token', "$!{services.csrf.token}")
  #xwikiDataAttribute('user-reference', $!services.model.serialize($xcontext.userReference, 'default'))
  #xwikiDataAttribute('locale', $tdoc.locale)>
  <head>
    ## ---------------------------------------------------------------------------------------------------------------
    ## Ensure that the Content-Type meta directive is the first one in the header.
    ## See http://www.w3.org/International/tutorials/tutorial-char-enc/
    ## ---------------------------------------------------------------------------------------------------------------
    <meta http-equiv="Content-Type" content="text/html; charset=$xwiki.encoding" />
    ## ---------------------------------------------------------------------------------------------------------------
    ## Compute the title.
    ## ---------------------------------------------------------------------------------------------------------------
    #if(!$title)
      #set($title = $!xwiki.getSpacePreference('title'))
      #if($title != '')
        ## Evaluate the title since it can have velocity code.
        #set($title = "#evaluate($title)")
        ## Don`t forget to escape it.
        #set($title = "$escapetool.xml($title)")
      #else
        #set($title = "XWiki - $escapetool.xml($!doc.space) - $escapetool.xml($!tdoc.displayTitle)")
      #end
    #else
      #set($title = $escapetool.xml($title))
    #end
    <title>$title</title>
    ## ---------------------------------------------------------------------------------------------------------------
    ## Force Compatibility mode for IE browsers to use the latest rendering mode. In order to work, the declaration 
    ## needs to be placed in the <head>, before all other elements except for the <title> and other <meta> elements
    ## See http://msdn.microsoft.com/en-us/library/jj676915(v=vs.85).aspx#SETMODE
    ## ---------------------------------------------------------------------------------------------------------------
    #set($userAgent = $request.getHeader('User-Agent'))
    #if($userAgent.contains('MSIE') || $userAgent.contains('Trident'))
      ## Add a meta-tag to disable the IE compatibility mode
      <meta http-equiv="X-UA-Compatible" content="IE=edge" />
      ## Add the equivalent HTTP header to disable the compatibility mode (the meta is not enough on intranet sites)
      #set($discard = $response.addHeader('X-UA-Compatible', 'IE=edge'))
    #end
    ## ---------------------------------------------------------------------------------------------------------------
    ## Enable Responsiveness for phones
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    ## ---------------------------------------------------------------------------------------------------------------
    ## Favicons
    ## Legacy, for IE
    <link rel="shortcut icon" href="$xwiki.getSkinFile('icons/xwiki/favicon.ico')" />
    ## Present, HTML5
    <link rel="icon" href="$xwiki.getSkinFile('icons/xwiki/favicon16.png')" type="image/png" />
    ## The future, scalable icons
    <link rel="icon" href="$xwiki.getSkinFile('icons/xwiki/favicon.svg')" type="image/svg+xml" />
    ## For smart phones and tablets
    <link rel="apple-touch-icon" href="$xwiki.getSkinFile('icons/xwiki/favicon144.png')" />
    ## ---------------------------------------------------------------------------------------------------------------
    ## Universal edit button. See http://universaleditbutton.org
    ## ---------------------------------------------------------------------------------------------------------------
    #if($xcontext.action=="view")
      <link rel="alternate" type="application/x-wiki" title="Edit" href="$doc.getURL("edit")" />
    #end
    ## ---------------------------------------------------------------------------------------------------------------
    ## Make sure search engine spiders give the plain page instead of ?viewer=comments, ?viewer=code etc.
    ## ---------------------------------------------------------------------------------------------------------------    
    <link rel="canonical" href="$doc.getURL('view')" />
    ## ---------------------------------------------------------------------------------------------------------------
    ## Add user-defined Meta directives.
    ## ---------------------------------------------------------------------------------------------------------------
    ## Note: Velocity code, so it needs to be evaluated.
    #evaluate($!xwiki.getSpacePreference("meta"))
    ## ---------------------------------------------------------------------------------------------------------------
    ## Hook for inserting Link extensions. This will be replaced with the pulled link references.
    ## ---------------------------------------------------------------------------------------------------------------
    <!-- com.xpn.xwiki.plugin.skinx.LinkExtensionPlugin -->
    <link href="$services.webjars.url('drawer', 'css/drawer.min.css')" rel="stylesheet" type="text/css" />
    #template("stylesheets.vm")
    #template("javascript.vm")
  </head>
  #set($bodyTagName = 'body')
#else ## Portlet Mode
  #template("stylesheets.vm")
  #template("javascript.vm")
  #set($bodyTagName = 'div')
#end
## TODO: fix this from css
#set($bodyAction = $xcontext.action)
#if($xcontext.action == "admin" || $xcontext.action == "import" || $xcontext.action == "export")
  #set($bodyAction = "view")
#end
## These elements will be closed in the htmlfooter.vm file
<$bodyTagName id="body" class="skin-flamingo wiki-${xcontext.database} space-${escapetool.xml($doc.space.replaceAll(' ', '_'))} ${bodyAction}body #if($showLeftPanels == "0")hideleft#end#if($showRightPanels == "0")hideright#end#if($hidecolumns && ($!hidecolumns == 1))hidelefthideright#end #if($showLeftPanels != "0" && $showRightPanels != "0" && $!hidecolumns != 1)content#end panel-left-width-${leftPanelsWidth} panel-right-width-${rightPanelsWidth} drawer drawer-right drawer-close">
<div id="xwikimaincontainer">
<div id="xwikimaincontainerinner">
