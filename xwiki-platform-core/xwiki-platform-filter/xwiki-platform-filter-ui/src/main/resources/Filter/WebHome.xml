<?xml version="1.0" encoding="UTF-8"?>
<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.1">
  <web>Filter</web>
  <name>WebHome</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1397121746000</creationDate>
  <parent>Main.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1397125381000</date>
  <contentUpdateDate>1397125381000</contentUpdateDate>
  <version>1.1</version>
  <title>Filter streams</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{warning}}Filter module is still young and experimental and while exporting should be safe enough, importing can be more risky for the current instance.{{/warning}}

{{velocity output="false"}}
## TODO: Move what is needed is a place common to filter and extensions
## NOTE: We don't use #template because it currently registers the Velocity macros in a different namespace which makes
## them unavailable in the current wiki page or the current template. We also tried #parse but it "randomly" fails to
## register the Velocity macros from the parsed template. The only solution we found is to use #evaluate with #include
## but unfortunately this doesn't allow the template to be overridden from the skin.
#evaluate("#include('extension.vm')")
#set ($discard = $xwiki.ssfx.use('uicomponents/extension/extension.css', true))
#set ($discard = $xwiki.jsfx.use('uicomponents/extension/extension.js', true))
{{/velocity}}

{{include reference="FilterStreamDescriptorForm"/}}

{{velocity output="true"}}
#set($input = $request.input)
#set($output = $request.output)

#set($inputProperties = {})
#foreach($parameterName in $request.parameterNames)
  #if ($parameterName.startsWith('filter_input_properties_descriptor_'))
    #set($propertyName = $parameterName.substring(39))
    #if ($request.getParameter($parameterName) &amp;&amp; $request.getParameter($parameterName) != '')
      #set($void = $inputProperties.put($propertyName, $request.getParameter($parameterName)))
    #end
  #end
#end
## Set response output by default
#if (!$inputProperties.source &amp;&amp; $services.filter.getInputFilterStreamDescriptor($request.input).getPropertyDescriptor('source'))
  #set($sourceStandardInput = true)
  #set($void = $inputProperties.put('source', $request.inputStream))
#end

#set($outputProperties = {})
#foreach($parameterName in $request.parameterNames)
  #if ($parameterName.startsWith('filter_output_properties_descriptor_'))
    #set($propertyName = $parameterName.substring(40))
    #if ($request.getParameter($parameterName) &amp;&amp; $request.getParameter($parameterName) != '')
      #set($void = $outputProperties.put($propertyName, $request.getParameter($parameterName)))
    #end
  #end
#end
## Set response output by default
#if (!$outputProperties.target &amp;&amp; $services.filter.getOutputFilterStreamDescriptor($request.output).getPropertyDescriptor('target'))
  #set($targetStandardOutput = true)
  #set($void = $outputProperties.put('target', $services.filter.createOutputStreamOutputTarget($response.outputStream, true)))
#end
{{/velocity}}

{{velocity}}
#if ($request.convert)
  #if ($targetStandardOutput)
    $response.setContentType('application/octet-stream')
    $response.setHeader('Content-Disposition', 'attachment; filename=target');
    $services.filter.convert($input, $inputProperties, $output, $outputProperties)
    $xcontext.setFinished(true)
  #else
    #if ($sourceStandardInput)
      #set($job = $services.filter.convert($input, $inputProperties, $output, $outputProperties))
    #else
      #set($job = $services.filter.startConvert($input, $inputProperties, $output, $outputProperties))
    #end
    #if ($job)
      {{success}}Conversion started.{{/success}}
    #else
      #set ($lastError = $services.filter.lastError)
      #if ($lastError)
        {{error}}
          Failed to start conversion

          {{html}}
            &lt;pre&gt;
              #printThrowable($lastError)
            &lt;/pre&gt;
          {{/html}}
        {{/error}}
      #end
    #end
  #end
#end
{{/velocity}}

{{include reference="FilterStreamJob"/}}

{{velocity}}
{{html}}
&lt;form class="xform" method="post"&gt;
&lt;div id="filter_form"&gt;
  &lt;dl&gt;
    &lt;dt&gt;&lt;label for="filter_input_select"&gt;Input type&lt;/label&gt;&lt;/dt&gt;
    &lt;dd&gt;
      &lt;select name="input" id="filter_input_type"&gt;
        #foreach($type in $services.filter.availableInputStreams)
          &lt;option value="$escapetool.xml($type.serialize())"#if($type.serialize() == $input)selected="selected"#end&gt;$services.filter.getInputFilterStreamDescriptor($type).name ($type)&lt;/option&gt;
          #if (!$input)
            #set($input = $type.serialize())
          #end
        #end
      &lt;/select&gt;
    &lt;/dd&gt;
    #if ($input)
    &lt;dt&gt;&lt;label&gt;Input configuration&lt;/label&gt;&lt;/dt&gt;
    &lt;dd&gt;
      #filterDescriptorForm($services.filter.getInputFilterStreamDescriptor($input), 'filter_input_properties')
    &lt;/dd&gt;
    #end

    &lt;dt&gt;&lt;label for="filter_output_select"&gt;Output type&lt;/label&gt;&lt;/dt&gt;
    &lt;dd&gt;
      &lt;select name="output" id="filter_output_type"&gt;
        #foreach($type in $services.filter.availableOutputStreams)
          &lt;option value="$escapetool.xml($type.serialize())"#if($type.serialize() == $output)selected="selected"#end&gt;$services.filter.getOutputFilterStreamDescriptor($type).name ($type)&lt;/option&gt;
          #if (!$output)
            #set($output = $type.serialize())
          #end
        #end
      &lt;/select&gt;
    &lt;/dd&gt;
    #if ($output)
    &lt;dt&gt;&lt;label&gt;Output configuration&lt;/label&gt;&lt;/dt&gt;
    &lt;dd&gt;
      #filterDescriptorForm($services.filter.getOutputFilterStreamDescriptor($output), 'filter_output_properties')
    &lt;/dd&gt;
    #end
  &lt;/dl&gt;

  &lt;p&gt;
  &lt;input class="button" type="submit" name="convert" value="Convert"/&gt;
  &lt;/p&gt;
&lt;/div&gt;
&lt;/form&gt;
{{/html}}
{{/velocity}}</content>
  <object>
    <name>Filter.WebHome</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>752192f2-18d6-47ae-9c5a-4e4e151ef9fe</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>forbid</cache>
    </property>
    <property>
      <code>$('filter_input_type').observe('change', function() {
  new Ajax.Updater('filter_input_properties', '${xwiki.getURL('FilterStreamDescriptorForm', 'get')}', {
    parameters:
      {
        type: this.value,
        id: 'filter_input_properties',
        outputSyntax: 'plain',
        input: 'true'
      }
  });
})

$('filter_output_type').observe('change', function() {
    new Ajax.Updater('filter_output_properties', '${xwiki.getURL('FilterStreamDescriptorForm', 'get')}', {
    parameters:
      {
        type: this.value,
        id: 'filter_output_properties',
        outputSyntax: 'plain',
        input: 'false'
      }
  });
})</code>
    </property>
    <property>
      <name>Update stream configuration form</name>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>currentPage</use>
    </property>
  </object>
</xwikidoc>
