<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc>
  <web>XWiki</web>
  <name>WysiwygEditorConfigSheet</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <parent>XWiki.WysiwygEditorConfigClass</parent>
  <creator>xwiki:XWiki.Admin</creator>
  <author>xwiki:XWiki.Admin</author>
  <customClass/>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <creationDate>1364502206000</creationDate>
  <date>1364563225000</date>
  <contentUpdateDate>1364562921000</contentUpdateDate>
  <version>1.1</version>
  <title>#if($doc.name == 'WysiwygEditorConfigSheet')$services.localization.render('wysiwyg.config.sheet.title')#{else}$services.localization.render('wysiwyg.config.title')#end</title>
  <defaultTemplate/>
  <validationScript/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.0</syntaxId>
  <hidden>true</hidden>
  <object>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <name>XWiki.WysiwygEditorConfigSheet</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>8323d574-1519-4321-9d04-90bf5f1872a9</guid>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>#set($super = '$super')
var XWiki = (function (XWiki) {
// Start XWiki augmentation.
XWiki.HSortableList = Class.create({
  sortableOptions : {tag:'li', overlap: 'horizontal', constraint: 'horizontal'},
  listItemTemplate : '&lt;li&gt;&lt;span class="value" title="$escapetool.xml($services.localization.render('wysiwyg.admin.widgets.sortableList.hint'))"&gt;__value__&lt;/span&gt;&lt;span class="separator"&gt;[&lt;/span&gt;&lt;span title="$escapetool.xml($services.localization.render('wysiwyg.admin.widgets.sortableList.delete'))" class="delete"&gt;X&lt;/span&gt;&lt;span class="separator"&gt;]&lt;/span&gt;&lt;/li&gt;',
  initialize : function(values, duplicatesAllowed) {
    this.duplicatesAllowed = !!duplicatesAllowed;
    this.list = this._createList(values);
    this._registerEventHandlers();
  },
  _createList : function(values) {
    var items = new Array(values.length + 1).join(this.listItemTemplate);
    var list = new Element('ul', {'class': 'hSortable'}).update(items);
    for(var i = 0; i &lt; values.length; i++) {
      $(list.childNodes.item(i)).down('.value').firstChild.nodeValue = values[i];
    }
    return list;
  },
  _registerEventHandlers : function() {
    this.deleteHandler = this._onDeleteListItem.bindAsEventListener(this);
    this.list.select('.delete').each(function(item) {
      item.observe('click', this.deleteHandler);
    }.bind(this));
  },
  _onDeleteListItem : function(event) {
    var target = Event.element(event);
    Event.stopObserving(target, 'click', this.deleteHandler);
    target.up('li').remove();
    // We need to re-create the sortable list whenever we add/remove items.
    Sortable.create(this.list, this.sortableOptions);
  },
  attachTo : function(parent) {
    parent.appendChild(this.list);
    Sortable.create(this.list, this.sortableOptions);
  },
  contains : function(value) {
    var values = this.list.select('.value');
    for(var i = 0; i &lt; values.length; i++) {
      if (values[i].firstChild.nodeValue == value) {
        return true;
      }
    }
    return false;
  },
  addListItem : function(value) {
    if (value.length &gt; 0 &amp;&amp; (this.duplicatesAllowed || !this.contains(value))) {
      var item = $(new Element('ul').update(this.listItemTemplate).firstChild);
      item.down('.value').firstChild.nodeValue = value;
      this.list.appendChild(item);
      $(this.list.lastChild).down('.delete').observe('click', this.deleteHandler);
      // We need to re-create the sortable list whenever we add/remove items.
      Sortable.create(this.list, this.sortableOptions);
    }
  },
  getValues : function() {
    var values = [];
    this.list.select('.value').each(function(value) {
      values.push(value.firstChild.nodeValue);
    });
    return values;
  }
});
XWiki.HSortableListWithInput = Class.create(XWiki.HSortableList, {
  initialize : function($super, values, duplicatesAllowed, possibleValues, inputTip) {
    $super(values, duplicatesAllowed);
    this.textInput = new Element('input', {type: 'text', 'class': 'withTip'});
    this.textInput.value = this.textInput.defaultValue = inputTip;
    this.addButton = new Element('input', {
      type: 'image',
      'class': 'icon',
      title: "$escapetool.javascript($services.localization.render('wysiwyg.admin.widgets.sortableList.add'))",
      src: "$xwiki.getSkinFile('icons/silk/add.png')",
      alt: "$escapetool.javascript($services.localization.render('wysiwyg.admin.widgets.sortableList.add'))"
    });
    this.container = new Element('div', {'class': 'hSortableWrapper'});
    this.container.insert(new Element('div').insert(this.textInput).insert(this.addButton)).insert(this.list);
    Event.observe(this.textInput, 'keydown', this.onKeyDown.bindAsEventListener(this));
    Event.observe(this.addButton, 'click', this.onClickAdd.bindAsEventListener(this));
    if (possibleValues) {
      this.suggestions = new Element('div', {'class': 'suggestions'}).hide();
      this.addButton.insert({'after': this.suggestions});
      new Autocompleter.Local(this.textInput, this.suggestions, possibleValues, {
        minChars: 0,
        choices: possibleValues.length,
        // We handle the display of the suggestions because Autocompleter uses by default Element#clonePosition() from
        // Prototype.js which is buggy (it doesn't work right neither in Firefox/Chrome nor in Internet Explorer).
        onShow: function(textInput, suggestions) {
          // Clear the in-line style. Calling Element#show() is not enough because the fade effect used on hide leaves
          // the opacity set.
          suggestions.writeAttribute('style', '');
        }
      });
    }
  },
  attachTo : function(parent) {
    parent.appendChild(this.container);
    Sortable.create(this.list, this.sortableOptions);
  },
  onKeyDown : function(event) {
    if (event.keyCode == Event.KEY_RETURN &amp;&amp; !this.suggestions.visible()) {
      this.onClickAdd(event);
    }
  },
  onClickAdd : function(event) {
    Event.stop(event);
    if (this.textInput.value != this.textInput.defaultValue) {
      this.addListItem(this.textInput.value);
    }
    Form.Element.activate(this.textInput);
  }
});
XWiki.SpaceSeparatedList = Class.create(XWiki.HSortableListWithInput, {
  initialize : function($super, values, duplicatesAllowed, possibleValues, inputTip) {
    $super(values.split(/\s+/), duplicatesAllowed, possibleValues ? possibleValues.split(/\s+/).sort() : null, inputTip);
  },
  addListItem : function($super, value) {
    ${super}(value.replace(/\s+/g, ''));
  },
  getValue : function() {
    return this.getValues().join(' ');
  }
});
// End XWiki augmentation.
return XWiki;
}(XWiki || {}));</code>
    </property>
    <property>
      <name>HSortableList</name>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <name>XWiki.WysiwygEditorConfigSheet</name>
    <number>1</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>ca7dd193-cf03-4030-b93a-9a1ce8da1474</guid>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>var XWiki = (function (XWiki) {
// Start XWiki augmentation.
XWiki.ColorPaletteEditor = Class.create({
  colorPickerInput : new Element('input', {type: 'text', tabindex: '-1', style: 'opacity: 0; height: 1px; width: 1px; z-index: -1; overflow: hidden; position: absolute;'}),
  initialize : function(colors, columnCount) {
    this.colors = colors;
    this.columnCount = columnCount;

    this.clickHandler = this.onClick.bindAsEventListener(this);
    this.setSize(this.getRowCount(), this.columnCount);
    this.initializeColorPaletteSizeControls();
  },
  setSize : function(rowCount, columnCount) {
    rowCount = window.parseInt(rowCount);
    columnCount = window.parseInt(columnCount);
    if (!window.isFinite(rowCount) || rowCount &lt;= 0 || !window.isFinite(columnCount) || columnCount &lt;= 0) {
      return;
    }

    this.columnCount = columnCount;

    var length = rowCount * columnCount;
    if (length &lt; this.colors.length) {
      this.colors.splice(length, this.colors.length - length);
    } else {
      for(var i = this.colors.length; i&lt; length; i++) {
        this.colors.push('transparent');
      }
    }

    // Recreate the color palette.
    var rowHTML = '&lt;tr&gt;' + new Array(columnCount + 1).join('&lt;td&gt;&lt;div&gt;&lt;/div&gt;&lt;/td&gt;') + '&lt;/tr&gt;';
    var tableHTML = '&lt;table class="colorPalette"&gt;&lt;tbody&gt;' + new Array(rowCount + 1).join(rowHTML) + '&lt;/tbody&gt;&lt;/table&gt;';
    var newColorPalette = new Element('div').update(tableHTML).firstChild;

    // Fill the color palette.
    for(var i = 0; i &lt; rowCount; i++) {
      for(var j = 0; j &lt; columnCount; j++) {
        var index = i * columnCount + j;
        newColorPalette.rows[i].cells[j].firstChild.style.backgroundColor = this.colors[index];
        newColorPalette.rows[i].cells[j].title = '$escapetool.javascript($services.localization.render('wysiwyg.admin.widgets.colorPaletteEditor.hint')): ' + this.colors[index];
      }
    }

    if (this.colorPalette) {
      Element.stopObserving(this.colorPalette, 'click', this.clickHandler);
      if (this.colorPalette.parentNode) {
        this.colorPalette.parentNode.replaceChild(newColorPalette, this.colorPalette);
      }
    }
    this.colorPalette = newColorPalette;
    Element.observe(this.colorPalette, 'click', this.clickHandler);
  },
  getColumnCount : function() {
    return this.columnCount;
  },
  getRowCount : function() {
    return Math.floor(1 + (Math.max(this.colors.length, 1) - 1) / this.columnCount);
  },
  getColors : function() {
    return this.colors;
  },
  getIndex : function(cell) {
    return cell.parentNode.rowIndex * this.columnCount + cell.cellIndex;
  },
  onClick : function(event) {
    var cell = Event.findElement(event, 'td');
    cell.appendChild(this.colorPickerInput);
    this.colorPickerInput.value = this.colors[this.getIndex(cell)];
    new ProColor({
      mode: 'popup',
      input: this.colorPickerInput,
      onClosed: this.onColorChange.bind(this, cell)
    });
  },
  onColorChange : function(cell) {
    this.colors[this.getIndex(cell)] = this.colorPickerInput.value;
    cell.firstChild.style.backgroundColor = this.colorPickerInput.value;
  },
  initializeColorPaletteSizeControls : function() {
    this.sizeControls = new Element('div', {id: 'colorPaletteSizeControls'}).update('&lt;label for="colorPaletteRowCount"&gt;$escapetool.xml($services.localization.render('wysiwyg.admin.widgets.colorPaletteEditor.rows')) &lt;/label&gt;&lt;input id="colorPaletteRowCount" type="text" size="3"/&gt; &lt;label for="colorPaletteColumnCount"&gt;$escapetool.xml($services.localization.render('wysiwyg.admin.widgets.colorPaletteEditor.columns')) &lt;/label&gt;&lt;input id="colorPaletteColumnCount" type="text" size="3"/&gt;&lt;input type="image" class="icon" title="$escapetool.xml($services.localization.render('wysiwyg.admin.widgets.colorPaletteEditor.refresh'))" src="$xwiki.getSkinFile('icons/silk/arrow_refresh.png')" alt="$escapetool.xml($services.localization.render('wysiwyg.admin.widgets.colorPaletteEditor.refresh'))"/&gt;');

    var rowCountField = this.sizeControls.down('input');
    rowCountField.value = this.getRowCount();
    rowCountField.observe('keydown', this._onSizeControlsKeyDown.bindAsEventListener(this));

    var columnCountField = this.sizeControls.down('input', 1);
    columnCountField.value = this.getColumnCount();
    columnCountField.observe('keydown', this._onSizeControlsKeyDown.bindAsEventListener(this));

    this.sizeControls.down('input', 2).observe('click', this._onUpdateColorPaletteSize.bindAsEventListener(this));
  },
  _onSizeControlsKeyDown : function(event) {
    if (event.keyCode == Event.KEY_RETURN) {
      this._onUpdateColorPaletteSize(event);
    }
  },
  _onUpdateColorPaletteSize : function(event) {
    Event.stop(event);
    this.setSize(this.sizeControls.down('input').value, this.sizeControls.down('input', 1).value);
  },
  attachColorPaletteTo : function(parent) {
    parent.appendChild(this.colorPalette);
  },
  attachColorPaletteSizeControlsTo : function(parent) {
    parent.appendChild(this.sizeControls);
  }
});
// End XWiki augmentation.
return XWiki;
}(XWiki || {}));</code>
    </property>
    <property>
      <name>ColorPaletteEditor</name>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <name>XWiki.WysiwygEditorConfigSheet</name>
    <number>2</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>185a9da6-6b0a-4095-97f7-aff994b9e857</guid>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>var XWiki = (function (XWiki) {
// Start XWiki augmentation.
XWiki.ListBox = Class.create({
  initialize : function(multiple, size, items) {
    this.selectElement = this._createList(items || [], size || 1, !!multiple);

    this.removeButton = new Element('input', {type: "image", 'class': 'icon', title: "$escapetool.javascript($services.localization.render('wysiwyg.admin.widgets.listBox.delete'))",  src: "$xwiki.getSkinFile('icons/silk/cross.png')", alt:"$escapetool.javascript($services.localization.render('wysiwyg.admin.widgets.listBox.delete'))"});
    this.removeButton.observe('click', this._onClickRemove.bindAsEventListener(this));

    this.container = new Element('div', {'class': 'listBoxWrapper'});
    this.container.appendChild(this.selectElement);
    this.container.appendChild(this.removeButton);
  },
  _createList : function(items, size, multiple) {
    var options = new Array(items.length + 1).join('&lt;option&gt;__label__&lt;/option&gt;');
    // Use a DIV to create the select otherwise it doesn't work in IE.
    var select = $(new Element('div').update('&lt;select size="' + window.parseInt(size) + (!!multiple ? '" multiple="multiple"&gt;' : '"&gt;') + options + '&lt;/select&gt;').firstChild);
    for(var i = 0; i &lt; items.length; i++){
      var item = items[i];
      if (typeof item == 'string') {
        // In IE6 and IE7 the option value doesn't default to the option label when not set.
        select.options[i].value = select.options[i].text = item;
      }
    }
    return select;
  },
  attachTo : function(parent) {
    parent.appendChild(this.container);
  },
  getSelectedOptions : function() {
    var selectedOptions = [];
    var options = this.selectElement.options;
    for(var i = 0; i &lt; options.length; i++) {
      var option = options[i];
      if (option.selected) {
        selectedOptions.push($(option));
      }
    }
    return selectedOptions;
  },
  selectOption : function(label, parent) {
    parent = parent || this.selectElement;
    var options = this.getOptions(parent);
    for(var i = 0; i &lt; options.length; i++) {
      var option = options[i];
      if (option.text == label) {
        option.selected = true;
        return;
      }
    }
  },
  _onClickRemove : function(event) {
    Event.stop(event);
    this.removeSelectedOptions();
  },
  removeSelectedOptions : function() {
    this.getSelectedOptions().each(function(option) {
      option.remove();
    });
  },
  getOptions : function(parent) {
    parent = parent || this.selectElement;
    if (parent == this.selectElement) {
      return $A(this.selectElement.options);
    }
    var options = [];
    var child = parent.firstChild;
    while(child) {
      if (child.nodeName.toLowerCase() == 'option') {
        options.push($(child));
      }
      child = child.nextSibling;
    }
    return options;
  },
  getValues : function(parent) {
    parent = parent || this.selectElement;
    var values = [];
    this.getOptions(parent).each(function(option) {
      values.push(option.value);
    });
    return values;
  },
  sortOptions : function(parent) {
    parent = parent || this.selectElement;
    var options = this.getOptions(parent);
    var data = [];
    options.each(function(option) {
      data.push({label: option.text, value: option.value});
    });
    data.sort(function(alice, bob) {
      return alice.label.localeCompare(bob.label);
    });
    for(var i = 0; i &lt; options.length; i++) {
      // We can't assign the label to options[i].text because we get "Invalid index" in IE6..
      if (options[i].textContent) {
        options[i].textContent = data[i].label;
      } else {
        options[i].innerText = data[i].label;
      }
      options[i].value = data[i].value;
    }
  },
  contains : function(label, parent) {
    parent = parent || this.selectElement;
    var options = this.getOptions(parent);
    for(var i = 0; i &lt; options.length; i++) {
      if (options[i].text == label) {
        return true;
      }
    }
    return false;
  },
  addOption : function(label, value, parent){
    parent = parent || this.selectElement;
    if (!label || label.length == 0 || this.contains(label, parent)) {
      return null;
    }
    var option = parent.ownerDocument.createElement('option');
    parent.appendChild(option);
    option.text = label;
    option.value = value || label;
    return option;
  }
});
XWiki.FontNameListBox = Class.create(XWiki.ListBox, {
  initialize : function($super, fontNames) {
    ${super}(true, 10, fontNames.split(/\s*,\s*/).sort());

    this.inputWrapper = new Element('div').update('&lt;input type="text" class="withTip"/&gt;&lt;input type="image" class="icon" title="$escapetool.xml($services.localization.render('wysiwyg.admin.widgets.listBox.add'))" src="$xwiki.getSkinFile('icons/silk/add.png')" alt="$escapetool.xml($services.localization.render('wysiwyg.admin.widgets.listBox.add'))"/&gt;');
    this.inputWrapper.firstChild.value = this.inputWrapper.firstChild.defaultValue = '$escapetool.javascript($services.localization.render('wysiwyg.admin.fontNames.add.hint'))';
    $(this.inputWrapper.firstChild).observe('keydown', this._onKeyDown.bindAsEventListener(this));
    $(this.inputWrapper.lastChild).observe('click', this._onClickAdd.bindAsEventListener(this));
  },
  attachTo : function($super, parent) {
    ${super}(parent);
    parent.appendChild(this.inputWrapper);
  },
  _onKeyDown : function(event) {
    if (event.keyCode == Event.KEY_RETURN) {
      this._onClickAdd(event);
    }
  },
  _onClickAdd : function(event) {
    Event.stop(event);
    var input = this.inputWrapper.firstChild;
    var fontName = input.value;
    if (fontName != input.defaultValue &amp;&amp; this.addOption(fontName)) {
      this.sortOptions();
      this.selectElement.selectedIndex = -1;
      this.selectOption(fontName);
    }
    Form.Element.activate(input);
  },
  getValue : function() {
    return this.getValues().join(', ');
  }
});
XWiki.StyleNameListBox = Class.create(XWiki.ListBox, {
  initialize : function($super, styleNames) {
    ${super}(true, 10, []);
    this.container.addClassName('floatLeft');

    this.selectElement.observe('change', this._onSelectionChange.bind(this));
    this._fillStyleNames(styleNames);
    this._initializeInputPanel();
  },
  _fillStyleNames : function(styleNames) {
    this.blockStyleGroup = new Element('optgroup', {'label': '$escapetool.javascript($services.localization.render('wysiwyg.admin.widgets.styleNamesEditor.blockStyles'))'});
    this.inlineStyleGroup = new Element('optgroup', {'label': '$escapetool.javascript($services.localization.render('wysiwyg.admin.widgets.styleNamesEditor.inlineStyles'))'});
    this.selectElement.appendChild(this.blockStyleGroup);
    this.selectElement.appendChild(this.inlineStyleGroup);

    styleNames.evalJSON().each(function(style) {
      style.label = style.label || style.name;
      style.inline = typeof style.inline == 'undefined' || !!style.inline;
      this.addOption(style.label, Object.toJSON(style), style.inline ? this.inlineStyleGroup : this.blockStyleGroup);
    }.bind(this));

    this.sortOptions(this.blockStyleGroup);
    this.sortOptions(this.inlineStyleGroup);
  },
  _initializeInputPanel : function() {
    this.inputPanel = new Element('div', {id: 'styleNamesInputPanel'}).update('&lt;label for="styleName"&gt;$escapetool.xml($services.localization.render('wysiwyg.admin.widgets.styleNamesEditor.styleName'))&lt;/label&gt;&lt;input id="styleName" type="text"/&gt;&lt;label for="styleLabel"&gt;$escapetool.xml($services.localization.render('wysiwyg.admin.widgets.styleNamesEditor.styleLabel'))&lt;/label&gt;&lt;input id="styleLabel" type="text"/&gt;&lt;label for="styleInline" style="float:right"&gt;&lt;input type="checkbox" id="styleInline" checked="checked"/&gt; $escapetool.xml($services.localization.render('wysiwyg.admin.widgets.styleNamesEditor.styleInline'))&lt;/label&gt;&lt;span class="buttonwrapper"&gt;&lt;input type="submit" value="$escapetool.xml($services.localization.render('wysiwyg.admin.widgets.styleNamesEditor.add'))" class="secondary button"/&gt;&lt;/span&gt;&lt;div class="clearfloats"&gt;&lt;/div&gt;');
    this.inputPanel.down('input[type="submit"]').observe('click', this._onAddStyleName.bindAsEventListener(this));
    this.inputPanel.down('#styleName').observe('keydown', this._onKeyDown.bindAsEventListener(this));
    this.inputPanel.down('#styleLabel').observe('keydown', this._onKeyDown.bindAsEventListener(this));
    this.inputPanel.down('#styleInline').observe('keydown', this._onKeyDown.bindAsEventListener(this));
  },
  attachTo : function($super, parent) {
    ${super}(parent);
    parent.appendChild(this.inputPanel);
    parent.appendChild(new Element('div', {'class': 'clearfloats'}));
  },
  _onSelectionChange : function() {
    if (this.selectElement.selectedIndex &gt;= 0) {
      var style = this.selectElement.options[this.selectElement.selectedIndex].value.evalJSON();
      $('styleName').value = style.name;
      $('styleLabel').value = style.label;
      $('styleInline').checked = style.inline;
    }
  },
  _onAddStyleName : function(event) {
    Event.stop(event);
    var styleName = $('styleName');
    var styleLabel = $('styleLabel');
    var styleInline = $('styleInline');
    var style = {
      name: styleName.value,
      label: styleLabel.value || styleName.value,
      inline: styleInline.checked
    };

    if (style.name.match(/^-?[_a-zA-Z]+[_a-zA-Z0-9-]*$/)) {
      var parent = style.inline ? this.inlineStyleGroup : this.blockStyleGroup;
      if (this.addOption(style.label, Object.toJSON(style), parent)) {
        this.sortOptions(parent);
        this.selectElement.selectedIndex = -1;
        this.selectOption(style.label, parent);
      }
    }
    Form.Element.activate(styleName);
  },
  _onKeyDown : function(event) {
    if (event.keyCode == Event.KEY_RETURN) {
      Event.stop(event);
    }
  },
  getValue : function() {
    return '[' + this.getValues().join(', ') + ']';
  }
});
// End XWiki augmentation.
return XWiki;
}(XWiki || {}));</code>
    </property>
    <property>
      <name>ListBox</name>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <name>XWiki.WysiwygEditorConfigSheet</name>
    <number>3</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>791d40c8-a0b3-4acb-8ca6-0abd08e11883</guid>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>Event.observe(document, 'xwiki:dom:loading', function() {
  $$('.noScript').each(function(element) {
    element.style.display = 'none';
  });

  // Initialize all sortable lists.
  [{
    field: 'XWiki.WysiwygEditorConfigClass_0_plugins',
    values: 'submit readonly line separator embed text valign list indent history format symbol link image table macro import color justify font style',
    tip: '$escapetool.javascript($services.localization.render('wysiwyg.admin.plugins.add.hint'))'
  },
  {
    field: 'XWiki.WysiwygEditorConfigClass_0_toolBar',
    duplicatesAllowed: true,
    values: '| / bold italic underline strikethrough teletype subscript superscript justifyleft justifycenter justifyright justifyfull unorderedlist orderedlist outdent indent undo redo format fontname fontsize forecolor backcolor hr removeformat symbol paste macro: stylename',
    tip: '$escapetool.javascript($services.localization.render('wysiwyg.admin.toolBar.add.hint'))'
  },
  {
    field: 'XWiki.WysiwygEditorConfigClass_0_fontSizes',
    tip: '$escapetool.javascript($services.localization.render('wysiwyg.admin.fontSizes.add.hint'))'
  }].each(function(listDescriptor) {
    var field = $(listDescriptor.field);
    var list = new XWiki.SpaceSeparatedList(field.value, listDescriptor.duplicatesAllowed, listDescriptor.values, listDescriptor.tip);
    list.attachTo(field.up('.noScript').parentNode);
    Event.observe(document, 'xwiki:actions:save', function() {
      field.value = list.getValue();
    });
  });

  // Initialize the menu editor.
  var menuField = $('XWiki.WysiwygEditorConfigClass_0_menuBar');
  var menuEditor = new XWiki.MenuEditor(menuField.value);
  menuEditor.attachTo(menuField.up('.noScript').parentNode);
  Event.observe(document, 'xwiki:actions:save', function() {
    menuField.value = menuEditor.getValue();
  });

  // Initialize the color palette editor.
  var colorPaletteField = $('XWiki.WysiwygEditorConfigClass_0_colorPalette');
  var colorsPerRowField = $('XWiki.WysiwygEditorConfigClass_0_colorsPerRow');
  var colorPaletteEditor = new XWiki.ColorPaletteEditor(colorPaletteField.value.split(/\s*,\s*/), colorsPerRowField.value);
  colorPaletteEditor.attachColorPaletteTo(colorPaletteField.up('.noScript').parentNode);
  colorPaletteEditor.attachColorPaletteSizeControlsTo(colorsPerRowField.up('.noScript').parentNode);
  Event.observe(document, 'xwiki:actions:save', function() {
    colorsPerRowField.value = colorPaletteEditor.getColumnCount();
    colorPaletteField.value = colorPaletteEditor.getColors().join(', ');
  });

  // Initialize the font name editor.
  var fontNamesField = $('XWiki.WysiwygEditorConfigClass_0_fontNames');
  var fontNames = new XWiki.FontNameListBox(fontNamesField.value);
  fontNames.attachTo(fontNamesField.up('.noScript').parentNode);
  Event.observe(document, 'xwiki:actions:save', function() {
    fontNamesField.value = fontNames.getValue();
  });

  // Initialize the style name editor.
  var styleNamesField = $('XWiki.WysiwygEditorConfigClass_0_styleNames');
  var styleNames = new XWiki.StyleNameListBox(styleNamesField.value);
  styleNames.attachTo(styleNamesField.up('.noScript').parentNode);
  Event.observe(document, 'xwiki:actions:save', function() {
    styleNamesField.value = styleNames.getValue();
  });
});</code>
    </property>
    <property>
      <name>Setup</name>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <name>XWiki.WysiwygEditorConfigSheet</name>
    <number>4</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>1f0cb4a9-e6cb-4d23-9ccc-fbca826b92b7</guid>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>#set($super = '$super')
var XWiki = (function (XWiki) {
// Start XWiki augmentation.
XWiki.MenuEditor = Class.create(XWiki.SpaceSeparatedList, {
  _defaultMenu : {
    link : {
      feature: "link",
      subMenu: ["linkEdit", "linkRemove", "linkWikiPage", "linkAttachment", "|", "linkWebPage", "linkEmail", "|", "alfrescoLink"]
    },
    image : {
      feature: "image",
      subMenu: ["imageInsertAttached", "imageInsertURL", "imageEdit", "alfrescoImage", "imageRemove"]
    },
    table : {
      feature: "table",
      subMenu: ["inserttable", "insertcolbefore", "insertcolafter", "deletecol", "|", "insertrowbefore", "insertrowafter", "deleterow", "|", "deletetable"]
    },
    macro : {
      feature: "macro",
      subMenu: ["macroInsert", "macroEdit", "|", "macroRefresh", "|", "macroCollapse", "macroExpand"]
    },
    "import" : {
      feature: "import",
      subMenu: ["importOffice"]
    }
  },
  initialize : function($super, values, possibleValues) {
    var availableTopMenuItems = 'link image table macro import';
    var inputTip = '$escapetool.javascript($services.localization.render('wysiwyg.admin.menuBar.add.hint'))';
    $super(this._extractValues(values), false, availableTopMenuItems, inputTip);
  },
  getValue : function() {
    var menu = [];
    this.getValues().each(function(value) {
      menu.push(this._defaultMenu[value]);
    }.bind(this));
    return Object.toJSON(menu);
  },
  _extractValues : function(menuJSON) {
    var topMenuItems = [];
    menuJSON.evalJSON().each(function(menuItem) {
      topMenuItems.push(menuItem.feature);
    });
    return topMenuItems.join(' ');
  }
});
// End XWiki augmentation.
return XWiki;
}(XWiki || {}));</code>
    </property>
    <property>
      <name>MenuEditor</name>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <class>
      <name>XWiki.StyleSheetExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <name>XWiki.WysiwygEditorConfigSheet</name>
    <number>0</number>
    <className>XWiki.StyleSheetExtension</className>
    <guid>7523b0c9-7bcc-445f-a32f-6be301b6856e</guid>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>#template('colorThemeInit.vm')

.xform dd input, .xform dd select {
  margin-bottom: .3em;
  min-width: 15em;
  vertical-align: middle;
  width: auto !important;
}

.xform dd input[type="radio"] {
  min-width: 0;
}

.xform dd input.icon {
  margin-left: .3em;
  min-width: 0;
  width: 16px !important;
  height: 16px !important;
  padding: 0 !important;
}

.xform dd .listBoxWrapper input.icon {
  vertical-align: top;
}

.floatLeft {
  float: left;
}

.listBoxWrapper.floatLeft {
  margin-right: 3em;
}

/**
 * Style settings.
 */
#styleNamesInputPanel {
  background-color: #F7F7F7;
  float: left;
  padding: 1em;
}

#styleNamesInputPanel label {
  color: #888;
  display: block;
  font-size: 80%;
  margin-bottom: 0.3em;
}

#styleLabel {
  display: block;
}

.xform dd input#styleInline {
  min-width: 0;
}

#styleNamesInputPanel .buttonwrapper {
  display: block;
  float: left;
  margin: 0;
}

#styleNamesInputPanel .buttonwrapper input {
  min-width: 0;
}

#styleNamesInputPanel .clearfloats {
  margin: 0;
}</code>
    </property>
    <property>
      <name>Specific Styles</name>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <class>
      <name>XWiki.StyleSheetExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <name>XWiki.WysiwygEditorConfigSheet</name>
    <number>1</number>
    <className>XWiki.StyleSheetExtension</className>
    <guid>8243190c-75cd-4b83-b10c-37c40b604b5c</guid>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>/**
 * HSortableList.
 */
ul.hSortable {
  background-color: #f7f7f7;
  margin: 0;
  padding: .5em;
  font-size: 90%;
}

ul.hSortable li {
  cursor: move;
  list-style-type: none;
  display: inline-block;
  padding: 1px 0.25em;
}
* html ul.hSortable {
  display: inline-block;
}
* html ul.hSortable li {
  float: left;
}
*+html ul.hSortable {
  display: inline-block;
}
*+html ul.hSortable li {
  float: left;
}

ul.hSortable li:hover {
  background-color: $theme.highlightColor;
}

ul.hSortable li .delete {
  color: $theme.pageContentBackgroundColor;
  cursor: pointer;
  font-size: 70%;
  font-weight: bold;
  text-decoration: none !important;
  vertical-align: super;
}

ul.hSortable li:hover .delete {
  color: $theme.textPrimaryColor;
}

ul.hSortable li .delete:hover {
  color: $theme.notificationErrorColor;
}

ul.hSortable li .separator {
  display: none;
}

/**
 * Input Suggest.
 */
.hSortableWrapper {
  position: relative;
}

.suggestions {
  background-color: white;
  border: 1px solid $theme.borderColor;
  max-height: 9.7em;
  min-width: 15em;
  overflow: auto;
  position: absolute;
  z-index: 100;
}

.suggestions ul {
  font-size: 90%;
  margin: 0;
}

.suggestions li {
  list-style-type: none;
}

.selected {
  background-color: $theme.highlightColor;
}</code>
    </property>
    <property>
      <name>HSortableList</name>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <class>
      <name>XWiki.StyleSheetExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <name>XWiki.WysiwygEditorConfigSheet</name>
    <number>2</number>
    <className>XWiki.StyleSheetExtension</className>
    <guid>fc4b82e9-86bf-42de-931d-920b63dff5a5</guid>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>table.colorPalette {
  border: 1px solid #B5B6B5;
  margin: 0;
  width: auto;
}

.colorPalette td {
  border-left: 1px solid #EFEFEF;
  border-top: 1px solid #EFEFEF;
  height: 21px;
  width: 21px;
  margin: 0;
  padding: 0;
  text-align: center;
  vertical-align: middle;
}

.colorPalette td div {
  height: 15px;
  width: 15px;
  padding: 0;
  margin: 0;
  border: 3px solid white; 
  box-sizing: content-box;
}

.colorPalette td div:hover {
  border: 3px solid #CCCCCC;
}

.xform dd #colorPaletteSizeControls input {
  min-width: 0;
}</code>
    </property>
    <property>
      <name>ColorPaletteEditor</name>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <content>{{velocity}}
{{html wiki="true"}}
#set($editing = $xcontext.action == 'admin' || $xcontext.action == 'edit' || $xcontext.action == 'inline')
#set($mode = 'view')
#if($editing)
#set($mode = 'edit')
$xwiki.jsfx.use('js/scriptaculous/dragdrop.js')##
$xwiki.jsfx.use('js/scriptaculous/controls.js')##
$xwiki.jsfx.use('uicomponents/widgets/colorpicker/procolor.js', true)##
$xwiki.jsx.use('XWiki.WysiwygEditorConfigSheet')##
#end
$xwiki.ssx.use('XWiki.WysiwygEditorConfigSheet')
#set($ok = $doc.use('XWiki.WysiwygEditorConfigClass'))
## We don't have access to the form element to set the CSS class for the vertical form layout standard.
(% class="xform" %)
(((
##
== {{translation key="wysiwyg.admin.general"/}} ==
##

## Vertical form styles are applied on the label element so we have to use it.
; &lt;label&gt;$doc.displayPrettyName('sourceEditorEnabled', false, false)&lt;/label&gt;##
(% class="xHint" %){{translation key="wysiwyg.admin.sourceEditorEnabled.hint"/}}
: $doc.display('sourceEditorEnabled', $mode)
##
; &lt;label&gt;$doc.displayPrettyName('plugins', false, false)&lt;/label&gt;##
(% class="xHint" %){{translation key="wysiwyg.admin.plugins.hint"/}}
## TODO: Replace the DIV with a group when XRENDERING-29 is implemented.
: &lt;div class="noScript"&gt;$doc.display('plugins', $mode)&lt;/div&gt;
##
; &lt;label&gt;$doc.displayPrettyName('menuBar', false, false)&lt;/label&gt;##
(% class="xHint" %){{translation key="wysiwyg.admin.menuBar.hint"/}}
: &lt;div class="noScript"&gt;$doc.display('menuBar', $mode)&lt;/div&gt;
##
; &lt;label&gt;$doc.displayPrettyName('toolBar', false, false)&lt;/label&gt;##
(% class="xHint" %){{translation key="wysiwyg.admin.toolBar.hint"/}}
: &lt;div class="noScript"&gt;$doc.display('toolBar', $mode)&lt;/div&gt;
##
; &lt;label&gt;$doc.displayPrettyName('cleanPaste', false, false)&lt;/label&gt;##
(% class="xHint" %){{translation key="wysiwyg.admin.cleanPaste.hint"/}}
: $doc.display('cleanPaste', $mode)

##
== {{translation key="wysiwyg.admin.link"/}} ==
##

(% class="xHint" %)(((
{{translation key="wysiwyg.admin.plugin.settings.hint" parameters="link"/}}
)))

; &lt;label&gt;$doc.displayPrettyName('attachmentSelectionLimited', false, false)&lt;/label&gt;##
(% class="xHint" %){{translation key="wysiwyg.admin.attachmentSelectionLimited.hint"/}}
: $doc.display('attachmentSelectionLimited', $mode)

##
== {{translation key="wysiwyg.admin.image"/}} ==
##

(% class="xHint" %)(((
{{translation key="wysiwyg.admin.plugin.settings.hint" parameters="image"/}}
)))

; &lt;label&gt;$doc.displayPrettyName('externalImages', false, false)&lt;/label&gt;##
(% class="xHint" %){{translation key="wysiwyg.admin.externalImages.hint"/}}
: $doc.display('externalImages', $mode)
##
; &lt;label&gt;$doc.displayPrettyName('imageSelectionLimited', false, false)&lt;/label&gt;##
(% class="xHint" %){{translation key="wysiwyg.admin.imageSelectionLimited.hint"/}}
: $doc.display('imageSelectionLimited', $mode)

##
== {{translation key="wysiwyg.admin.color"/}} ==
##

(% class="xHint" %)(((
{{translation key="wysiwyg.admin.plugin.settings.hint" parameters="color"/}}
)))

; &lt;label&gt;$doc.displayPrettyName('colorsPerRow', false, false)&lt;/label&gt;##
(% class="xHint" %){{translation key="wysiwyg.admin.colorsPerRow.hint"/}}
: &lt;div class="noScript"&gt;$doc.display('colorsPerRow', $mode)&lt;/div&gt;
##
; &lt;label&gt;$doc.displayPrettyName('colorPalette', false, false)&lt;/label&gt;##
(% class="xHint" %){{translation key="wysiwyg.admin.colorPalette.hint"/}}
: &lt;div class="noScript"&gt;$doc.display('colorPalette', $mode)&lt;/div&gt;

##
== {{translation key="wysiwyg.admin.font"/}} ==
##

(% class="xHint" %)(((
{{translation key="wysiwyg.admin.plugin.settings.hint" parameters="font"/}}
)))

; &lt;label&gt;$doc.displayPrettyName('fontNames', false, false)&lt;/label&gt;##
(% class="xHint" %){{translation key="wysiwyg.admin.fontNames.hint"/}}
: &lt;div class="noScript"&gt;$doc.display('fontNames', $mode)&lt;/div&gt;
##
; &lt;label&gt;$doc.displayPrettyName('fontSizes', false, false)&lt;/label&gt;##
(% class="xHint" %){{translation key="wysiwyg.admin.fontSizes.hint"/}}
: &lt;div class="noScript"&gt;$doc.display('fontSizes', $mode)&lt;/div&gt;

##
== {{translation key="wysiwyg.admin.style"/}} ==
##

(% class="xHint" %)(((
{{translation key="wysiwyg.admin.plugin.settings.hint" parameters="style"/}}
)))

; &lt;label&gt;$doc.displayPrettyName('styleNames', false, false)&lt;/label&gt;##
(% class="xHint" %){{translation key="wysiwyg.admin.styleNames.hint"/}}
: &lt;div class="noScript"&gt;$doc.display('styleNames', $mode)&lt;/div&gt;
)))
{{/html}}
{{/velocity}}</content>
</xwikidoc>
