<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.1">
  <web>XWiki</web>
  <name>XWikiUserWatchListLiveTableResults</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1391621063000</creationDate>
  <parent>XWiki.XWikiUserWatchListSheet</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1391701797000</date>
  <contentUpdateDate>1391701797000</contentUpdateDate>
  <version>1.1</version>
  <title/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.0</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity wiki="false"}}
#if ($xcontext.action == 'get')
#macro (getWikiPrettyName $wikiName)
#set ($wikiPrettyName = $services.wiki.getById($wikiName).prettyName)
#if ("$!wikiPrettyName.trim()" != '')$wikiPrettyName#else$wikiName#end
#end
##
## Build watched elements list
##
#set ($wikis = $services.watchlist.getWatchedElements("WIKI"))
#set ($spaces = $services.watchlist.getWatchedElements("SPACE"))
#set ($pages = $services.watchlist.getWatchedElements("DOCUMENT"))
#set ($elements = [])
## Wikis
#foreach ($wiki in $wikis)
  #if ("$!wiki" != '')
    #set ($wikiHomeDocRef = $services.model.createDocumentReference($wiki, '', '', 'default'))
    #set ($wikiHomeDoc = $xwiki.getDocument($wikiHomeDocRef))
    #set ($discard = $elements.add({
      'id'        : $wiki,
      'type'      : 'wiki',
      'wikiName'  : "#getWikiPrettyName($wiki)",
      'wikiUrl'   : $wikiHomeDoc.getURL(),
      'spaceName' : $services.localization.render('watchlist.table.allspaces'),
      'spaceUrl'  : '',
      'pageName'  : $services.localization.render('watchlist.table.alldocuments'),
      'pageUrl'   : '',
      'deleteUrl' : $doc.getURL('view', "xpage=watch&amp;do=removewiki&amp;reference=${escapetool.url($wiki)}")
    }))
  #end
#end
## Spaces
#foreach ($space in $spaces)
  #if ("$!space" != '')
    #set ($spaceRef = $services.model.resolveSpace($space))
    #set ($wiki = $spaceRef.parent.name)
    #set ($wikiHomeDocRef = $services.model.createDocumentReference($wiki, '', '', 'default'))
    #set ($spaceHomeDocRef = $services.model.createDocumentReference($wiki, $spaceRef.name, '', 'default'))
    #set ($wikiHomeDoc = $xwiki.getDocument($wikiHomeDocRef))
    #set ($spaceHomeDoc = $xwiki.getDocument($spaceHomeDocRef))
    #set ($discard = $elements.add({
      'id'        : $spaceRef.name,
      'type'      : 'space',
      'wikiName'  : "#getWikiPrettyName($wiki)",
      'wikiUrl'   : $wikiHomeDoc.getURL(),
      'spaceName' : $spaceRef.name,
      'spaceUrl'  : $spaceHomeDoc.getURL(),
      'pageName'  : $services.localization.render('watchlist.table.alldocuments'),
      'pageUrl'   : '',
      'deleteUrl' : $doc.getURL('view', "xpage=watch&amp;do=removespace&amp;reference=${escapetool.url($space)}")
    }))
  #end
#end
## Pages
#foreach ($page in $pages)
  #if ("$!page" != '')
    #set ($pageRef = $services.model.resolveDocument($page))
    #set ($wiki = $pageRef.wikiReference.name)
    #set ($spaceName = $pageRef.lastSpaceReference.name)
    #set ($wikiHomeDocRef = $services.model.createDocumentReference($wiki, '', '', 'default'))
    #set ($spaceHomeDocRef = $services.model.createDocumentReference($wiki, $spaceName, '', 'default'))
    #set ($wikiHomeDoc = $xwiki.getDocument($wikiHomeDocRef))
    #set ($spaceHomeDoc = $xwiki.getDocument($spaceHomeDocRef))
    #set ($pageDoc = $xwiki.getDocument($pageRef))
    #set ($discard = $elements.add({
      'id'        : $page,
      'type'      : 'page',
      'wikiName'  : "#getWikiPrettyName($wiki)",
      'wikiUrl'   : $wikiHomeDoc.getURL(),
      'spaceName' : $spaceName,
      'spaceUrl'  : $spaceHomeDoc.getURL(),
      'pageName'  : $pageRef.name,
      'pageUrl'   : $pageDoc.getURL(),
      'deleteUrl' : $doc.getURL('view', "xpage=watch&amp;do=removedocument&amp;reference=${escapetool.url($pageRef)}")
    }))
  #end
#end
##
## JSON
##
$jsontool.serialize({
  'totalrows'   : $elements.size(),
  'reqNo'       : $request.reqNo,
  'returnedrows': $elements.size(),
  'offset'      : $request.offset,
  'rows'        : $elements
})
#end
{{/velocity}}</content>
</xwikidoc>
