/*
 #set ($paths = {
  'xwiki-selectize': $xwiki.getSkinFile('uicomponents/suggest/xwiki.selectize.js', true)
})
#set ($l10nBundle = {
  'upload': $services.localization.render('web.uicomponents.suggest.attachments.upload'),
  'uploading': $services.localization.render('web.uicomponents.suggest.attachments.uploading', ['{0}']),
  'uploadDone': $services.localization.render('web.uicomponents.suggest.attachments.uploadDone', ['{0}']),
  'uploadFailed': $services.localization.render('web.uicomponents.suggest.attachments.uploadFailed', ['{0}'])
})
#[[*/
'use strict';(function(w,x,y){require.config({paths:w});define("xwiki-attachments-store",["jquery"],function(h){var n=function(d,e){var c=[x,"rest"];d.getReversedReferenceChain().forEach(function(l){var m=l.type===XWiki.EntityType.DOCUMENT?"page":XWiki.EntityType.getName(l.type);c.push(m+"s",encodeURIComponent(l.name))});d.type===XWiki.EntityType.ATTACHMENT?c.push("metadata"):c.push("attachments");d=h.param(h.extend({prettyNames:!0},e),!0);return c.join("/")+"?"+d};return{get:function(d,e){return h.getJSON(n(d),
e)},upload:function(d,e){var c=new FormData;c.append("file",e);c.append("filename",d.name);var l=h.Deferred();h.post({url:n(d.parent,{createPage:!0}),data:c,processData:!1,contentType:!1,dataType:"json",xhr:function(){var m=h.ajaxSettings.xhr();m.upload&&m.upload.addEventListener("progress",function(p){p.lengthComputable&&l.notify({loaded:p.loaded,total:p.total,percent:Math.round(100*p.loaded/p.total)})},!1);return m}}).then(l.resolve.bind(l),l.reject.bind(l));return l.promise()},create:function(d,
e){var c=(new XWiki.Document(d.parent)).getURL("download")+"/"+encodeURIComponent(d.name),l=d.getReversedReferenceChain().map(function(m){return{type:XWiki.EntityType.getName(m.type),name:m.name,label:m.name}});d={id:XWiki.Model.serialize(d),name:d.name,xwikiRelativeUrl:c,hierarchy:{items:l}};e&&h.extend(d,{mimeType:e.type,file:e});return d}}});define("xwiki-attachments-filter",["jquery"],function(h){return{filter:function(n,d){var e=[];"string"===typeof d&&(e=d.split(/\s*,\s*/).filter(function(c){return 0<
c.length}));return n.filter(function(c){a:{for(var l=e,m=0;m<l.length;m++){var p=l[m];if("."===p.substring(0,1)){if(c.name.substring(c.name.length-p.length)===p){c=!0;break a}}else if("string"===typeof c.mimeType&&0<=c.mimeType.indexOf(p)){c=!0;break a}}c=0===l.length}return c})}}});define("xwiki-file-picker",["jquery"],function(h){var n=function(d,e){var c;h(window).one("focus.filePicker",function(m){c=setTimeout(function(){e.reject()},1E3)});var l=h('<input type="file" class="hidden"/>').prop("multiple",
!!d.multiple).appendTo("body");"string"===typeof d.accept&&l.attr("accept",d.accept.replace(/\/(\s*(,|$))/g,"/*$1"));l.on("change",function(m){h(window).off("focus.filePicker");clearTimeout(c);e.resolve(this.files);l.remove()}).click()};return{pickLocalFiles:function(d){return new Promise((e,c)=>n(d,{resolve:e,reject:c}))}}});define("xwiki-l10n",["jquery"],function(h){var n=function(d){return function(){var e=d;h.each(arguments,function(c,l){e=e.replace("{"+c+"}",l)});return e}};return function(d){h.each(d,
function(e,c){"string"===typeof c&&c.match(/{\d+}/)&&(d[e]=n(c))});return d}});define("xwiki-suggestAttachments","jquery xwiki-attachments-store xwiki-attachments-icon xwiki-attachments-filter xwiki-file-picker xwiki-l10n xwiki-selectize".split(" "),function(h,n,d,e,c,l){var m=l(y),p=function(b){return{maxOptions:10,documentReference:b.data("documentReference"),searchScope:b.data("searchScope"),useAttachmentName:!1,uploadAllowed:"true"===b.data("uploadAllowed")||!0===b.data("uploadAllowed"),accept:b.data("accept"),
load:function(a,k){var f=this.settings,g=f.searchScope;""!==a||g&&!f.documentReference.hasParent(g)||(g=f.documentReference);n.get(g,{name:a,types:f.accept,number:f.maxOptions}).then(t.bind(null,f)).then(k,k)},loadSelected:function(a,k){r(a,this.settings).then(k,k)},create:function(a,k){if(0<a.length)return k={},k[this.settings.labelField]=a,k[this.settings.valueField]=a,k;c.pickLocalFiles({accept:this.settings.accept,multiple:1!==this.settings.maxItems}).then(v.bind(null,this)).then(k,k)}}},r=function(b,
a){b=z(b,a);return n.get(b).then(u.bind(null,a)).then(function(k){return[k]})},t=function(b,a){return Array.isArray(a.attachments)?a.attachments.map(u.bind(null,b)):[]},u=function(b,a){var k=XWiki.Model.resolve(a.id,XWiki.EntityType.ATTACHMENT),f=a.name;b=b.useAttachmentName&&b.searchScope&&b.searchScope.type===XWiki.EntityType.DOCUMENT?k.name:k.parent.equals(b.documentReference)?XWiki.Model.serialize(k.relativeTo(b.documentReference)):XWiki.Model.serialize(k.relativeTo(b.documentReference.getRoot()));
return{label:f,value:b,url:a.xwikiRelativeUrl,icon:d.getIcon(a),hint:A(a),data:a}},z=function(b,a){return a.useAttachmentName&&a.searchScope&&a.searchScope.type===XWiki.EntityType.DOCUMENT?new XWiki.AttachmentReference(b,a.searchScope):XWiki.Model.resolve(b,XWiki.EntityType.ATTACHMENT,a.documentReference)},A=function(b){return b.hierarchy.items.filter(function(a){return"space"===a.type||"document"===a.type&&"WebHome"!==a.name}).map(function(a){return a.label}).join(" / ")},C=function(b){b.get$("wrapper").addClass("async-create");
var a=b.canCreate;b.canCreate=function(g){return 0===g.length||a.apply(this,arguments)};var k=b.settings.render.option_create;b.settings.render.option_create=function(g,q){return 0<g.input.length?k.apply(this,arguments):h('<div class="create upload option"></div>').text(m.upload)};var f=b.settings.render.item;b.settings.render.item=function(g){var q=f.apply(this,arguments);g.data&&g.data.upload&&(q.addClass("upload create-"+g.data.upload.status),"running"===g.data.upload.status&&q.css("background",
"linear-gradient(90deg, #dff0d8 "+g.data.upload.progress.percent+"%, #efefef 0)"));return q};B(b)},v=function(b,a){a=D(a,b.settings);a=e.filter(a,b.settings.accept);1===b.settings.maxItems&&(a=a.slice(0,1));a=t(b.settings,{attachments:a});b.addOption(a);a.reduce((k,f)=>{b.addItem(f.value);f.icon.promise&&f.icon.promise.then(function(){b.updateOption(f.value,f)});var g=E.bind(null,f,b);return k.then(g,g)},Promise.resolve());return a},D=function(b,a){for(var k=[],f=0;f<b.length;f++){var g=b.item(f),
q=new XWiki.EntityReference(g.name,XWiki.EntityType.ATTACHMENT,a.documentReference);k.push(n.create(q,g))}return k},E=function(b,a){var k=h("<em></em>").text(b.label).prop("outerHTML"),f=new XWiki.widgets.Notification(m.uploading(k),"inprogress");b.data.upload={status:"pending",progress:{loaded:0,total:b.data.file.size,percent:0}};return F(b.data).then(u.bind(null,a.settings)).then(d.loadIcon).progress(g=>{b.data.upload.status="running";b.data.upload.progress=g;a.updateOption(b.value,b)}).then(g=>
{g.data.upload={status:"done"};a.updateOption(g.value,g);f.replace(new XWiki.widgets.Notification(m.uploadDone(k),"done"));return g}).catch(()=>{b.data.upload.status="failed";a.updateOption(b.value,b);f.replace(new XWiki.widgets.Notification(m.uploadFailed(k),"error"));return Promise.reject()})},F=function(b){var a=XWiki.Model.resolve(b.id,XWiki.EntityType.ATTACHMENT);return n.upload(a,b.file)},B=function(b){b.get$("wrapper").on("drag dragstart dragend dragover dragenter dragleave drop",function(a){a.preventDefault();
a.stopPropagation()}).on("dragover dragenter",function(){h(this).addClass("is-dragover")}).on("dragleave dragend drop",function(){h(this).removeClass("is-dragover")}).on("drop",function(a){a=a.originalEvent.dataTransfer;0<a.files.length?v(b,a.files):G(b,a.getData("text/html"))})},G=function(b,a){h(a).find('[data-entity-type="ATTACHMENT"][data-entity-reference]').each(function(){var k=XWiki.Model.resolve(h(this).data("entityReference"),XWiki.EntityType.ATTACHMENT);n.get(k).then(f=>{f=t(b.settings,
{attachments:e.filter([f],b.settings.accept)});b.addOption(f);f.forEach(function(g){b.addItem(g.value)})})})},H=function(b){var a=b.settings.render.option;b.settings.render.option=function(k){var f=a.apply(this,arguments),g=f.find(".xwiki-selectize-option-hint");b.settings.searchScope.type===XWiki.EntityType.DOCUMENT?g.remove():1===g.length&&(h('<div class="xwiki-selectize-option-label-wrapper"></div>').append(f.find(".xwiki-selectize-option-label")).append(g).appendTo(f),f.find(".xwiki-selectize-option-icon-wrapper").addClass("pull-left"));
return f}};h.fn.suggestAttachments=function(b){return this.each(function(){var a=h.extend(p(h(this)),b),k=h(this),f=k.xwikiSelectize;a.documentReference&&"string"!==typeof a.documentReference||(a.documentReference=XWiki.Model.resolve(a.documentReference,XWiki.EntityType.DOCUMENT,XWiki.currentDocument.documentReference));a:{var g=a.searchScope||"wiki:"+XWiki.currentWiki;if("string"===typeof g)try{var q=XWiki.Model.resolve(g,null,XWiki.currentDocument.documentReference);break a}catch(I){q=null;break a}q=
g}a.searchScope=q;f.call(k,a);this.selectize.settings.uploadAllowed&&C(this.selectize);H(this.selectize)})}});define("xwiki-attachmentResourcePicker",["jquery","xwiki-suggestAttachments"],function(h){var n=function(){d(this.selectize);var e=this.selectize.settings.loadSelected;this.selectize.settings.loadSelected=function(c,l){var m=this.options[c];m&&m.data?l(c):e.apply(this,arguments)}},d=function(e){Object.keys(e.options).forEach(function(c){var l=e.options[c];a:{var m=e.settings.supportedResourceTypes;
var p=c.indexOf(":");if(0<=p){var r=c.substring(0,p).toLowerCase();if(0<=m.indexOf(r)){m={type:r,reference:c.substring(p+1)};break a}}m={type:"attach",reference:c}}"attach"===m.type?c!==m.reference&&(l[e.settings.valueField]=m.reference,e.updateOption(c,l)):l.data||(l.data.resourceReference=m)})};h.fn.pickAttachmentResource=function(e){return this.on("initialize",n).each(function(){var c=h.extend({supportedResourceTypes:h(this).data("supportedResourceTypes")||"attach, data, url, path, unc"},e);"string"===
typeof c.supportedResourceTypes&&(c.supportedResourceTypes=c.supportedResourceTypes.split(/\s*,\s*/).filter(function(l){return 0<l.length}).map(function(l){return l.toLowerCase()}));h(this).suggestAttachments(c)})}});require(["jquery","xwiki-suggestAttachments","xwiki-attachmentResourcePicker","xwiki-events-bridge"],function(h){var n=function(d,e){d=h(e&&e.elements||document);d.find(".suggest-attachments").suggestAttachments();d.find(".pick-attachment-resource").pickAttachmentResource()};h(document).on("xwiki:dom:updated",
n);h(n)})}).apply("]]#",$jsontool.serialize([$paths,$request.contextPath,$mimetypeMap,$extensionMap,$l10nBundle]));

//# sourceMappingURL=suggestAttachments.min.js.map
