## ---------------------------------------------------------------------------------------------------------
## Since this template can be used for creating a Page or a Space, check the passed "tocreate" parameter
## which can be either "page" or "space". If no "tocreate" parameter is passed then we default to creating a Page.
## ---------------------------------------------------------------------------------------------------------
#if("$!request.getParameter('tocreate')" == 'space')
  #set($tocreate = 'space')
#else
  #set($tocreate = 'page')
#end
## ---------------------------------------------------------------------------------------------------------
## This template can be passed a parent document reference in parameter (using the "parent" parameter).
## If a parent parameter is passed, use it to set the parent when creating the new Page or Space.
## If no parent parameter was passed, use the current document if we're creating a new page, keep it blank
## if we're creating a new space.
## ---------------------------------------------------------------------------------------------------------
#set ($parent = "$!request.getParameter('parent')")
## if there is no passed parent, a page is to be created and the current document is existing, put the current document as a parent
#if ($parent == '' && $tocreate == 'page' && !$doc.isNew())
  #set ($parentReference = $services.model.createDocumentReference($doc.documentReference.wikiReference.name,
    $doc.documentReference.lastSpaceReference.name, $doc.documentReference.name))
  #set ($parent = $services.model.serialize($parentReference, 'local'))
#end
## ---------------------------------------------------------------------------------------------------------
## Get the passed template provider, if any
## ---------------------------------------------------------------------------------------------------------
#set($templateProvider = "$!request.templateprovider")
## get the template as well, since in case template provider is missing, template should be used, 
## to allow creation from template directly, without necessarily going through template provider.
#set($template = "$!request.getParameter('template')")
## ---------------------------------------------------------------------------------------------------------
## Set the space, page variables from the current doc if its new, from the passed parameters if any
## ---------------------------------------------------------------------------------------------------------
#if ($doc.isNew())
  #set ($space = $doc.getSpace())
  #set ($page = $doc.getName())
#else
  #set ($space = "$!request.getParameter('space')")
  #set ($page = "$!request.getParameter('page')")
#end
## ---------------------------------------------------------------------------------------------------------
## If there was an exception creating the page because of invalid space, notify. 
## Should set the other variables only if there is no exception. Otherwise, if there's an exception other than the 
## 11016 one, nothing will be displayed, depending on the other passed parameters.
## ---------------------------------------------------------------------------------------------------------
#set($exception = $createException)
## check if the exception is about the non-allowed spaces for template
#if("$!exception" != '' && $exception.code == 11016)
  ## reset the space, user will have to fill in again
  #set ($space = '')
  <div class="box errormessage">
    #set($allowedSpaces = $createAllowedSpaces)
    #if ($allowedSpaces.size() == 1)
      $msg.get('core.create.template.allowedspace.inline', [$templateProvider, $allowedSpaces.get(0)])
    #else
      $msg.get('core.create.template.allowedspaces.inline', [$templateProvider, $allowedSpaces.toString()])
    #end
  </div>
#end
## check if the exception is about the document which already exists
#if("$!exception" != '' && $exception.code == 11002)
  <div class="box errormessage">
    #if($tocreate == 'space')
        $msg.get('core.create.space.error.docalreadyexists', [$space])
    #else
        $msg.get('core.create.page.error.docalreadyexists', ["${space}.${page}"])
    #end
  </div>
  ## reset the space & page, user will have to fill in again
  #set($page = '')
  #set($space = '')
#end
## ---------------------------------------------------------------------------------------------------------
## Compute the default space value to be the space of the current document.
## ---------------------------------------------------------------------------------------------------------
#set ($defaultSpace = $doc.documentReference.lastSpaceReference.name)
## ---------------------------------------------------------------------------------------------------------
## Output JavaScript validation code
## ---------------------------------------------------------------------------------------------------------
$xwiki.get('jsfx').use('uicomponents/widgets/validation/livevalidation_prototype.js')##
$xwiki.get('ssfx').use('uicomponents/widgets/validation/livevalidation.css', true)##
<script type="text/javascript">
//<![CDATA[
  XWiki.createPage = {
    spaceValidator : {},
    pageValidator : {},
    currentSpaceInclusionParameters : {},
    /**
     * Create Page Field Validator.
     */
    initPageValidator : function() {
      this.pageValidator = new LiveValidation($$('.main [name=page]')[0], { validMessage: "$msg.get('core.validation.valid.message')" });
      this.pageValidator.add(Validate.Presence, {
        failureMessage: "$msg.get('core.validation.required.message')"
      });
    },
    /**
     * Create Space Field Validator.
     */
    initSpaceValidator : function() {
      this.spaceValidator = new LiveValidation($$('.main [name=space]')[0], { validMessage: "$msg.get('core.validation.valid.message')" });
      this.spaceValidator.add(Validate.Presence, {
         failureMessage: "$msg.get('core.validation.required.message')"
      });
    },
    /**
     * Update Space Field Validator, allows to specify a list of allowed spaces for the field.
     */
    updateSpaceValidator : function(values, failureMessage) {
      if(values.length > 0) {
        this.currentSpaceInclusionParameters = {
          within: values,
          failureMessage: failureMessage
        };
        this.spaceValidator.add(Validate.Inclusion, this.currentSpaceInclusionParameters);
      } else {
        this.spaceValidator.remove(Validate.Inclusion, this.currentSpaceInclusionParameters);
      }
      this.spaceValidator.validate();
    }
  };
//]]>
</script>

## ---------------------------------------------------------------------------------------------------------
## Get the list of available template providers, computed in the action and set on the context
## ---------------------------------------------------------------------------------------------------------
#set ($availableTemplateProviders = [])
#foreach($tpDoc in $createAvailableTemplates)
  #set ($tpObj = $tpDoc.getObject('XWiki.TemplateProviderClass'))
  #if ("$!{tpObj.getProperty('type').value}" == $tocreate || ("$!{tpObj.getProperty('type').value}" == '' && $tocreate == 'page'))
    #set ($discard = $availableTemplateProviders.add($tpDoc))
  #end
#end
## ---------------------------------------------------------------------------------------------------------
## Macro for displaying the available templates and changing target space rules accordingly
## ---------------------------------------------------------------------------------------------------------
#macro (displayTemplateChoice)
    ## ---------------------------------------------------------------------------------------------------------
    ## Template field
    ## ---------------------------------------------------------------------------------------------------------
    #if(!$availableTemplateProviders.isEmpty() && $templateProvider == '' && $template == '')
      #set ($jsSpaceInclusionValidationContainer = [])
      <dl>
        <dt>
          <label>$msg.get('core.create.template')</label>
          <span class="xHint">$msg.get("core.create.$!{tocreate}.template.hint")</span>
        </dt>
        <dd>
          <label for="xwiki-create-form-0" class="xwiki-form-listclass">
            <input id="xwiki-create-form-0" type="radio" name="templateprovider" value="" checked="checked"/>
            $msg.get("core.create.${tocreate}.template.empty")
          </label>
          #set($discard = $jsSpaceInclusionValidationContainer.add(['xwiki-create-form-0', [], '']))
          #foreach($tpdoc in $availableTemplateProviders)
            #set ($tpobj = $tpdoc.getObject('XWiki.TemplateProviderClass'))
            #set($inputId = "xwiki-create-form-${velocityCount}")
            <label for="$inputId" class="xwiki-form-listclass">
              ## pass the template provider to the create action. Prepare the template provider reference
              #set($tpdocRef = $services.model.serialize($tpdoc.documentReference, 'local'))
              <input id="$inputId" type="radio" name="templateprovider" value="$escapetool.xml(${tpdocRef})"/>
              ## use the template name as a translation key, to allow i18n
              $escapetool.xml($msg.get($tpobj.getProperty('name').value))
            </label>
            #set($jsAllowedSpacesArray = '')## Reset previous value
            #if ($tocreate == 'space')
              ## TODO remove this when XWiki starts supporting nested spaces
              #set ($allowedSpaces = [])
            #else
              #set($allowedSpaces = $tpobj.getProperty('spaces').getValue())
              #if($space == '' && !$allowedSpaces.isEmpty())
                #foreach($allowedSpace in $allowedSpaces)
                  #if($velocityCount == 1)
                    #set($jsAllowedSpacesArray = "'${allowedSpace}'")
                  #else
                    #set($jsAllowedSpacesArray = "$!{jsAllowedSpacesArray}, '${allowedSpace}'")
                  #end
                #end
              #end
              #if($allowedSpaces.isEmpty())
                #set($message = '')
              #elseif($allowedSpaces.size() == 1)
                #set($message = $msg.get('core.create.template.allowedspace.inline', [$tpobj.getProperty('name').getValue(), $jsAllowedSpacesArray]))
              #else
                #set($message = $msg.get('core.create.template.allowedspaces.inline', [$tpobj.getProperty('name').getValue(), $jsAllowedSpacesArray]))
              #end
              #set($discard = $jsSpaceInclusionValidationContainer.add([$inputId, "[${jsAllowedSpacesArray}]", $message]))
            #end
          #end
        </dd>
      </dl>
      ## ---------------------------------------------------------------------------------------------------------
      ## Output JavaScript code that will update validation rules for document space (depends on template)
      ## ---------------------------------------------------------------------------------------------------------
      #if ($tocreate != 'space')
        ## TODO Remove condition once XWiki supports nested spaces
        <script type="text/javascript">
        //<![CDATA[
        Event.observe(document, 'xwiki:dom:loaded', function() {
          #foreach($validator in $jsSpaceInclusionValidationContainer)
            $("$validator.get(0)").observe('click', function() {
              XWiki.createPage.updateSpaceValidator($validator.get(1), "$validator.get(2)");
            }.bindAsEventListener(XWiki.createPage));
          #end
        });
        //]]>
        </script>
      #end
    #else
      #if ($templateProvider != '')
        ## if a template provider is set (e.g. when this page is displayed as a result of an error), put it in the form
        <input type="hidden" id="template" name="templateprovider" value="$!{escapetool.xml($templateProvider)}" />
      #elseif ($template != '')
        ## if a template is set (to allow to get the create form from a template directly, without having to choose 
        ## the template provider), use that template
        <input type="hidden" id="template" name="template" value="$!{escapetool.xml($template)}" />
      #else
        ## finally, if none of these are set, put an empty template provider
        <input type="hidden" id="templateprovider" name="templateprovider" value="" />
      #end
    #end
#end
## ---------------------------------------------------------------------------------------------------------
## Display the form.
## ---------------------------------------------------------------------------------------------------------
<form action="$doc.getURL('create')" method="post" class="xform third">
  <div>
  <input type="hidden" name="tocreate" value="$tocreate"/>
  #if($tocreate == 'page')
    ## ---------------------------------------------------------------------------------------------------------
    ## Page creation
    ## ---------------------------------------------------------------------------------------------------------
    #set ($jsValidationInitializersContainer = [])
    <input type="hidden" name="parent" value="$!{escapetool.xml($parent)}"/>
    ## ---------------------------------------------------------------------------------------------------------
    ## Template field
    ## ---------------------------------------------------------------------------------------------------------
    #displayTemplateChoice()
    ## ---------------------------------------------------------------------------------------------------------
    ## Space field
    ## ---------------------------------------------------------------------------------------------------------        
    #if($space == '')
      <dl>
        <dt>
          <label for="space">$msg.get('core.create.space')</label>
          <span class="xHint">$msg.get('core.create.page.space.hint')</span>
        </dt>
        <dd>
          <input type="text" id="space" size="60" name="space" class="suggestSpaces" value="$!{escapetool.xml($defaultSpace)}"/>
        </dd>
      </dl>
      #set($discard = $jsValidationInitializersContainer.add("XWiki.createPage.initSpaceValidator();"))
    #else
      <input type="hidden" id="space" name="space" value="$!{escapetool.xml($space)}" />
    #end
    ## ---------------------------------------------------------------------------------------------------------
    ## Page field
    ## ---------------------------------------------------------------------------------------------------------
    #if($page == '')
      <dl>
        <dt>
          <label for="page">$msg.get('core.create.page')</label>
          <span class="xHint">$msg.get('core.create.page.hint')</span>
        </dt>
        <dd>
          #set ($pageText = $msg.get('core.create.pageText'))
          <input type="text" id="page" size="60" name="page" value="$pageText" class="withTip"/>
        </dd>
      </dl>
      #set($discard = $jsValidationInitializersContainer.add("XWiki.createPage.initPageValidator();"))
    #else
      <input type="hidden" id="page" name="page" value="$!{escapetool.xml($page)}" />
    #end
    ## ---------------------------------------------------------------------------------------------------------
    ## Output JavaScript validation code
    ## ---------------------------------------------------------------------------------------------------------
    <script type="text/javascript">
    //<![CDATA[
      Event.observe(document, 'xwiki:dom:loaded', function() {
        #foreach($initializer in $jsValidationInitializersContainer)
          $initializer
        #end
      }.bindAsEventListener(XWiki.createPage));
    //]]>
    </script>
  #else
    ## ---------------------------------------------------------------------------------------------------------
    ## Space creation
    ## ---------------------------------------------------------------------------------------------------------
    <dl>
      <dt>
        <label for="space">$msg.get('core.create.space')</label>
        <span class="xHint">$msg.get('core.create.space.hint')</span>
      </dt>
      <dd>
        <input type="text" id="space" size="60" name="space"/>
      </dd>
    </dl>
    <input type="hidden" name="parent" value="$!{escapetool.xml($parent)}"/>
    ## ---------------------------------------------------------------------------------------------------------
    ## Template field
    ## ---------------------------------------------------------------------------------------------------------
    #displayTemplateChoice()
  #end
  <div class="buttons">
    <span class="buttonwrapper">
      <input type="submit" class="button" value="$msg.get('create')"/>
    </span>
  </div>
  </div>
</form>
