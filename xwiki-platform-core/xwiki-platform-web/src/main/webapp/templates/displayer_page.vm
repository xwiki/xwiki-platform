#if ($type == 'edit' || $type == 'search')
  #if ($field.getProperty('displayType').value == 'input' && $field.getProperty('picker').value == 1)
    #xpropertySuggestInputDisplayer($field $prefix $name $value)
  #else
    $doc.displayEdit($field, $prefix, $object)
  #end
#elseif ($type == 'view')
  #set ($pages = [])
  #foreach($pageReference in $value)
    #set ($discard = $pages.add("#displayPageReference($pageReference)"))
  #end
  #if ($pages.size() > 0)
    $stringtool.join($pages, '-')
  #else
    #displayPageReference($value)
  #end
#elseif ($type == 'rendered')
  $doc.displayRendered($field, $prefix, $object)
#elseif ($type == 'hidden')
  $doc.displayHidden($field, $prefix, $object)
#else
  ## In order for the custom displayer to be taken into account, the result of its evaluation with an unknown display
  ## mode must not be empty. Let's output something.
  Unknown display mode.
#end

#macro(displayPageReference $pageReference)
  #set ($pageDoc = $xwiki.getDocument($pageReference))
  #if ("$!pageDoc" == "")
    $pageReference
  #else
    #if ($pageDoc.isNew())
      <span class="wikicreatelink">
        <a href="$pageDoc.getURL('create')">$pageDoc.getRenderedTitle('plain/1.0')</a>
      <span/>
    #else
      <a href="$pageDoc.URL">$pageDoc.getRenderedTitle('plain/1.0')</a>
    #end
  #end
#end
