## ---------------------------------------------------------------------------
## See the NOTICE file distributed with this work for additional
## information regarding copyright ownership.
##
## This is free software; you can redistribute it and/or modify it
## under the terms of the GNU Lesser General Public License as
## published by the Free Software Foundation; either version 2.1 of
## the License, or (at your option) any later version.
##
## This software is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
## Lesser General Public License for more details.
##
## You should have received a copy of the GNU Lesser General Public
## License along with this software; if not, write to the Free
## Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
## 02110-1301 USA, or see the FSF site: http://www.fsf.org.
## ---------------------------------------------------------------------------
<meta name="revisit-after" content="7 days" />
<meta name="description" content="$escapetool.xml($!tdoc.plainTitle)" />
#set($keywords = "wiki,$!doc.getTags()")
<meta name="keywords" content="$escapetool.xml($keywords.replaceAll('[|,]', ' ').trim())" />
<meta name="rating" content="General" />
<meta name="author" content="$escapetool.xml($!xwiki.getUserName($doc.getAuthor(), false))" />
## Add HTML tags inside the page's head element, provided by UI Extensions implementing the "org.xwiki.platform.html.head" Extension Point
#foreach($uix in $services.uix.getExtensions("org.xwiki.platform.html.head", {'sortByParameter' : 'order'}))
    $services.rendering.render($uix.execute(), 'xhtml/1.0')
#end
## We verify that we don't display RSS feeds on the login page since it causes problems if these feeds are
## protected. In addition it makes the login redirect to the feeds page in some cases.
#if($doc.fullName != "XWiki.XWikiLogin")
    ## TODO: replace this hack with a call to a proper API to get the URL of the notification RSS (or at the very least an API to get the based URL of the REST endpoint)
    #set ($rssURL = $services.rest.url($services.model.createDocumentReference($xcontext.database, 'Main', 'WebHome')))
    #set ($rssURL = "${rssURL.substring(0, $rssURL.indexOf('/rest'))}/rest/notifications/rss")
    #set ($rssURL = "${rssURL}?userId=$!escapetool.url($services.model.serialize($xcontext.userReference, 'default'))")
    #set ($rssURL = "${rssURL}&count=50&useUserPreferences=false&displayOwnEvents=true")
<link rel="alternate" type="application/rss+xml" title="Wiki Feed RSS" href="$rssURL" />
<link rel="alternate" type="application/rss+xml" title="Blog RSS Feed" href="$xwiki.getURL('Blog.GlobalBlogRss', 'view', 'xpage=plain')" />
#end
