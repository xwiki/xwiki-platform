<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.1">
  <web>ExtensionCode</web>
  <name>ExtensionAuthorsDisplayer</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1320675067000</creationDate>
  <parent>WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1396540966000</date>
  <contentUpdateDate>1396540966000</contentUpdateDate>
  <version>1.1</version>
  <title/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.0</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity}}
#if ($context.action == 'edit' || $context.action == 'inline')
  #set($isEditMode = true)
#else
  #set($isViewMode = true)
#end
#set($name = "authors")
#set($pageList = $doc.getValue($name))
#if (!$pageList || $pageList == "")
  #set($pageListValue = "")
#else
  #set($pageListValue = $pageList.join("|"))
#end
#set($pagePickerCounter = 100)
#if ($isEditMode)
  {{html clean="false"}}
    $xwiki.jsx.use("ExtensionCode.ExtensionAuthorsDisplayer", { "defer" : false })
    #set($script = $xwiki.getURL("ExtensionCode.ExtensionAuthorsSuggest", "get", "outputSyntax=plain"))
    ## TODO: support disabled Javascript
    &lt;input id="pagepicker-${pagePickerCounter}-suggest" type="text" name="search" value="" onfocus='suggest${pagePickerCounter}(this);' autocomplete='off' size='40' /&gt;
    &lt;span class="buttonwrapper"&gt;&lt;a href="#" id="action_addauthor" class="button" type="submit" onclick="addPage(${pagePickerCounter}, $('pagepicker-${pagePickerCounter}-suggest').value, $('pagepicker-${pagePickerCounter}-suggest').value);"&gt;Add&lt;/a&gt;&lt;/span&gt;
    &lt;input id="pagepicker-${pagePickerCounter}-input" type="hidden" name="${prefix}${name}" value="$!pageListValue" /&gt;
    &lt;ul id="pagepicker-${pagePickerCounter}-items" class="pagepicker-list"&gt;
    &lt;/ul&gt;
    &lt;script type="text/javascript"&gt;
    // &lt;![CDATA[
    function suggest${pagePickerCounter}(field) {
      if (!field.suggest${pagePickerCounter}) {
        field.suggest${pagePickerCounter} = new XWiki.widgets.Suggest(field, { script:"${script}&amp;", 
                   varname:"input", seps:"|,", 
                   callback: function(obj) {  
                               addPage($pagePickerCounter, obj.info, obj.value);
                               return false;
                             }
        });
        field.suggest${pagePickerCounter}.options.timeout = 5000;
      }
    }
    #if ($pageList)
      #foreach($page in $pageList)
        #if ($xwiki.exists($page))
          #set($pageTitle = $xwiki.getUserName($page, false))
        #else
          #set($pageTitle = $page)
        #end
        addPage(${pagePickerCounter}, "$page", "$pageTitle");
      #end
    #end
    // ]]&gt;
    &lt;/script&gt;
  {{/html}}
#else
  #foreach($page in $pageList)#if($velocityCount &gt; 1), #end#if($xwiki.exists($page))[[${xwiki.getUserName($page, false)}&gt;&gt;$page]]#else$page#end#end
#end
{{/velocity}}</content>
  <object>
    <name>ExtensionCode.ExtensionAuthorsDisplayer</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>bdc76da2-2455-46bf-8ee4-d75882f2417e</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>function escapeForXML(origtext) {
   return origtext.replace(/\&amp;/g,'&amp;'+'amp;').replace(/&lt;/g,'&amp;'+'lt;').replace(/&gt;/g,'&amp;'+'gt;').replace(/\'/g,'&amp;'+'apos;').replace(/\"/g,'&amp;'+'quot;');
}
  
function removePage(nb, tag, page, pageTitle) {
   tag.parentNode.parentNode.removeChild(tag.parentNode);
   updatePageList(nb);
}

function addPage(nb, obj) {
    var page = obj.info;
    var pageTitle = obj.value;
    addPage(nb, page, pageTitle);
  }

function addPage(nb, page, pageTitle) {
   var el = $("pagepicker-" + nb + "-items");
   var spage = escapeForXML(page);
   var spageTitle = escapeForXML(pageTitle);
   var li = document.createElement("li");
   var span = document.createElement("span");
   span.innerHTML = spageTitle;   
   span.className = "pagepicker-" + nb + "-item";
   span.value = page;
   var img = document.createElement("img");
   img.src = "$xwiki.getSkinFile('icons/silk/cross.png')";
   img.onclick = function() { removePage(nb, this, spage, spageTitle); };
   li.appendChild(span);
   li.appendChild(img);
   el.appendChild(li);
   updatePageList(nb);
  }

// retrieves the current list of pages
function updatePageList(nb) {
 var fld = $("pagepicker-" + nb + "-input");
 fld.value = getPageList(nb);
 var suggestfld = $("pagepicker-" + nb + "-suggest");
 suggestfld.value = "";
}

// retrieves the current list of pages
function getPageList(nb) {
  var docs = document.getElementsByClassName("pagepicker-" + nb + "-item");
  var i;
  var pages = "";
  for (i = 0; i &lt; docs.length; i++)
  {
   var doc = docs[i];
   if (pages!="")
    pages += "|";
   pages += doc.value;
  }
  return pages;
 }</code>
    </property>
    <property>
      <name>js</name>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
</xwikidoc>
