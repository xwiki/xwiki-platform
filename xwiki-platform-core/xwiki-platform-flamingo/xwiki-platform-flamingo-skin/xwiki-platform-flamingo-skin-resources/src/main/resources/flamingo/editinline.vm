## ---------------------------------------------------------------------------
## See the NOTICE file distributed with this work for additional
## information regarding copyright ownership.
##
## This is free software; you can redistribute it and/or modify it
## under the terms of the GNU Lesser General Public License as
## published by the Free Software Foundation; either version 2.1 of
## the License, or (at your option) any later version.
##
## This software is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
## Lesser General Public License for more details.
##
## You should have received a copy of the GNU Lesser General Public
## License along with this software; if not, write to the Free
## Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
## 02110-1301 USA, or see the FSF site: http://www.fsf.org.
## ---------------------------------------------------------------------------
#if($xcontext.getAction() != 'edit' && $xcontext.getAction() != 'inline')
  $response.sendRedirect($doc.getURL('edit', 'editor=inline'))
#end
## Insert JS and CSS needed for the fullscreen edit feature
$xwiki.jsfx.use('uicomponents/widgets/fullScreen.js', {'forceSkinAction': true, 'language': ${xcontext.locale}})##
$xwiki.ssfx.use('uicomponents/widgets/fullScreen.css', true)##
#set($formname = "inline")
#set($saveaction = "save")
#set($previewenabled = true)
## Determine if editing should be allowed
#set($force = $!request.get("force"))
#set($allowDocEdit = !(($doc.getLocked()==true)&&(!$force)) )
##
<div class="main">
## ----------------------------------------------------------------------------
## Start FORM at start of content area IF editing is allowed.
## ----------------------------------------------------------------------------
#if ($allowDocEdit)
 <form id="inline" method="post" action="$doc.getURL("preview")" class="withLock">
#end
#if ($services.parentchild.isParentChildMechanismEnabled())
  <div class="edit-meta-tools">
    ## Edit parent button added here explicitly because inline mode is handled specially in edit.vm and does not behave
    ## like the other edit modes.
    <a id="editParentTrigger" class="tool edit-parent" href="#mainEditArea"
        title="$services.localization.render('core.editors.content.parentField.edit.title')">
      [$services.localization.render('core.editors.content.parentField.edit')]
    </a>
  </div>
#end
#template("hierarchy.vm")
## Set as an HTML main for better DOM tree semantics to facilitate navigation with assistive technologies.
<main id="mainContentArea">
## Display a warning in case the document is restricted to explain explain the reason for potential errors.
## Also, only display it to users with script right as it's very unlikely that others are impacted.
#if ($doc.isRestricted() && $services.security.authorization.hasAccess('script'))
  #warning($escapetool.xml($services.localization.render('core.document.restrictedEdit')))
#end
<div class="row">
  <div id="editMeta" class="col-xs-12 col-md-7">
    #template('editmeta.vm')
    ## ----------------------------------------------------------------------------
    ## Compute title to display and modify rendered content accordingly.
    ## ----------------------------------------------------------------------------
    #set ($renderedContent = $cdoc.getRenderedContent())
    #template("titlevars.vm")
    ## ----------------------------
    ## Display the title
    ## ----------------------------
    <div id="document-title"><h1>$titleToDisplay</h1></div>
  </div>
  #if($displayContentMenu)
    <div class="col-xs-12 col-md-5">
      #template("menus_content.vm")
    </div>
  #end
</div>
##
## If the document cannot be edited, display an information and a forcing link:
##
#if (!$allowDocEdit)
  <div>
  $response.setStatus(423)
  #set($newquerystring = "$!{request.getQueryString().replaceAll('&', '&amp;').replaceAll('&amp;amp;', '&amp;')}&amp;force=1")
  #set($forceEditURL = $doc.getURL($xcontext.action, ${newquerystring}))
  #xwikimessageboxstart($services.localization.render('notice') "$services.localization.render('doclockedby') $xwiki.getUserName($doc.getLockingUser())")
    <a href="$forceEditURL">$services.localization.render('forcelock')</a>
  #xwikimessageboxend()
  </div>
#else
##
## Otherwise, can edit - continue the form.
##
<div>
## ----------------------------
## Display the rendered content
## ----------------------------
$renderedContent
## ----------------
## Hidden form data
##-----------------
## NOTE: We output the hidden form data after the rendered content in order to be able to overwrite it from the sheet.
<input type="hidden" name="xcontinue" value="$doc.getURL($doc.getDefaultEditMode(), 'editor=inline')"/>
## CSRF prevention
<input type="hidden" name="form_token" value="$!{services.csrf.getToken()}" />
## This input is used by the full screen widget: it stores the selector of the maximized element, so that the full screen can be restored when coming back from preview.
<input type="hidden" name="x-maximized" value="$!{escapetool.xml(${request.get('x-maximized')})}" />
<input type="hidden" name="xredirect" value="$!{escapetool.xml($request.get('xredirect'))}" />
<input type="hidden" name="xnotification" value="$!{escapetool.xml($request.get('xnotification'))}" />
<input type="hidden" name="template" value="$!{escapetool.xml($request.template)}" />
## We need to submit the language of the translated document because the inline edit mode is not limited to editing only
## the objects, which are shared by all translations. We can also edit the content or the title of the document which are
## specific to each translation and so we need to specify which translation is being edited.
<input type="hidden" name="language" value="$!{escapetool.xml($tdoc.realLocale)}" />
#if("$!request.parent" != '')
  <input type="hidden" name="parent" value="$escapetool.xml($!request.parent)" />
#end
#if("$!request.title" != '')
  <input type="hidden" name="title" value="$escapetool.xml($!request.title)" />
#end
#if("$!request.xhidden" != '')
  <input type="hidden" name="xhidden" value="$escapetool.xml($!request.xhidden)" />
#end
#if ("$!request.template" != '')
  ## Used when creating a document (i.e. editing for the first time) from a template to wait asynchronously
  ## (with javascript progress information) for the save operation to finish. Without this, the save operation
  ## is synchronous by default.
  #set ($async = $request.async)
  #if ("$!async" == '')
    #set ($async = 'true')
  #end
  <input type="hidden" name="async" value="$escapetool.xml($async)" />
#end
## Pass the section number when the form is submitted in order to affect only the specified section.
## We need to test if the section number is present to prevent a NumberFormatException for the empty string.
#if("$!{request.section}" != '')
  <input type="hidden" name="section" value="$!{escapetool.xml($request.section)}" />
#end
## --------------
## Action buttons
## --------------
#set($editactions = "bottom")
<div class="bottombuttons sticky-buttons">#template("editactions.vm")</div>
</div> ## form
</main>## mainContentArea
</form>
#end ## can edit
</div> ## main
