## ---------------------------------------------------------------------------
## See the NOTICE file distributed with this work for additional
## information regarding copyright ownership.
##
## This is free software; you can redistribute it and/or modify it
## under the terms of the GNU Lesser General Public License as
## published by the Free Software Foundation; either version 2.1 of
## the License, or (at your option) any later version.
##
## This software is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
## Lesser General Public License for more details.
##
## You should have received a copy of the GNU Lesser General Public
## License along with this software; if not, write to the Free
## Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
## 02110-1301 USA, or see the FSF site: http://www.fsf.org.
## ---------------------------------------------------------------------------
#macro (getEditConfirmation)
  #set ($editConfirmation = $NULL)
  ##
  ## Check if edit is forced.
  ##
  #set ($session = $request.session)
  #set ($sessionAttributeName = 'force_edit_' + $doc.prefixedFullName)
  #set ($editForced = $session.getAttribute($sessionAttributeName))
  #if (!$editForced && "$!request.get('force')" != '')
    #set ($editForced = true)
    #set ($discard = $session.setAttribute($sessionAttributeName, $editForced))
  #end
  ##
  ## Check if the document is protected and ask for confirmation if it is.
  ##
  #set ($protectionLevel = $services.extension.xar.getEditSecurityLevel($xcontext.userReference,
    $tdoc.documentReferenceWithLocale))
  #if ($protectionLevel.name() == 'DENY')
    ## We cannot force the edit.
    #set ($editConfirmation = {
      'title': $services.localization.render('error'),
      'message': "#documentProtectedMessage($protectionLevel)",
      'reject': $services.localization.render('cancel')
    })
  #elseif ($protectionLevel.name() != 'NONE' && !$editForced)
    #set ($editConfirmation = {
      'title': $services.localization.render('warning'),
      'message': "#documentProtectedMessage($protectionLevel)",
      'reject': $services.localization.render('cancel'),
      'confirm': $services.localization.render('forcelock')
    })
  ##
  ## Check if the document is being edited by another user and ask for confirmation if it is.
  ##
  #elseif ($tdoc.getLocked() && !$editForced)
    #define ($message)
      #set ($lockingUser = "#displayUser($tdoc.lockingUser {'useInlineHTML': true})")
      <p class="xwikimessage">
        $escapetool.xml($services.localization.render('doclockedby')) ${lockingUser.trim()}.
      </p>
    #end
    #set ($editConfirmation = {
      'title': $services.localization.render('warning'),
      'message': "$message",
      'reject': $services.localization.render('cancel'),
      'confirm': $services.localization.render('forcelock')
    })
  #end
#end

#macro (documentProtectedMessage $protectionLevel)
  #set ($extensions = $services.extension.xar.getInstalledExtensions($tdoc.documentReferenceWithLocale))
  <p class="xwikimessage">
    $escapetool.xml($services.localization.render("extension.xar.edit${protectionLevel.name().toLowerCase()}.list"))
  </p>
  <ul>
    #foreach ($extension in $extensions)
      <li>$escapetool.xml($extension.name) ($escapetool.xml($extension.id.version))</li>
    #end
  </ul>
  <p>
    $escapetool.xml($services.localization.render(
      "extension.xar.edit${protectionLevel.name().toLowerCase()}.explanation"))
  </p>
#end
