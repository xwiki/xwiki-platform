$response.setContentType("application/x-json")
#set( $offset = $util.parseInt( $request.get( "offset" ) ) )
## offset starts from 0 in velocity and 1 in javascript
#set( $off = $offset - 1 )
#set( $limit = $util.parseInt( $request.get( "limit" ) ) )

#set( $rm = $xwiki.rightsmanager.groupsApi )

#### get all the request parameters which are filters
#set( $params = $request.getParameterMap() )
#set( $keys = $params.keySet() )
#set( $defaultKeys = ["xpage", "offset", "limit", "wiki", "reqNo", "sort", "dir"] )
#set( $docProps = ["fullName", "name"] )
#set( $filterMap = $util.hashMap )
#set( $orderList = $util.arrayList )
#foreach( $key in $keys )
  #if(! $defaultKeys.contains( $key ) )
     ## build the filters map
     #foreach( $i in $params.get( $key ) ) #set( $value = $i ) #end
     #if( $docProps.contains( $key )) 
        #set( $arr = $util.arrayList )
        #set( $discard = $arr.add( null ) ) ## this may be variable...
        #set( $discard = $arr.add( "$value" ) )
        #set( $discard = $filterMap.put("$key", $arr))
        #set( $discard = $orderList.add( "$key" ))
     #else
        #set( $arr = $util.arrayList )
        #set( $discard = $arr.add( "StringProperty" ) ) ## this may be variable...
        #set( $discard = $arr.add( "$value" ) )
        #set( $discard = $filterMap.put("$key", $arr))
        #set( $arr2 = $util.arrayList )
        #set( $discard = $arr2.add( "$key" ) )
        #set( $discard = $arr2.add( "StringProperty" ) )
        #set( $discard = $orderList.add( $arr2 ))
     #end
  #end
#end

#if($orderList.size() == 0)
#set($disc = $orderList.add("name")) ## initially fiter by "name" !!!
#end

#foreach( $i in $params.get( "wiki" ) ) #set( $value = $i ) #end
#if( $value == "local" )
  #set( $groups = $rm.getAllMatchedLocalGroups( $filterMap, $limit, $off, $orderList ) )
  #set( $countGroups = $rm.countAllMatchedLocalGroups( $filterMap ) )
#elseif( $value == "global" )
  #set( $groups = $rm.getAllMatchedGlobalGroups( $filterMap, $limit, $off, $orderList ) )
  #set( $countGroups = $rm.countAllMatchedGlobalGroups( $filterMap ) )
#else
  ## get both local and global groups
  #set( $groups = $rm.getAllMatchedGroups( $filterMap, $limit, $off, $orderList ) )
  #set( $countGroups = $rm.countAllMatchedGroups( $filterMap ) )
#end

### json starts
{
"totalrows": $countGroups,
"returnedrows": #if($countGroups < $limit) $countGroups #else $limit #end,
"offset": $offset,
"reqNo": $util.parseInt($request.reqNo),
"rows": [
#foreach( $group in $groups )
  #set($wikiname = $group.getWiki())
  #if($wikiname != "xwiki" || $wikiname == $xcontext.database) #set($wikiname = "local") #end
   #set( $grs = $xwiki.rightsmanager.getAllGroupsForUser( $group.fullName ) )
   #if( $velocityCount > 1 ) , #end
   {"username"      : "$!{escapetool.javascript($group.name)}", 
    "fullname"      : "$!{escapetool.javascript($group.fullName)}",
    "wikiname"      : "$!{escapetool.javascript($wikiname)}",
    "members"       : "$xwiki.rightsmanager.countAllMembersNamesForGroup($group.fullName)", 
    "userurl"       : "$xwiki.getURL($group.fullName)",
    "usersaveurl"   : "$group.getURL('save')",
    "userinlineurl" : "$group.getURL("edit", "xpage=plain")",
    "docurl"        : "$xwiki.getURL("XWiki.XWikiPreferences", "admin", "section=Groups")"
  }
#end
]}
### end of json

