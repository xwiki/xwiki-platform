{{velocity}}
#set($dateFormat = 'yyyy MMMM d, HH:mm')
#if(!$request.list)
$xwiki.ssx.use('XWiki.DeletedAttachments')##
$xwiki.jsx.use('XWiki.DeletedAttachments', {'minify' : 'false'})##
##
#set($columns = ['datt.filename', 'datt.docName', 'datt.date', 'datt.deleter', 'actions'])
#set($columnsProperties = {
    'datt.filename'  : { 'type' : 'text', 'size' : 10 },
    'datt.docName'   : { 'type' : 'text', 'size' : 10 },
    'datt.date'      : { 'type' : 'date'},
    'datt.deleter'   : { 'type' : 'text', 'size' : 10 },
    'actions'        : { 'type' : 'text', 'filterable' : false, 'sortable' : false }
  })##
#set($options = {
    'url'               : "$xwiki.getURL('XWiki.DeletedAttachments', 'view', 'list=1&xpage=plain&outputSyntax=plain')",
    'callback'          : 'XWiki.index.trash.attachments.displayEntry',
    'translationPrefix' : 'platform.index.trashAttachments.'
  })##
##
##
##
{{html wiki="true" clean="false"}}
<div class="hidden">
#livetable('attachmentTrash' $columns $columnsProperties $options)
</div>
{{/html}}

{{html wiki="true" clean="false"}}
<noscript>

  #set($deletedAttachments = $services.query.hql('select count(datt.id) from DeletedAttachment as datt').execute().get(0))
  #if($deletedAttachments == 0)

    {{info}}$services.localization.render('platform.index.trashAttachmentsEmpty'){{/info}}

  #else
  #macro(displayDeletedAttachment $id)
    #set($datt = $xwiki.getDeletedAttachment("$id"))
    #set($originalAttachment = $datt.getAttachment())
    #set($originalDocument = $xwiki.getDocument($datt.docName))
    <tr>
      <td><a href="$originalDocument.getAttachmentRevisionURL($originalAttachment.filename, $originalAttachment.version, "rid=${datt.id}").replaceAll('&', '&amp;')">$escapetool.xml($datt.filename)</a></td>
      <td><a href="$originalDocument.getURL()">$escapetool.xml($originalDocument.plainTitle) ($escapetool.xml(${originalDocument.fullName}))</a></td>
      <td>$xwiki.formatDate($datt.getDate(), $dateFormat)</td>
      <td>$xwiki.getUserName($datt.getDeleter())</td>
      <td class="itemActions">
        #if($datt.canDelete())
          <a href="${originalDocument.getAttachmentURL($datt.filename, 'delattachment', "trashId=${datt.id}&amp;xredirect=$escapetool.url($!request.getRequestURI())?$escapetool.url($!request.getQueryString())")}" class="tool delete" title="$services.localization.render('platform.index.trashAttachmentsActionsDeleteTooltip')">$services.localization.render('platform.index.trashAttachmentsDeleteText')</a>
        #end
      </td>
    </tr>
  #end
##
  #if("$!{request.view}" == '')
    #set($queryParams = '')
  #else
    #set($queryParams = "view=$!{escapetool.url($request.view)}")
  #end
  #set($paginationParameters = {
    'totalItems' : $services.query.hql('select count(datt.id) from DeletedAttachment as datt').execute().get(0),
    'defaultItemsPerPage' : 15,
    'url' : $doc.getURL('view', $queryParams)
  })
  #pagination($paginationParameters)
  <table id="searchResults" class="xwiki-livetable xwiki-livetable-display">
    <thead class="xwiki-livetable-display-header"><tr>
      <th scope="col" class="xwiki-livetable-display-header-text selected asc">$services.localization.render('platform.index.trashAttachments.datt.filename')</th>
      <th scope="col" class="xwiki-livetable-display-header-text">$services.localization.render('platform.index.trashAttachments.datt.docName')</th>
      <th scope="col" class="xwiki-livetable-display-header-text">$services.localization.render('platform.index.trashAttachments.datt.date')</th>
      <th scope="col" class="xwiki-livetable-display-header-text">$services.localization.render('platform.index.trashAttachments.datt.deleter')</th>
      <th scope="col" class="xwiki-livetable-display-header-text">$services.localization.render('platform.index.trashAttachments.actions')</th>
    </tr></thead>
    <tbody class="xwiki-livetable-display-body">
    #set ($query = $services.query.hql('select datt.id from DeletedAttachment as datt order by datt.filename asc'))
    #foreach($item in $query.setLimit($paginationParameters.itemsPerPage).setOffset($paginationParameters.firstItem).execute())
      #displayDeletedAttachment($item)
    #end
    </tbody>
  </table>
  #set($discard = $paginationParameters.put('position', 'bottom'))
  #pagination($paginationParameters)
  #end ## deletedAttachments != 0
</noscript>
{{/html}}##
#else ## request.list
## ============================================================================================
## This page is called from live table via Ajax with the argument xpage=plain. It returns a
## set of results serialized in JSON.
## @programming This service page needs to be saved by a user with the programming access level
## to work as expected
## ============================================================================================
#if("$!{request.get('xpage')}" == 'plain')
$response.setContentType('application/json')
#set($offset = $mathtool.toInteger($request.get('offset')))
## offset starts from 0 in velocity and 1 in javascript
#set($offset = $offset - 1)
#if (!$offset || $offset < 0)
  #set ($offset = 0)
#end
#set($limit = $mathtool.toInteger($request.get('limit')))
#if (!$limit)
  #set ($limit = 15)
#end
#set($filenameFilter = $request.get('datt.filename'))
#set($docNameFilter = $request.get('datt.docName'))
#set($dateFilter = $request.get('datt.date'))
#set($deleterFilter = $request.get('datt.deleter'))
#set($sql = '')
#set($params = [])
#if("$!{filenameFilter}" != '')
  #set($sql = "and lower(datt.filename) like '%${filenameFilter.trim().toLowerCase()}%' ")
#end
#if("$!{docNameFilter}" != '')
  #set($sql = "and lower(datt.docName) like '%${docNameFilter.trim().toLowerCase()}%' ")
#end
#if("$!{dateFilter}" != '')
  #set($dates = $dateFilter.split('-'))
  #if($dates.size() == 2)
    ## Date range matching
    #set($sql = "${sql} and datt.date between ? and ? ")
    #set($discard = $params.add($datetool.toDate($numbertool.toNumber($dates[0]))))
    #set($discard = $params.add($datetool.toDate($numbertool.toNumber($dates[1]))))
  #else
    ## Single value matching
    #set($sql = "${sql} and upper(str(datt.date)) like upper(str(?)) ")
    #set($discard = $params.add($dateFilter))
  #end
#end
#if("$!{deleterFilter}" != '')
  #set($sql = $sql + "and lower(datt.deleter) like '%${deleterFilter.trim().toLowerCase()}%' ")
#end
#if("$!{request.sort}" != '')
  #set($order = $request.sort)
#else
  #set($order = 'datt.id')
#end
#if("$!{request.dir}" != '')
  #set($dir = $request.dir)
#else
  #set($dir = 'asc')
#end
#set($selectSql = "select datt.id, $order from DeletedAttachment as datt where 1=1 " + $sql + " order by $order $dir")
#set($countSql = "select count(*) from DeletedAttachment as datt where 1=1 " + $sql)
#set($items = $services.query.hql($selectSql).bindValues($params).setLimit($limit).setOffset($offset).execute())
#set($totalItems = $services.query.hql($countSql).bindValues($params).execute().get(0))
#set($returnedItems = $items.size())
## ==============================================
## json starts
## ==============================================
{
"totalrows": $totalItems,
"returnedrows": $returnedItems,
"offset": ${mathtool.add($offset, 1)},
"reqNo": ${request.reqNo},
"query" : "$selectSql", 
"rows": [
#foreach($item in $items)
  #set($datt = $xwiki.getDeletedAttachment("$item.get(0)"))
  #if($velocityCount > 1) , #end
  {
    #set($originalAttachment = $datt.getAttachment())
    #set($originalDocument = $xwiki.getDocument($datt.docName))
    #if ($originalDocument)
      "deleteUrl" : "$originalDocument.getAttachmentURL($datt.filename, 'delattachment', "trashId=${datt.id}&form_token=$!{services.csrf.getToken()}")",
      #if ($originalAttachment)
        "url" : "$originalDocument.getAttachmentRevisionURL($originalAttachment.filename, $originalAttachment.version, "rid=${datt.id}")",
      #end
    #end
    "filename"  : "$escapetool.javascript($datt.filename)",
    "docName"  : "$escapetool.javascript($datt.docName)",
    "title"  : #if ($originalDocument)"$escapetool.javascript($originalDocument.plainTitle)"#else"$escapetool.javascript($datt.docName)"#end,
    "documentUrl" : "$xwiki.getURL($datt.docName)",
    "canDelete" : $datt.canDelete(),
    "canRestore" : $datt.canRestore(),
    "alreadyExists" : #if($originalDocument.getAttachment($datt.filename)) true #else false #end,
    "restoreUrl" : "$xwiki.getAttachmentURL($datt.docName, $datt.filename)",
    "date" : "$xwiki.formatDate($datt.date, $dateFormat)",
    "deleter" : "$escapetool.javascript($datt.deleter)",
    "deletername" : "$escapetool.javascript($xwiki.getUserName($datt.deleter, false))",
    "deleterurl" : "$xwiki.getURL($datt.deleter, 'view')"
  }
#end
]}
## ==============================================
## json ended
## ==============================================
#end## xpage=plain
#end## request.list
{{/velocity}}