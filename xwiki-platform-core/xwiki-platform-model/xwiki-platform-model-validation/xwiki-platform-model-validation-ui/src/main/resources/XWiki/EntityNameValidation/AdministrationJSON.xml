<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.4" reference="XWiki.EntityNameValidation.AdministrationJSON" locale="">
  <web>XWiki.EntityNameValidation</web>
  <name>AdministrationJSON</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>XWiki.EntityNameValidation.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity wiki="false"}}
#set ($nameStrategyManager = $services.modelvalidation.manager)
#set ($replaceCharacterConfig = $services.modelvalidation.replaceCharacterEntityNameValidationConfiguration)
#set ($configurationPageReference = $services.model.resolveDocument("XWiki.EntityNameValidation.Configuration"))
#set ($configurationPage = $xwiki.getDocument($configurationPageReference))
#set ($replacementMap = $replaceCharacterConfig.getCharacterReplacementMap())

#macro (getReplacementMap)
    #set ($rowList = $replacementMap.entrySet())
    #setVariable("$json" {
      "totalrows": $rowList.size(),
      "matchingtags": {},
      "tags" : [],
      "returnedrows":  $rowList.size(),
      "offset": 1,
      "reqNo": $numbertool.toNumber($request.reqNo),
      "rows": []
    })
    #foreach ($row in $rowList)
      #set($replacementCharacter = $row.getValue())
      #if ($replacementCharacter == "" || !$replacementCharacter)
        #set($replacementCharacter = $services.localization.render('entitynamevalidation.replacementCharacter.emptyReplacementCharacter'))
      #end
      #set ($delete_url = $doc.getURL("get", $escapetool.url({
          "outputSyntax": "plain",
          "action": "removeCharacter",
          "forbiddenCharacter": $row.getKey(),
          "form_token": $services.csrf.token
      })))
      #set ($rowJson = {
        "doc_viewable": true,
        "forbiddenCharacter": $row.getKey(),
        "replacementCharacter": $replacementCharacter,
        "doc_delete_url": $delete_url
      })
      #set($discard = $json.rows.add($rowJson))
    #end
#end

#macro (transformMapInLists $forbiddenCharactersList $replacementCharactersList)
  #foreach ($entry in $replacementMap.entrySet())
    #set ($discard = $forbiddenCharactersList.add($entry.getKey()))
    #set ($discard = $replacementCharactersList.add($entry.getValue()))
  #end
#end

#macro (addForbiddenCharacter $forbiddenCharacter $replacementCharacter)
  #set ($discard = $replacementMap.put($forbiddenCharacter, $replacementCharacter))
  #saveMapChanges()
#end

#macro (removeForbiddenCharacter $forbiddenCharacter)
  #set ($discard = $replacementMap.remove($forbiddenCharacter))
  #saveMapChanges()
#end

#macro (saveMapChanges)
  #set ($forbiddenCharactersList = [])
  #set ($replacementCharactersList = [])
  #transformMapInLists($forbiddenCharactersList $replacementCharactersList)
  #set($configObject = $configurationPage.getObject('XWiki.EntityNameValidation.ConfigurationClass'))
  #set($discard = $configObject.getProperty("replaceCharacters.forbiddenCharacters").getProperty().setList($forbiddenCharactersList))
  #set($discard = $configObject.getProperty("replaceCharacters.replacementCharacters").getProperty().setList($replacementCharactersList))
  #set($discard = $configurationPage.save())
  #setVariable("$json" {
      "success": true
  })
#end

#if ($request.outputSyntax == "plain")
  #if ("$!request.action" == "")
    #getReplacementMap()
  #elseif ($services.csrf.isTokenValid($request.form_token))
    #if ($request.action == "addCharacter" &amp;&amp; "$request.forbiddenCharacter" != "")
      #addForbiddenCharacter($request.forbiddenCharacter $request.replacementCharacter)
    #elseif ($request.action == "removeCharacter" &amp;&amp; "$request.forbiddenCharacter" != "")
      #removeForbiddenCharacter($request.forbiddenCharacter)
    #else
      #setVariable("$json" {
        "success": false,
        "reason": "Unknown action"
      })
      $response.setStatus(404)
    #end
  #else
    #setVariable("$json" {
      "success": false,
      "reason": "Wrong CSRF"
    })
    $response.setStatus(403)
  #end
  #jsonResponse($json)
#end
{{/velocity}}</content>
</xwikidoc>
