#template('hierarchy_macros.vm')

#set ($displayWikiFields = $xcontext.userReference.wikiReference.name == $xcontext.mainWikiName && $xwiki.hasSubWikis())

#macro (locationPicker $options)
  #set ($discard = $xwiki.get('jsfx').use('uicomponents/widgets/validation/livevalidation_prototype.js'))
  #set ($discard = $xwiki.get('ssfx').use('uicomponents/widgets/validation/livevalidation.css', true))
  #set ($discard = $xwiki.get('jsfx').use('uicomponents/widgets/locationPicker.js', true))
  #set ($discard = $xwiki.get('ssfx').use('uicomponents/widgets/locationPicker.css', true))
  <dl class="location-picker">
    ##
    ## ---------------------------------------------------------------------------------------------------------
    ## Title field
    ## ---------------------------------------------------------------------------------------------------------
    ##
    #set ($titleField = $options.title)
    #set ($value = $request.getParameter($titleField.name))
    #if (!$value)
      #set ($value = $titleField.value)
    #end
    #set ($escapedValue = $escapetool.xml($value))
    #if ($titleField.label)
      <dt>
        <label for="$!{options.id}Title">$services.localization.render($titleField.label)</label>
        <span class="xHint">$!services.localization.render($titleField.hint)</span>
      </dt>
      <dd>
        <input type="text" id="$!{options.id}Title" name="$titleField.name" value="$!escapedValue"
          class="location-title-field" placeholder="$!services.localization.render($titleField.placeholder)" />
      </dd>
    #elseif ($titleField)
      <dt class="hidden"></dt>
      <dd class="hidden">
        <input type="hidden" name="$titleField.name" value="$!escapedValue"
          class="location-title-field" />
      </dd>
    #end
    ##
    ## ---------------------------------------------------------------------------------------------------------
    ## Location preview
    ## ---------------------------------------------------------------------------------------------------------
    ##
    <dt>
      <label>$services.localization.render($options.preview.label)</label>
      <span class="xHint">$services.localization.render($options.preview.hint)</span>
    </dt>
    <dd>
      #if ($isDocumentTreeAvailable)
        #documentPickerModal($options)
        #locationPickerActions
      #end
      ## The breadcrumb is updated whenever the user changes the parent page. This causes the breadcrumb element to be
      ## constantly replaced, preventing us from displaying the live validation message after it. In order to overcome
      ## this, we wrap the breadcrumb element in a DIV that remains the same.
      <div class="breadcrumb-container">
        ## Note: We display only the parent reference here. The new document part will be added from JavaScript.
        #hierarchy($options.parent.reference)
      </div>
      ##
      ## ---------------------------------------------------------------------------------------------------------
      ## Location advanced edit
      ## ---------------------------------------------------------------------------------------------------------
      ##
      #locationAdvancedEdit($options)
    </dd>
  </dl>
#end

#macro (locationPickerActions)
  <div class="location-actions">
    ## Tree picker toggle
    <a href="#" class="location-action location-action-pick" title="Select a new location">
      $services.icon.renderHTML('chart-organisation')</a>
    ## Location advanced edit button.
    #if ($isAdvancedUser)
      <a href="#" class="location-action location-action-edit">
        <span class="glyphicon glyphicon-pencil"></span>
      </a>
    #end
  </div>
#end

#macro (locationAdvancedEdit $options)
  <div class="location-edit#if ($isDocumentTreeAvailable) hidden#end">
    <dl>
      ## ---------------------------------------------------------------------------------------------------------
      ## Wiki field
      ## ---------------------------------------------------------------------------------------------------------
      #set ($wikiField = $options.wiki)
      #set ($value = $request.getParameter($wikiField.name))
      #if (!$value)
        #set ($value = $wikiField.value)
      #end
      #set ($escapedValue = $escapetool.xml($value))
      #if ($wikiField.label && $displayWikiFields)
        <dt>
          <label for="$!{options.id}Wiki">$services.localization.render($wikiField.label)</label>
          <span class="xHint">$!services.localization.render($wikiField.hint)</span>
        </dt>
        <dd>
          <select id="$!{options.id}Wiki" name="$wikiField.name" class="location-wiki-field">
            #set ($wikis = $xwiki.wikiNames)
            #foreach ($wiki in $wikis)
              #set ($wikiPrettyName = $services.wiki.getById($wiki).prettyName)
              #if ("$!wikiPrettyName.trim()" == '')
                #set ($wikiPrettyName = $wiki)
              #end
              <option value="$!escapetool.xml($wiki)" #if ($wiki == $value) selected="selected" #end>
                $!escapetool.xml($wikiPrettyName)
              </option>
            #end
          </select>
        </dd>
      #elseif ($wikiField)
        <dt class="hidden"></dt>
        <dt class="hidden">
          <input type="hidden" name="$wikiField.name" class="location-wiki-field" value="$!escapedValue" />
        </dt>
      #end
      ## ---------------------------------------------------------------------------------------------------------
      ## Parent Reference field
      ## ---------------------------------------------------------------------------------------------------------
      ##
      #set ($parentField = $options.parent)
      #set ($value = $request.getParameter($parentField.name))
      #if (!$value)
        #if ("$!parentField.reference" == '')
          ## Default to the current document's space.
          #set ($defaultParentReference = $doc.documentReference.lastSpaceReference)
        #else
          #set ($defaultParentReference = $parentField.reference)
        #end
        ## Make sure to use the local serialized string reference.
        ## Note: If the parent is a wiki reference, an empty value will be set in the input.
        #set ($defaultParentReferenceString = $services.model.serialize($defaultParentReference, 'local'))
        #set ($value = $defaultParentReferenceString)
      #end
      #set ($escapedValue = $escapetool.xml($value))
      <dt>
        <label for="$!{options.id}ParentReference">$services.localization.render($parentField.label)</label>
        <span class="xHint">$!services.localization.render($parentField.hint)</span>
      </dt>
      <dd>
        <input type="text" id="$!{options.id}ParentReference" class="location-parent-field suggestSpaces"
          name="$parentField.name" value="$!escapedValue"
          placeholder="$!services.localization.render($parentField.placeholder)" />
      </dd>
      ##
      ## ---------------------------------------------------------------------------------------------------------
      ## Name field
      ## ---------------------------------------------------------------------------------------------------------
      ##
      #set ($nameField = $options.name)
      #set ($value = $request.getParameter($nameField.name))
      #if (!$value)
        #set ($value = $nameField.value)
      #end
      #set ($escapedValue = $escapetool.xml($value))
      #if ($nameField.label)
        <dt>
          <label for="$!{options.id}Name">$services.localization.render($nameField.label)</label>
          <span class="xHint">$!services.localization.render($nameField.hint)</span>
        </dt>
        <dd>
          <input type="text" id="$!{options.id}Name" name="$nameField.name" class="location-name-field"
            value="$!escapedValue"
            placeholder="$!services.localization.render($nameField.placeholder)" />
        </dd>
      #elseif ($nameField)
        <dt class="hidden"></dt>
        <dd class="hidden">
          <input type="hidden" name="$nameField.name" class="location-name-field"
            value="$!escapedValue" />
        </dd>
      #end
    </dl>
  </div>
#end

#macro (documentPickerModal $options)
  <div class="modal fade" tabindex="-1" role="dialog" data-backdrop="static">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
          <h4 class="modal-title">$services.localization.render('core.documentPicker.title')</h4>
        </div>
        <div class="modal-body">
          #set ($showWikis = $options.wiki && $displayWikiFields)
          ## If we don't show the wikis then we need to show the root node (the current wiki) in order to be able to
          ## target top level documents (e.g. create a top level document, move a document to the top level, etc.).
          #set ($showRoot = !$showWikis)
          #documentTree({
            'class': 'location-tree',
            'finder': true,
            'showAttachments': false,
            'showRoot': $showRoot,
            'showTerminalDocuments': false,
            'showTranslations': false,
            'showWikis': $showWikis
          })
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-default" data-dismiss="modal">
            $services.localization.render('core.documentPicker.cancel')
          </button>
          <button type="button" class="btn btn-primary" disabled="disabled">
            $services.localization.render('core.documentPicker.select')
          </button>
        </div>
      </div>
    </div>
  </div>
#end
