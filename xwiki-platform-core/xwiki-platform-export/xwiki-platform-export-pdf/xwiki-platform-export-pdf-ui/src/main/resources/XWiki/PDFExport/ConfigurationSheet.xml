<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.5" reference="XWiki.PDFExport.ConfigurationSheet" locale="">
  <web>XWiki.PDFExport</web>
  <name>ConfigurationSheet</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>XWiki.PDFExport.ConfigurationClass</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity output="false"}}
#set ($discard = $xwiki.ssx.use('XWiki.PDFExport.ConfigurationSheet'))
#set ($discard = $xwiki.jsx.use('XWiki.PDFExport.ConfigurationSheet'))
## Load the JavaScript code required to make the object properties editable in-place.
#set ($discard = $xwiki.jsfx.use('uicomponents/edit/editableProperty.js', {
  'forceSkinAction': true,
  'language': $xcontext.locale
}))
#set ($editing = $xcontext.action == 'edit' || $xcontext.action == 'admin')
## The object to display.
#set ($configObject = $doc.getObject('XWiki.PDFExport.ConfigurationClass'))
## The class that describes the object properties.
#set ($configClass = $configObject.xWikiClass)
## Make sure the following display* method calls use the right object.
#set ($discard = $doc.use($configObject))

#macro (displayPDFExportConfigProperty $configPropertyName $options)
  #set ($configProperty = $configClass.get($configPropertyName))
  &lt;dt #if (!$editing &amp;&amp; $services.security.authorization.hasAccess('edit'))
      class="editableProperty"
      #set ($configPropertyReference = $configObject.getProperty($configProperty.name).reference)
      data-property="$escapetool.xml($services.model.serialize($configPropertyReference))"
      data-property-type="object"#end&gt;
    ## This must match the id generated by the $doc.display() method below.
    #set ($configPropertyId = "${configClass.name}_${configObject.number}_$configProperty.name$!options.idSuffix")
    &lt;label#if ($editing) for="$escapetool.xml($configPropertyId)"#end&gt;
      $escapetool.xml($configProperty.translatedPrettyName)
      #if ($options.required)
        &lt;span class="xRequired"&gt;$escapetool.xml($services.localization.render('core.validation.required'))&lt;/span&gt;
      #end
    &lt;/label&gt;
    ## Support for specifying a translation key as hint in the property definition.
    &lt;span class="xHint"&gt;$!escapetool.xml($services.localization.render($configProperty.hint))&lt;/span&gt;
  &lt;/dt&gt;
  #set ($displayMode = 'view')
  #if ($editing)
    #set ($displayMode = 'edit')
  #end
  &lt;dd&gt;#displayPDFExportConfigPropertyValue($configProperty, $displayMode)&lt;/dd&gt;
#end

#macro (displayPDFExportConfigPropertyValue $configProperty $displayMode)
  #unwrapXPropertyDisplay($doc.display($configProperty.name, $displayMode))
#end

#macro (viewPDFExportConfig)
  #foreach ($property in $configClass.properties)
    #displayPDFExportConfigProperty($property.name)
  #end
#end

#macro (editPDFExportConfig)
  #displayPDFExportConfigProperty('templates')
  &lt;dt&gt;
    &lt;label for="pdfGenerator"&gt;
      $escapetool.xml($services.localization.render('export.pdf.generator.label'))
    &lt;/label&gt;
    &lt;span class="xHint"&gt;$escapetool.xml($services.localization.render('export.pdf.generator.hint'))&lt;/span&gt;
  &lt;/dt&gt;
  #if (!$services.export.pdf.configuration.isServerSide())
    #set ($selectedPDFGenerator = 'userBrowser')
  #elseif ("$!services.export.pdf.configuration.chromeHost" == '')
    #set ($selectedPDFGenerator = 'chromeDockerContainer')
  #else
    #set ($selectedPDFGenerator = 'remoteChrome')
  #end
  &lt;dd&gt;
    &lt;select id="pdfGenerator"&gt;
      #foreach ($pdfGenerator in ['userBrowser', 'chromeDockerContainer', 'remoteChrome'])
        &lt;option value="$escapetool.xml($pdfGenerator)"
            #if ($pdfGenerator == $selectedPDFGenerator)selected="selected"#end
            title="$escapetool.xml($services.localization.render("export.pdf.generator.${pdfGenerator}.hint"))"&gt;
          $escapetool.xml($services.localization.render("export.pdf.generator.${pdfGenerator}.label"))
        &lt;/option&gt;
      #end
    &lt;/select&gt;
    &lt;fieldset id="pdfGenerator-userBrowser" class="pdfGeneratorConfig
        #if ($selectedPDFGenerator == 'userBrowser')"#else hidden" disabled="disabled"#end&gt;
      &lt;legend&gt;
        $escapetool.xml($services.localization.render("export.pdf.generator.userBrowser.label"))
      &lt;/legend&gt;
      &lt;p class="xHint"&gt;
        $escapetool.xml($services.localization.render('export.pdf.generator.userBrowser.hint'))
      &lt;/p&gt;
      &lt;input type="hidden" name="${configClass.name}_${configObject.number}_serverSide" value="0" /&gt;
    &lt;/fieldset&gt;
    &lt;fieldset id="pdfGenerator-chromeDockerContainer" class="pdfGeneratorConfig
        #if ($selectedPDFGenerator == 'chromeDockerContainer')"#else hidden" disabled="disabled"#end&gt;
      &lt;legend&gt;
        $escapetool.xml($services.localization.render('export.pdf.generator.chromeDockerContainer.label'))
      &lt;/legend&gt;
      &lt;p class="xHint"&gt;
        $escapetool.xml($services.localization.render('export.pdf.generator.chromeDockerContainer.hint'))
      &lt;/p&gt;
      &lt;input type="hidden" name="${configClass.name}_${configObject.number}_serverSide" value="1" /&gt;
      &lt;input type="hidden" name="${configClass.name}_${configObject.number}_chromeHost" value="" /&gt;
      &lt;dl&gt;
        #displayPDFExportConfigProperty('chromeDockerImage')
        #displayPDFExportConfigProperty('chromeDockerContainerName')
        #displayPDFExportConfigProperty('chromeRemoteDebuggingPort', {'min': 1, 'max': 65535})
        #displayPDFExportConfigProperty('dockerNetwork')
        #displayPDFExportConfigProperty('xwikiURI')
      &lt;/dl&gt;
    &lt;/fieldset&gt;
    &lt;fieldset id="pdfGenerator-remoteChrome" class="pdfGeneratorConfig
        #if ($selectedPDFGenerator == 'remoteChrome')"#else hidden" disabled="disabled"#end&gt;
      &lt;legend&gt;
        $escapetool.xml($services.localization.render("export.pdf.generator.remoteChrome.label"))
      &lt;/legend&gt;
      &lt;p class="xHint"&gt;
        $escapetool.xml($services.localization.render('export.pdf.generator.remoteChrome.hint'))
      &lt;/p&gt;
      &lt;input type="hidden" name="${configClass.name}_${configObject.number}_serverSide" value="1" /&gt;
      &lt;dl&gt;
        #displayPDFExportConfigProperty('chromeHost', {'required': true})
        #displayPDFExportConfigProperty('chromeRemoteDebuggingPort', {
          'idSuffix': '_remoteChrome',
          'min': 1, 'max': 65535
        })
        #displayPDFExportConfigProperty('xwikiURI', {'idSuffix': '_remoteChrome'})
      &lt;/dl&gt;
    &lt;/fieldset&gt;
  &lt;/dd&gt;
  #set ($maxSigned32BitInteger = 2147483647)
  ## We ask the user to specify the page ready timeout in seconds but we actually need the milliseconds value so we
  ## multiply it by 1000, thus we need to lower the upper limit. Note that the final value is passed to JavaScript's
  ## setTimeout whose delay parameter max value is 2^31-1 (i.e. 32 bit integer, with one sign bit).
  #displayPDFExportConfigProperty('pageReadyTimeout', {'min': 0, 'max': $mathtool.idiv($maxSigned32BitInteger, 1000)})
  #displayPDFExportConfigProperty('maxContentSize', {'min': 0, 'max': $maxSigned32BitInteger})
  #displayPDFExportConfigProperty('replaceFOP')
#end
{{/velocity}}

{{velocity}}
#if ($configObject)
  {{html clean="false"}}
  ## Using the xform vertical form layout.
  &lt;div class="xform"&gt;
    &lt;dl&gt;
      #if ($editing)
        #editPDFExportConfig()
      #else
        #viewPDFExportConfig()
      #end
    &lt;/dl&gt;
  &lt;/div&gt;
  {{/html}}
#end
{{/velocity}}</content>
  <object>
    <name>XWiki.PDFExport.ConfigurationSheet</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>6f341f30-e1ed-495f-9336-129c99c1dad2</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <defaultValue>long</defaultValue>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <restricted>0</restricted>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>(function() {
  document.querySelector('select#pdfGenerator')?.addEventListener('change', function(event) {
    event.target.parentNode.querySelectorAll('fieldset.pdfGeneratorConfig').forEach(fieldset =&gt; {
      fieldset.disabled = fieldset.id !== `pdfGenerator-${event.target.value}`;
      fieldset.classList.toggle('hidden', fieldset.disabled);
    });
  });

  document.querySelectorAll('a[data-confirmation]').forEach(anchor =&gt; {
    anchor.addEventListener('click', event =&gt; {
      if (!confirm(anchor.getAttribute('data-confirmation'))) {
        event.preventDefault();
      }
    });
  });
})();

require(['jquery', 'xwiki-events-bridge'], function($) {
  $(document).on('xwiki:actions:beforeSave', function(event, data) {
    if (!data?.form?.reportValidity()) {
      event.preventDefault();
    }
  });

  const setPDFGeneratorStatus = function(status) {
    document.querySelectorAll('dd.pdfGeneratorStatus').forEach(statusContainer =&gt; {
      statusContainer.className = `pdfGeneratorStatus pdfGeneratorStatus-${status}`;
    });
  };

  const fetchPDFGeneratorStatus = function() {
    setPDFGeneratorStatus('checking');
    fetch(XWiki.currentDocument.getURL('get', $.param({
      outputSyntax: 'plain',
      sheet: 'XWiki.PDFExport.WebHome',
      data: 'serverSidePrintingAvailable'
    }))).then(response =&gt; response.json()).then(data =&gt; {
      if (data.serverSidePrintingAvailable) {
        setPDFGeneratorStatus('available');
      } else {
        setPDFGeneratorStatus('unavailable');
      }
    }).catch(reason =&gt; {
      setPDFGeneratorStatus('checkFailed');
    });
  };

  const updatePDFGeneratorStatus = function() {
    if (document.getElementById('pdfGenerator')?.value === 'userBrowser') {
      setPDFGeneratorStatus('available');
    } else {
      fetchPDFGeneratorStatus();
    }
  };

  $(document).on('xwiki:action:save', (event) =&gt; {
    setPDFGeneratorStatus('checking');
  });

  $(document).on('xwiki:document:saved', updatePDFGeneratorStatus);
  updatePDFGeneratorStatus();
});</code>
    </property>
    <property>
      <name/>
    </property>
    <property>
      <parse>0</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>XWiki.PDFExport.ConfigurationSheet</name>
    <number>0</number>
    <className>XWiki.StyleSheetExtension</className>
    <guid>c0bb784d-ded2-41ad-a018-72cfa2a13c53</guid>
    <class>
      <name>XWiki.StyleSheetExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <defaultValue>long</defaultValue>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <restricted>0</restricted>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <contentType>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>contentType</name>
        <number>6</number>
        <prettyName>Content Type</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>CSS|LESS</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </contentType>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>.editableProperty-viewer &gt; [data-default-label]:after {
  .text-muted-smaller;
  content: attr(data-default-label);
  margin-left: .5em;
}

.editableProperty-viewer &gt; [data-empty-label]:before {
  content: attr(data-empty-label);
  font-style: italic;
}

fieldset.pdfGeneratorConfig {
  border: 1px solid @xwiki-border-color;
  margin-top: floor(@font-size-base * 0.7);
  padding: (@grid-gutter-width / 2);

  &gt; legend {
    border: 0 none;
    color: @text-muted;
    font-size: .85em;
    margin: 0;
    padding: 0 @padding-xs-horizontal;
    text-transform: uppercase;
    width: auto;
  }

  &gt; dl {
    margin-left: 0;
  }
}

.pdfGeneratorStatus-checking-message,
.pdfGeneratorStatus-checkFailed-message,
.pdfGeneratorStatus-available-message,
.pdfGeneratorStatus-unavailable-message {
  display: none;
}

.pdfGeneratorStatus-checking .pdfGeneratorStatus-checking-message,
.pdfGeneratorStatus-checkFailed .pdfGeneratorStatus-checkFailed-message,
.pdfGeneratorStatus-available .pdfGeneratorStatus-available-message,
.pdfGeneratorStatus-unavailable .pdfGeneratorStatus-unavailable-message {
  display: block;
}</code>
    </property>
    <property>
      <contentType>LESS</contentType>
    </property>
    <property>
      <name/>
    </property>
    <property>
      <parse>0</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
</xwikidoc>
