<?xml version="1.0" encoding="UTF-8"?>
<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.1">
  <web>XWiki</web>
  <name>DeletedDocuments</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1404731556000</creationDate>
  <parent>Main.AllDocs</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1408034089000</date>
  <contentUpdateDate>1408034089000</contentUpdateDate>
  <version>1.1</version>
  <title>$services.localization.render('platform.index.documentsTrash')</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.0</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity}}##
#if(!$xwiki.hasProgrammingRights())
  {{warning}}This document requires programming rights and needs to be saved by an administrator of this Wiki{{/warning}}
#else
#set($dateFormat = 'yyyy MMMM d, HH:mm')
$xwiki.ssx.use('XWiki.DeletedDocuments')##
$xwiki.jsx.use('XWiki.DeletedDocuments')##
##
#set($columns = ["ddoc.fullName", "ddoc.title", "ddoc.date", "ddoc.deleter", 'actions'])
#set($columnProperties = {
    'ddoc.fullName'  : { 'type' : 'text', 'size' : 10 },
    'ddoc.title'     : { 'type' : 'text', 'filterable' : false, 'sortable' : false },
    'ddoc.date'      : { 'type' : 'date', 'filterable' : false },
    'ddoc.deleter'   : { 'type' : 'text', 'size' : 10 },
    'actions'        : { 'type' : 'text', 'filterable' : false, 'sortable' : false }
  })##
#set($options = {
    'url'               : "$xwiki.getURL('XWiki.DeletedDocumentsJSON', 'view', 'list=1&amp;xpage=plain&amp;outputSyntax=plain')",
    'callback'          : 'XWiki.index.trash.documents.displayEntry',
    'translationPrefix' : 'platform.index.trashDocuments.'
  })##
##
##
##
{{html wiki="true" clean="false"}}
&lt;div class="hidden"&gt;
#livetable('documentsTrash' $columns $columnProperties $options)
&lt;/div&gt;
{{/html}}
##
##
##

{{html wiki="true" clean="false"}}
&lt;noscript&gt;
  #set($deletedDocuments = $services.query.hql('select count(ddoc.id) from XWikiDeletedDocument as ddoc').execute().get(0))
  #if($deletedDocuments == 0)

    {{info}}$services.localization.render('platform.index.trashDocumentsEmpty'){{/info}}

  #else
  #macro(displayDeletedDoc $id)
    #set($ddoc = $xwiki.getDeletedDocument('', '', "$id"))
    #set($originalDocument = $ddoc.getDocument())
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="$originalDocument.getURL('view', "viewer=recyclebin&amp;amp;id=${id}")"&gt;$escapetool.xml($ddoc.fullName)&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;$escapetool.xml($originalDocument.plainTitle)&lt;/td&gt;
      &lt;td&gt;$xwiki.formatDate($ddoc.getDate(), $dateFormat)&lt;/td&gt;
      &lt;td&gt;$xwiki.getUserName($ddoc.getDeleter())&lt;/td&gt;
      &lt;td class="itemActions"&gt;
        #if($xwiki.getDocument($ddoc.fullName).isNew())
          #if($ddoc.canUndelete())
            &lt;a href="${originalDocument.getURL('undelete', "id=${id}")}" class="tool restore" title="$services.localization.render('platform.index.trashDocumentsActionsRestoreTooltip')"&gt;$services.localization.render('platform.index.trashDocumentsActionsRestoreText')&lt;/a&gt;
          #end
        #else
          &lt;a href="${originalDocument.getURL()}" class="tool cannot-restore" title="$services.localization.render('platform.index.trashDocumentsActionsCannotRestoreTooltip')"&gt;$services.localization.render('platform.index.trashDocumentsActionsCannotRestoreText')&lt;/a&gt;
        #end
        #if($ddoc.canDelete())
          &lt;a href="${originalDocument.getURL('delete', "id=${id}&amp;amp;xredirect=$escapetool.url($!request.getRequestURI())?$escapetool.url($!request.getQueryString())")}" class="tool delete" title="$services.localization.render('platform.index.trashDocumentsActionsDeleteTooltip')"&gt;$services.localization.render('platform.index.trashDocumentsActionsDeleteText')&lt;/a&gt;
        #end
      &lt;/td&gt;
    &lt;/tr&gt;
  #end
##
  #if("$!{request.view}" == '')
    #set($queryParams = '')
  #else
    #set($queryParams = "view=$!{escapetool.url($request.view)}")
  #end
  #set($paginationParameters = {
    'totalItems' : $services.query.hql('select count(ddoc.id) from XWikiDeletedDocument as ddoc').execute().get(0),
    'defaultItemsPerPage' : 15,
    'url' : $doc.getURL('view', $queryParams)
  })
  #pagination($paginationParameters)
  &lt;table id="searchResults" class="xwiki-livetable xwiki-livetable-display"&gt;
    &lt;thead class="xwiki-livetable-display-header"&gt;&lt;tr&gt;
      &lt;th scope="col" class="xwiki-livetable-display-header-text selected asc"&gt;$services.localization.render('platform.index.trashDocuments.ddoc.fullName')&lt;/th&gt;
      &lt;th scope="col" class="xwiki-livetable-display-header-text"&gt;$services.localization.render('platform.index.trashDocuments.ddoc.title')&lt;/th&gt;
      &lt;th scope="col" class="xwiki-livetable-display-header-text"&gt;$services.localization.render('platform.index.trashDocuments.ddoc.date')&lt;/th&gt;
      &lt;th scope="col" class="xwiki-livetable-display-header-text"&gt;$services.localization.render('platform.index.trashDocuments.ddoc.deleter')&lt;/th&gt;
      &lt;th scope="col" class="xwiki-livetable-display-header-text"&gt;$services.localization.render('platform.index.trashDocuments.actions')&lt;/th&gt;
    &lt;/tr&gt;&lt;/thead&gt;
    &lt;tbody class="xwiki-livetable-display-body"&gt;
    #set ($statement = 'select ddoc.id from XWikiDeletedDocument as ddoc order by ddoc.fullName asc')
    #foreach ($item in $services.query.hql($statement).setLimit($paginationParameters.itemsPerPage).setOffset($paginationParameters.firstItem).execute())
      #displayDeletedDoc($item)
    #end
    &lt;/tbody&gt;
  &lt;/table&gt;
  #set($discard = $paginationParameters.put('position', 'bottom'))
  #pagination($paginationParameters)
  #end ## deletedDocuments.size
&lt;/noscript&gt;
{{/html}}##
#end## hasProgramR
{{/velocity}}</content>
  <object>
    <name>XWiki.DeletedDocuments</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>222ca0ed-b042-41d5-9d7e-942c4cc8a94b</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>// Make sure the XWiki.index.trash.documents 'namespace' exists.
if (typeof XWiki == "undefined") {
  XWiki = new Object();
}
if (typeof XWiki.index == "undefined") {
  XWiki.index = new Object();
}
if (typeof XWiki.index.trash == "undefined") {
  XWiki.index.trash = new Object();
}
if (typeof XWiki.index.trash.documents == "undefined") {
  XWiki.index.trash.documents = new Object();
}

/**
 * Callback function used by the DeletedDocuments livetable for generating the HTML code needed to display an entry.
 * 
 * @param row the JSON data corresponding to the entry to be displayed
 * @param i the index of the row in the list of entries
 * @param table the LiveTable javascript object
 */
XWiki.index.trash.documents.displayEntry = function (row, i, table) {
  var tr = new Element('tr'); // The resulting table row
  var pageTd = new Element('td');
  var page = new Element('a', {'href' : row.url}).update(row.fullname);
  pageTd.appendChild(page);
  if (row.language &amp;&amp; row.language.trim().length != 0) {
    var language = new Element('span').update('(' + row.language.trim() + ')');
    pageTd.appendChild(document.createTextNode(' '));
    pageTd.appendChild(language);
  }
  tr.appendChild(pageTd);
  tr.appendChild(new Element('td').update(row.title));
  tr.appendChild(new Element('td').update(row.date));
  var deleter = new Element('a', {'href' : row.deleterurl}).update(row.deletername);
  tr.appendChild(new Element('td').update(deleter));
  var actions = new Element('td', {'class' : 'itemActions'});
  if(!row.alreadyExists) {
    if(row.canRestore) {
      if (row.causesOrphanedTranslation) {
        // Can not restore: It would cause the translation to be inaccessible from the UI until the main document is restored/created.
        var restore = new Element('a', {
            'href' : row.originalUrl,
            'class' : 'tool cannot-restore',
            'title' : "$services.localization.render('platform.index.trashDocumentsActionsCannotRestoreCausesOrphanedTranslationTooltip')"
          }).update("$services.localization.render('platform.index.trashDocumentsActionsCannotRestoreText')");
        actions.appendChild(restore);
      } else {
        // Restore the document.
        var restore = new Element('a', {
            'href' : row.restoreUrl,
            'class' : 'tool restore',
            'title' : "$services.localization.render('platform.index.trashDocumentsActionsRestoreTooltip')"
          }).update("$services.localization.render('platform.index.trashDocumentsActionsRestoreText')");
        actions.appendChild(restore);
      }
    }
  } else {
    // Can not restore: A document was already restored at that location.
    // TODO: Add an overwrite dialog here.
    var restore = new Element('a', {
        'href' : row.originalUrl,
        'class' : "tool cannot-restore",
        'title' : "$services.localization.render('platform.index.trashDocumentsActionsCannotRestoreTooltip')"
      }).update("$services.localization.render('platform.index.trashDocumentsActionsCannotRestoreText')");
    actions.appendChild(restore);
  }
  if(row.canDelete) {
    var delete_ = new Element('a', {
        'href' : row.deleteUrl,
        'class' : "tool delete",
        'title' : "$services.localization.render('platform.index.trashDocumentsActionsDeleteTooltip')"
      }).update("$services.localization.render('platform.index.trashDocumentsActionsDeleteText')");
    actions.appendChild(document.createTextNode(' '));
    actions.appendChild(delete_);
    delete_.observe('click', XWiki.index.trash.documents.confirmDelete.bindAsEventListener(delete_, table, i));
  }
  tr.appendChild(actions);
  return tr;
}

/**
 * Event listener, called when clicking a delete version link. It displays a confirmation box, speeding up the two-step
 * deletion process.
 * 
 * @param event the link activation event
 * @param table the LiveTable javascript object
 * @param rowIdx the index of the row corresponding to the entry to be deleted
 */
XWiki.index.trash.documents.confirmDelete = function(event, table, rowIdx) {
  event.stop();
  if (this.disabled) {
    // Do nothing if the button was already clicked and it's waiting for a response from the server.
    return;
  } else {
    new XWiki.widgets.ConfirmedAjaxRequest(
      /* Ajax request URL */
      this.href + '&amp;confirm=1' + (Prototype.Browser.Opera ? "" : "&amp;ajax=1"),
      /* Ajax request parameters */
      {
        onCreate : function() {
          // Disable the button, to avoid a cascade of clicks from impatient users
          this.disabled = true;
        }.bind(this),
        onSuccess : function(table, rowIdx) {
          // Remove the corresponding HTML element from the UI and update the livetable
          table.deleteRow(rowIdx);
        }.bind(this, table, rowIdx),
        // This is an expected 404, returned when the document has been successfully deleted and is no longer found
        on404 : function(response, table, rowIdx) {
          response.request.options.onSuccess(table, rowIdx);
        }.bindAsEventListener(this, table, rowIdx),
        onComplete : function() {
          // In the end: re-enable the button
          this.disabled = false;
        }.bind(this)
      },
      /* Interaction parameters */
      {
         confirmationText: "$services.localization.render('core.recyclebin.completelyDeleteConfirm')",
         progressMessageText : "$services.localization.render('platform.index.trashDocumentsDeleteInProgress')",
         successMessageText : "$services.localization.render('platform.index.trashDocumentsDeleteDone')",
         failureMessageText : "$services.localization.render('platform.index.trashDocumentsDeleteFailed')"
      }
      );
  }
}
/*
 * The livetable is hidden when javascript is disabled, so that an alternative &lt;noscript&gt; table is displayed.
 * Re-display it when the document loads and Javascript is available.
 */
document.observe('xwiki:dom:loaded', function() {
  if ($('documentsTrash')) {
    $('documentsTrash').up('.hidden').removeClassName('hidden');
  }
});</code>
    </property>
    <property>
      <name/>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>XWiki.DeletedDocuments</name>
    <number>0</number>
    <className>XWiki.RequiredRightClass</className>
    <guid>8de78194-f5ba-4cd8-8f0e-69b9d554e31c</guid>
    <class>
      <name>XWiki.RequiredRightClass</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <level>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>level</name>
        <number>1</number>
        <picker>0</picker>
        <prettyName>level</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <sort>none</sort>
        <unmodifiable>0</unmodifiable>
        <validationMessage/>
        <validationRegExp/>
        <values>edit|programming</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </level>
    </class>
    <property>
      <level>programming</level>
    </property>
  </object>
  <object>
    <name>XWiki.DeletedDocuments</name>
    <number>0</number>
    <className>XWiki.StyleSheetExtension</className>
    <guid>aa8c7e27-a767-4e44-ac29-7809763dff56</guid>
    <class>
      <name>XWiki.StyleSheetExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>.itemActions .tool {
  width: 16px;
  height: 16px;
  margin: 0 2px;
  float: left;
  text-indent: -1000em;
  overflow: hidden;
  background: transparent no-repeat center center;
}
.itemActions .delete {
  background-image: url("$xwiki.getSkinFile('icons/silk/cross.png')") !important;
}
.itemActions .restore {
   background-image: url("$xwiki.getSkinFile('/icons/silk/arrow_refresh.png')") !important;
}
.itemActions .cannot-restore {
   background-image: url("$xwiki.getSkinFile('/icons/silk/page_error.png')") !important;
}</code>
    </property>
    <property>
      <name/>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>XWiki.DeletedDocuments</name>
    <number>1</number>
    <className>XWiki.XWikiRights</className>
    <guid>f31fc0c5-7569-4716-8529-b30d3d6a9d9b</guid>
    <class>
      <name>XWiki.XWikiRights</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <allow>
        <defaultValue>1</defaultValue>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>allow</displayType>
        <name>allow</name>
        <number>4</number>
        <prettyName>Allow/Deny</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </allow>
      <groups>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>groups</name>
        <number>1</number>
        <picker>1</picker>
        <prettyName>Groups</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
      </groups>
      <levels>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>1</multiSelect>
        <name>levels</name>
        <number>2</number>
        <prettyName>Levels</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>3</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
      </levels>
      <users>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>users</name>
        <number>3</number>
        <picker>1</picker>
        <prettyName>Users</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
      </users>
    </class>
    <property>
      <allow>1</allow>
    </property>
    <property>
      <groups>XWiki.XWikiAdminGroup</groups>
    </property>
    <property>
      <levels>view,edit</levels>
    </property>
    <property>
      <users/>
    </property>
  </object>
</xwikidoc>
