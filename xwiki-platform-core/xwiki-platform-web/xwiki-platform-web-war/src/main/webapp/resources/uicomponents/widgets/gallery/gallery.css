.xGallery {
  background-color: var(--panel-bg);
  color: var(--panel-default-text);
  max-width: 100%;
  padding: 10px;
  border: 1px solid var(--panel-header-text);
  border-radius: var(--border-radius-base);
  /* Position relative is required because some of the inner elements have position absolute and the gallery container
  must be their offset parent. */
  position: relative;
  text-align: center;
  white-space: nowrap;
  /* Those width/height values can be overridden by the inline styling added with the macro parameters */
  width: 620px;
  height: 349px;
  display: grid;
  grid-template-columns: 1fr 10fr 1fr;
  grid-template-rows: 1fr 10fr 1fr;
}

.xGallery.maximized {
  height: 100% !important;
  left: 0;
  position: fixed;
  top: 0;
  z-index: 1001;
  width: 100% !important;
  border-radius: 0;
}

.xGallery .currentImage {
  grid-area: 2 / 2 / 3 / 3;
  align-self: center;
  justify-self: center;
  object-fit: scale-down;
  max-width: 100%;
  max-height: 100%;
  /* Weirdly needed so that the image would behave as expected in the grid layout in chromiums... */
  min-height: 0;
}

/* Transparent buttons that should fill the space they've been given on the grid */
.xGallery .previous, .xGallery .next,
.xGallery .maximize, .xGallery .minimize {
  background-color: transparent;
  border-color: transparent;
}

/* We want to hide the icons in the maximization/minimization button that does not fit the current action. 
 We assume that each icon is one node and that the expand icon comes first in the DOM. */
.xGallery .minimize *:nth-child(1), .xGallery .maximize *:nth-child(2) {
  display: none;
}

.xGallery {
  & .maximize, & .minimize, & .previous, & .next {
    &:hover, &:focus {
      filter: contrast(2);
    }
  }
}

.xGallery .previous, .xGallery .next {
  font-family: courier,monospace;
  font-size: 32px;
  text-align: center;
}

.xGallery .previous:hover, .xGallery .next:hover {
  filter: contrast(2);
}

.xGallery .previous {
  grid-area: 2 / 1 / 3 / 2;
}

.xGallery .next {
  grid-area: 2 / 3 / 3 / 4;
}

.xGallery .index {
  font-family: sans-serif;
  font-size: smaller;
  line-height: 1;
  grid-area: 3 / 1 / 4 / 2;
  align-self: end;
}

.xGallery .loading {
  background-image: url('loading.gif') !important;
}

.xGallery .maximize, .xGallery .minimize {
  min-height: var(--target-size-minimum);
  min-width: var(--target-size-minimum);
  grid-area: 1 / 3 / 2 / 4;
  justify-self: end;
}

.xGallery .maximize:hover, .xGallery .minimize:hover {
  filter: contrast(2);
}

/* Elements on the left of the grid are left aligned */
.xGallery .index, .xGallery .previous {
  text-align: start;
}

/* Elements on the right of the grid are right aligned */
.xGallery .next {
  text-align: end;
}

html.maximized, html.maximized body {
  height: 100vh !important;
  margin: 0 !important;
  overflow: hidden !important;
  padding: 0 !important;
  width: 100vw !important;
}
