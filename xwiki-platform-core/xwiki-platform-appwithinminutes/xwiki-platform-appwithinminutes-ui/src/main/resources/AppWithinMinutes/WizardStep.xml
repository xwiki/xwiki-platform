<?xml version="1.0" encoding="UTF-8"?>

<xwikidoc>
  <web>AppWithinMinutes</web>
  <name>WizardStep</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <parent>AppWithinMinutes.WebHome</parent>
  <creator>xwiki:XWiki.Admin</creator>
  <author>xwiki:XWiki.Admin</author>
  <customClass/>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <creationDate>1322241394000</creationDate>
  <date>1322394959000</date>
  <contentUpdateDate>1322394959000</contentUpdateDate>
  <version>1.1</version>
  <title/>
  <template/>
  <defaultTemplate/>
  <validationScript/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.0</syntaxId>
  <hidden>true</hidden>
  <object>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <name>AppWithinMinutes.WizardStep</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>a05015f1-917d-4fdb-9060-285c27128b41</guid>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>var XWiki = (function (XWiki) {

/**
 * Make sure the 'Next Step' wizard button behaves as the 'Save &amp; View' form action button. It's not enough to share
 * the same name, it must also fire the 'xwiki:actions:save' event with the right parameters. We could have fired the
 * event when the 'Next Step' button was clicked but we preferred to reuse the 'Save &amp; View' button in order to avoid
 * duplicating the code from actionButtons.js.
 */
function enhanceNextStepButton(nextStepButton, actionButtons) {
  var saveAndViewButton = actionButtons.down("input[name='xaction_save']");
  // Replace the 'Next Step' button with the 'Save &amp; View' button.
  nextStepButton.insert({before: saveAndViewButton}).remove();
  Object.extend(saveAndViewButton, {
    id: nextStepButton.id,
    value: nextStepButton.value,
    title: nextStepButton.title
  });
}

function init() {
  var form = $('inline');
  if (!form) {
    return false;
  }

  var nextStepButton = $('wizard-next');
  if (!nextStepButton) {
    return false;
  }

  // Hide the form action buttons because the wizard has its own buttons.
  var actionButtons = form.down('.bottombuttons').hide();

  // Make sure the 'Next Step' wizard button behaves as the 'Save &amp; View' form action button.
  // We defer the call to be sure that the 'Save &amp; View' button is initialized.
  enhanceNextStepButton.defer(nextStepButton, actionButtons);

  return true;
}
(XWiki.domIsLoaded &amp;&amp; init()) || document.observe('xwiki:dom:loaded', init);

return XWiki;
}(XWiki || {}));</code>
    </property>
    <property>
      <name>Code</name>
    </property>
    <property>
      <parse>0</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <class>
      <name>XWiki.StyleSheetExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <name>AppWithinMinutes.WizardStep</name>
    <number>0</number>
    <className>XWiki.StyleSheetExtension</className>
    <guid>1bfbb711-c23d-4f82-ba0d-d7f223193604</guid>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>#template('colorThemeInit.vm')
.wizard-header {
  background-color: $theme.backgroundSecondaryColor;
  border-bottom: 1px solid $theme.borderColor;
  margin: 1em 0;
}

.wizard-header h1 {
  border-bottom: 0 none;
  color: $theme.titleColor;
  float: left;
  font-size: 1.5em;
  margin: 0;
  padding: 0.5em;
}

.wizard-header .steps {
  float: right;
  line-height: 1.5em;
  list-style-position: inside;
  list-style-type: none;
  margin: 0;
  padding: .8em 0;
}

.wizard-header .steps li {
  display: inline-block;
  margin-right: 1em;
}

.steps .number {
  background-color: $theme.menuBackgroundColor;
  border-radius: 10px 10px 10px 10px;
  box-shadow: 0 -4px 5px rgba(0, 0, 0, 0.05) inset, 0 4px 3px rgba(252, 254, 255, 0.4) inset, 0 2px 1px rgba(0, 0, 0, 0.1);
  color: $theme.menuLinkColor;
  display: inline-block;
  font-weight: 700;
  font-size: 0.85em;
  height: 20px;
  line-height: 20px;
  text-align: center;
  vertical-align: middle;
  width: 20px;
}

.steps .number.active {
  background-color: transparent;
  border: 3px solid $theme.notificationSuccessColor;
  color: $theme.notificationSuccessColor;
  height: 15px;
  line-height: 15px;
  width: 15px;
}

.steps .number.done {
  background-color: transparent;
  border: 3px solid $theme.menuBackgroundColor;
  color: $theme.menuBackgroundColor;
  height: 15px;
  line-height: 15px;
  width: 15px;
}

.steps .name {
  color: $theme.titleColor;
}

.steps .name.active {
  color: $theme.notificationSuccessColor;
}

.steps .name.done {
  color: $theme.menuBackgroundColor;
  opacity: .5;
}

.wizard-footer {
  background-color: $theme.backgroundSecondaryColor;
  border-top: 1px solid $theme.borderColor;
  margin-top: 2em;
  padding: .5em 1em;
  position: relative;
  text-align: right;
}

.wizard-footer .buttonwrapper.left {
  left: 1em;
  position: absolute;
  top: .1em;
}</code>
    </property>
    <property>
      <name>Style</name>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <content>{{velocity output="false"}}
#macro(appWizardHeader $stepNumber)
  {{html wiki="true"}}
  (% class="wizard-header" %)
  (((
    #set($stepTitle = $msg.get("platform.appwithinminutes.wizardStep${stepNumber}Title"))
    = $msg.get('platform.appwithinminutes.wizardStepHeading', [$stepNumber, $stepTitle])  =

    (% class="steps" %)
    #foreach($index in [1,2,3])
      #set($extraClassName = "#if($stepNumber == $index) active#elseif($stepNumber &gt; $index) done#end")
      * (% class="number$extraClassName" %)#if($stepNumber &gt; $index)&amp;${escapetool.h}10004;#else$index#end(%%) (% class="name$extraClassName" %)$msg.get("platform.appwithinminutes.wizardStep${index}Name")
    #end

    &lt;div class="clearfloats"&gt;&lt;/div&gt;
  )))
  {{/html}}
#end

#macro(appWizardFooter $stepNumber)
  {{html wiki="true"}}
  (% class="wizard-footer buttons" %)
  (((
    #set($nextLabel = $msg.get('platform.appwithinminutes.wizardStepNextButtonLabel'))
    #set($nextTip = $msg.get('platform.appwithinminutes.wizardStepNextButtonTip'))
    #if($stepNumber == 3)##
      #set($nextLabel = $msg.get('platform.appwithinminutes.wizardStepFinishButtonLabel'))
      #set($nextTip = $msg.get('platform.appwithinminutes.wizardStepFinishButtonTip'))
      #set($previousURL = $xwiki.getURL($className, 'edit', 'wizard=true'))
    #elseif($stepNumber == 2 &amp;&amp; $doc.isNew())##
      #set($previousURL = $xwiki.getURL('AppWithinMinutes.CreateApplication'))
    #end
    #if($previousURL)##
      &lt;span class="buttonwrapper left"&gt;&lt;a href="$previousURL" title="$escapetool.xml($msg.get('platform.appwithinminutes.wizardStepPreviousButtonTip'))" class="button secondary"&gt;$escapetool.xml($msg.get('platform.appwithinminutes.wizardStepPreviousButtonLabel'))&lt;/a&gt;&lt;/span&gt;##
    #end
    &lt;span class="buttonwrapper"&gt;&lt;input type="submit" id="wizard-next" name="xaction_save" value="$escapetool.xml($nextLabel)" title="$escapetool.xml($nextTip)" class="button"/&gt;&lt;/span&gt;
  )))
  {{/html}}
#end
{{/velocity}}

{{velocity}}
#if($doc.fullName == 'AppWithinMinutes.WizardStep')
  Code shared by all AppWithinMinutes wizard steps.
#else
  ## Use the style sheet and the JavaScript code required by the velocity macros previously defined.
  #set($discard = $xwiki.ssx.use('AppWithinMinutes.WizardStep'))
  #set($discard = $xwiki.jsx.use('AppWithinMinutes.WizardStep'))
#end
{{/velocity}}</content>
</xwikidoc>
