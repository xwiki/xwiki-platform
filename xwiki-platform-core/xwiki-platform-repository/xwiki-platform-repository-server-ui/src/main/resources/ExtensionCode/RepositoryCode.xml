<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.2" reference="ExtensionCode.RepositoryCode" locale="">
  <web>ExtensionCode</web>
  <name>RepositoryCode</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.0</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity output="false"}}
#set ($discard = $xwiki.ssx.use('ExtensionCode.SkinExtension'))
#set ($discard = $xwiki.jsx.use('ExtensionCode.SkinExtension'))

#set($repositoryConfigDoc = $xwiki.getDocument('ExtensionCode.RepositoryConfig'))
#if ($repositoryConfigDoc.isNew())
  $repositoryConfigDoc.setHidden(true)
#end
#set($repositoryConfigClassName = 'ExtensionCode.RepositoryConfigClass')
#set($repositoryConfigClass = $xwiki.getDocument($repositoryConfigClassName).xWikiClass)
#set($repositoryConfigObj = $repositoryConfigDoc.getObject($repositoryConfigClass.name))

#set($repositoryManager = $services.repository)
#set($extensionManager = $services.extension)

## Default id prefix
#if ($repositoryConfigObj)
  #set($defaultIdPrefix = $repositoryConfigObj.getProperty('defaultIdPrefix').value)
#end
#if ("$!defaultIdPrefix" == '')
  #set($defaultIdPrefix = "${xcontext.userReference.name.toLowerCase().replace(' ', '-')}:")
#end

#macro (printThrowable $throwable)
  $throwable.class: #if(!$throwable.message)null#else$throwable.message#end

  #foreach($stackTraceElement in $throwable.stackTrace)
    ~    at $stackTraceElement
  #end
  #if ($throwable.cause)
    Caused by: #printThrowable($throwable.cause)
  #end
#end

## Find out if the Recommended feature is on
#set ($configDoc = $xwiki.getDocument('ExtensionCode.RepositoryConfig'))
#set ($useRecommendations = false)
#if ("$!configDoc.getValue('useRecommendations')" == '1')
  #set ($useRecommendations = true)

  ## Find out which LiveTable the user was using (Recommended one or the All one)
  ## First check for a request parameter
  #set ($isRecommendedViewString = $request.isRecommendedView)
  #if ("$!isRecommendedViewString" == '')
    ## Otherwise check in the session
    #set ($isRecommendedView = $request.getSession().getAttribute("isRecommendedView"))
  #else
    #if ($isRecommendedViewString == 'true')
      #set ($isRecommendedView = true)
    #else
      #set ($isRecommendedView = false)
    #end
  #end

  ## Default to Recommended view when not defined
  #if ("$!isRecommendedView" == '') 
    #set ($isRecommendedView = true)
  #end

  ## Save the current view in the session
  #set ($discard = $request.getSession().setAttribute("isRecommendedView", $isRecommendedView))
#end
{{/velocity}}</content>
</xwikidoc>
