## ---------------------------------------------------------------------------
## See the NOTICE file distributed with this work for additional
## information regarding copyright ownership.
##
## This is free software; you can redistribute it and/or modify it
## under the terms of the GNU Lesser General Public License as
## published by the Free Software Foundation; either version 2.1 of
## the License, or (at your option) any later version.
##
## This software is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
## Lesser General Public License for more details.
##
## You should have received a copy of the GNU Lesser General Public
## License along with this software; if not, write to the Free
## Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
## 02110-1301 USA, or see the FSF site: http://www.fsf.org.
## ---------------------------------------------------------------------------
#set ($groupService = $xwiki.rightsmanager.groupsApi)
#set ($filterMap = {})
#if ("$!request.name" != '')
  #set ($filterMap.name = $request.name)
#end
#set ($limit = $numbertool.toNumber($request.limit).intValue())
#set ($offset = $numbertool.toNumber($request.offset).intValue())
## Sort by group page name.
#set ($orderList = ['name'])

## The live table offset starts from 1 so we need to subtract 1.
#if ($request.wiki == 'local')
  #set ($groups = $groupService.getAllMatchedLocalGroups($filterMap, $limit, $mathtool.sub($offset, 1), $orderList))
  #set ($countGroups = $groupService.countAllMatchedLocalGroups($filterMap))
#elseif ($request.wiki == 'global')
  #set ($groups = $groupService.getAllMatchedGlobalGroups($filterMap, $limit, $mathtool.sub($offset, 1), $orderList))
  #set ($countGroups = $groupService.countAllMatchedGlobalGroups($filterMap))
#else
  ## Get both local and global groups.
  #set ($groups = $groupService.getAllMatchedGroups($filterMap, $limit, $mathtool.sub($offset, 1), $orderList))
  #set ($countGroups = $groupService.countAllMatchedGroups($filterMap))
#end

#set ($data = {
  'totalrows': $countGroups,
  'returnedrows': $mathtool.min($countGroups, $limit),
  'offset': $offset,
  'reqNo': $numbertool.toNumber($request.reqNo).intValue(),
  'rows': []
})
#foreach ($group in $groups)
  #if($services.security.authorization.hasAccess('view', $group.documentReference))
    #set ($wikiName = $group.wiki)
    #if ($wikiName != $xcontext.mainWikiName || $wikiName == $xcontext.database)
      #set ($wikiName = 'local')
    #end
    ## Deprecated properties kept for backward compatibility with XWiki versions older than 10.9
    #set ($row = {
      'username': $group.documentReference.name,
      'fullname': $group.fullName,
      'wikiname': $wikiName,
      'userurl': $group.getURL(),
      'usersaveurl': $group.getURL('save'),
      'userinlineurl': $group.getURL('edit', 'xpage=plain'),
      'docurl': $xwiki.getURL('XWiki.XWikiPreferences', 'admin', 'section=Groups')
    })
    #if ($group.wiki == $xcontext.mainWikiName)
      #set ($scope = 'global')
    #else
      #set ($scope = 'local')
    #end
    #set ($discard = $row.putAll({
      'doc_fullName': $group.fullName,
      'doc_wiki': $group.wiki,
      'doc_url': $group.getURL(),
      'doc_viewable': true,
      'doc_hasadmin': $xwiki.hasAdminRights(),
      'doc_hasedit': $services.security.authorization.hasAccess('edit', $group.documentReference),
      'doc_edit_url': $group.getURL('edit'),
      'doc_hasdelete': $services.security.authorization.hasAccess('delete', $group.documentReference),
      'doc_delete_url': $group.getURL('delete'),
      'name': "#displayGroup($group.documentReference {'wrapAvatar': true})",
      'members': $services.user.group.getMembers($group.documentReference, false).size(),
      'scope': $services.localization.render("xe.admin.groups.$scope")
    }))
  #else
    #set($row = {
      'doc_viewable': false,
      'doc_fullName': 'obfuscated'
    })
  #end
  #set ($discard = $data.rows.add($row))
#end
#livetable_filterObfuscated($data)
#jsonResponse($data)
