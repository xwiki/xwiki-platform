<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc>
  <web>AppWithinMinutes</web>
  <name>DynamicMessageTool</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <parent>AppWithinMinutes.LiveTableGenerator</parent>
  <creator>xwiki:XWiki.Admin</creator>
  <author>xwiki:XWiki.Admin</author>
  <customClass/>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <creationDate>1323161898000</creationDate>
  <date>1323169538000</date>
  <contentUpdateDate>1323169538000</contentUpdateDate>
  <version>1.1</version>
  <title/>
  <template/>
  <defaultTemplate/>
  <validationScript/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.0</syntaxId>
  <hidden>true</hidden>
  <object>
    <class>
      <name>XWiki.RequiredRightClass</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <level>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>level</name>
        <number>1</number>
        <picker>0</picker>
        <prettyName>level</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <sort>none</sort>
        <unmodifiable>0</unmodifiable>
        <validationMessage/>
        <validationRegExp/>
        <values>edit|programming</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </level>
    </class>
    <name>AppWithinMinutes.DynamicMessageTool</name>
    <number>0</number>
    <className>XWiki.RequiredRightClass</className>
    <guid>16bb97f8-3042-4788-b58f-d0f5b66285a0</guid>
    <property>
      <level>programming</level>
    </property>
  </object>
  <content>{{groovy}}
import com.xpn.xwiki.doc.XWikiDocument;
import com.xpn.xwiki.web.Utils;
import com.xpn.xwiki.web.XWikiMessageTool;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.xwiki.script.service.ScriptService;
import org.xwiki.component.descriptor.DefaultComponentDescriptor;

/**
 * Extends the default message tool with the ability to add/overwrite translation keys dynamically.
 * @deprecated since 4.5M1 the AppWithinMinutes wizard generates a translation bundle for each application so there's
 *             no need to use this hack any more. We keep it just to not break existing applications. It's enough to
 *             edit and save an existing application to migrate it to the new translation engine.
 */
public class XWikiDynamicMessageTool extends XWikiMessageTool
{
  private XWikiMessageTool msg;

  private Map&lt;String, String&gt; overwrites = new HashMap&lt;String, String&gt;();

  public XWikiDynamicMessageTool(XWikiMessageTool msg)
  {
    super(msg.bundle, msg.context);
    this.msg = msg;
  }

  // @Override
  public List&lt;XWikiDocument&gt; getDocumentBundles()
  {
    return this.msg.getDocumentBundles();
  }

  // @Override
  public String get(String key)
  {
    String result = super.get(key);
    return result == key ? this.msg.get(key) : result;
  }

  // @Override
  public String get(String key, Object... params)
  {
    String result = super.get(key, params);
    return result == key ? this.msg.get(key, params) : result;
  }

  // @Override
  protected String getTranslation(String key)
  {
    return this.overwrites.get(key);
  }

  public String put(String key, String value)
  {
    return this.overwrites.put(key, value);
  }
}

public class XWikiDynamicMessageToolFactory implements ScriptService
{
  public XWikiDynamicMessageTool createDynamicMessageTool(XWikiMessageTool msg, Map&lt;?, ?&gt; overwrites)
  {
    XWikiDynamicMessageTool dynamicMessageTool = new XWikiDynamicMessageTool(msg);
    for(Map.Entry&lt;?,?&gt; entry : overwrites.entrySet()) {
      dynamicMessageTool.put(entry.getKey(), entry.getValue());
    }
    return dynamicMessageTool;
  }
}

if (!services.component.componentManager.hasComponent(ScriptService.class, 'dynamicMessageToolFactory')) {
  def descriptor = new DefaultComponentDescriptor(implementation: XWikiDynamicMessageToolFactory.class, role: ScriptService.class, roleHint: 'dynamicMessageToolFactory');
  services.component.getComponentManager("wiki:${xcontext.database}").registerComponent(descriptor);
}
{{/groovy}}</content>
</xwikidoc>
