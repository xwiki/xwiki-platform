## ---------------------------------------------------------------------------
## See the NOTICE file distributed with this work for additional
## information regarding copyright ownership.
##
## This is free software; you can redistribute it and/or modify it
## under the terms of the GNU Lesser General Public License as
## published by the Free Software Foundation; either version 2.1 of
## the License, or (at your option) any later version.
##
## This software is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
## Lesser General Public License for more details.
##
## You should have received a copy of the GNU Lesser General Public
## License along with this software; if not, write to the Free
## Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
## 02110-1301 USA, or see the FSF site: http://www.fsf.org.
## ---------------------------------------------------------------------------
#if ($xcontext.action == 'get')
  #template('display_macros.vm')
  #initRequiredSkinExtensions()
#end
#set($showactions = 0)
<div id="changescontent" class="xwikiintracontent">
#set($rev1 = "$!request.get('rev1')")
#set($rev2 = "$!request.get('rev2')")
## Load document instances
#if ($tdoc.version == $rev1)
  #set($origdoc = $tdoc)
#else
  ## Search for the revision
  #set($origdoc = $xwiki.getDocument($tdoc.documentReferenceWithLocale, $rev1))
#end
#if ($rev2 == '')
  #set ($newdoc = $tdoc)
  #set ($rev2 = $tdoc.version)
#end
#if ($tdoc.version == $rev2)
  #set($newdoc = $tdoc)
#else
  ## Search for the revision
  #set($newdoc = $xwiki.getDocument($tdoc.documentReferenceWithLocale, $rev2))
#end
#if (!$origdoc || !$newdoc)
  ## Try to determine valid revisions based on the input parameters, which might be missing or invalid.
  ## List all the valid database versions first, and see if the requested ones are among them.
  #set($revcrit = $xwiki.criteriaService.revisionCriteriaFactory.createRevisionCriteria())
  #set($revcrit.includeMinorVersions = true)
  #set($validVersions = $tdoc.getRevisions($revcrit))
  #set($fromIndex = $validVersions.indexOf($rev1))
  #set($toIndex = $validVersions.indexOf($rev2))
  ## Resolve missing or invalid versions
  #if (!$newdoc)
    #if ($origdoc != $tdoc)
      #set($newdoc = $tdoc)
      #set($rev2 = $newdoc.version)
      #set($toIndex = $validVersions.indexOf($rev2))
    #else
      #if ($fromIndex + 1 < $validVersions.size())
        #set($toIndex = $fromIndex + 1)
      #elseif ($fromIndex > 0)
        #set($toIndex = $fromIndex - 1)
      #else
        ## Not enough versions, show all the content introduced by the first (if any) version of the document
        #set($toIndex = 0)
      #end
      #set($rev2 = $validVersions.get($toIndex))
      #set($newdoc = $xwiki.getDocument($tdoc, $rev2))
    #end
  #end
  #if (!$origdoc)
    #if ($toIndex == -1)
      #set($origdoc = $tdoc)
      #set($rev1 = $origdoc.version)
      #set($fromIndex = $validVersions.indexOf($rev1))
    #else
      #if ($toIndex > 0)
        #set($fromIndex = $toIndex - 1)
      #elseif ($toIndex + 1 < $validVersions.size() && $toIndex > 0)
        #set($fromIndex = $toIndex - 1)
      #else
        #set($fromIndex = 0)
      #end
      #set($rev1 = $validVersions.get($fromIndex))
      #set($origdoc = $xwiki.getDocument($tdoc, $rev1))
    #end
  #end
#end
#set ($previousOrigdocVersion = $origdoc.previousVersion)
#set ($previousNewdocVersion = $newdoc.previousVersion)
#set ($nextOrigdocVersion = $origdoc.documentArchive.getNextVersion($origdoc.RCSVersion))
#set ($nextNewdocVersion = $newdoc.documentArchive.getNextVersion($newdoc.RCSVersion))
#template('changesdoc.vm')
</div>
## Pass the required skin extensions to the client side to be injected automatically in the HTML head by xwiki.js.
#if ($xcontext.action == 'get')
  #getRequiredSkinExtensions($requiredSkinExtensions)
  #set ($discard = $response.setHeader('X-XWIKI-HTML-HEAD', $requiredSkinExtensions))
#end