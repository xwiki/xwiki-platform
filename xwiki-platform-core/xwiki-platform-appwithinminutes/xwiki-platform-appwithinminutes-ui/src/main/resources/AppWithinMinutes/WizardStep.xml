<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.3" reference="AppWithinMinutes.WizardStep" locale="">
  <web>AppWithinMinutes</web>
  <name>WizardStep</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>AppWithinMinutes.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity output="false"}}
#set ($awmSteps = ['name', 'structure', 'entries', 'presentation'])

#macro (appWizardHeader $stepId)
  &lt;div class="wizard-header"&gt;
    #set ($stepNumber = $awmSteps.indexOf($stepId) + 1)
    #set ($stepTitle = $services.localization.render("appWithinMinutes.wizardStep.${stepId}.title"))
    &lt;h2&gt;$services.localization.render('platform.appwithinminutes.wizardStepHeading', [$stepNumber, $stepTitle])&lt;/h2&gt;
    &lt;ul class="steps"&gt;
      #foreach ($step in $awmSteps)
        #set ($index = $foreach.index + 1)
        #set ($extraClassName = "#if ($stepNumber == $index) step-active#elseif ($stepNumber &gt; $index) step-done#end")
        &lt;li&gt;
          &lt;span class="btn btn-xs number$extraClassName"&gt;
            #if ($stepNumber &gt; $index)
              $services.icon.renderHTML('check')
            #else
              $index
            #end
          &lt;/span&gt;
          &lt;span class="name$extraClassName"&gt;
            $services.localization.render("appWithinMinutes.wizardStep.${step}.name")
          &lt;/span&gt;
        &lt;/li&gt;
      #end
    &lt;/ul&gt;
    &lt;div class="clearfloats"&gt;&lt;/div&gt;
  &lt;/div&gt;
#end

#macro (appWizardFooter $stepId)
  &lt;div class="wizard-footer buttons"&gt;
    #set ($nextLabel = $services.localization.render('platform.appwithinminutes.wizardStepNextButtonLabel'))
    #set ($nextTip = $services.localization.render('platform.appwithinminutes.wizardStepNextButtonTip'))
    #if ($stepId == 'presentation')
      #set ($nextLabel = $services.localization.render('platform.appwithinminutes.wizardStepFinishButtonLabel'))
      #set ($nextTip = $services.localization.render('platform.appwithinminutes.wizardStepFinishButtonTip'))
      #set ($templateProviderReference = "$stringtool.removeEnd($classReference, 'Class')TemplateProvider")
      #set ($previousURL = $xwiki.getURL($templateProviderReference, 'edit',
        'wizard=true&amp;sheet=AppWithinMinutes.TemplateProviderEditSheet'))
    #elseif ($stepId == 'entries')
      #set ($classReference = "$stringtool.removeEnd($doc.fullName, 'TemplateProvider')Class")
      #set ($previousURL = $xwiki.getURL($classReference, 'edit', 'wizard=true'))
    #elseif ($stepId == 'structure' &amp;&amp; $doc.isNew())
      #set ($previousURL = $xwiki.getURL('AppWithinMinutes.CreateApplication', 'view', 'wizard=true'))
    #end
    #if ($previousURL)
      &lt;span class="buttonwrapper left"&gt;
        &lt;a href="$previousURL" class="button secondary" title="$escapetool.xml($services.localization.render(
          'platform.appwithinminutes.wizardStepPreviousButtonTip'))"&gt;$escapetool.xml($services.localization.render(
          'platform.appwithinminutes.wizardStepPreviousButtonLabel'))&lt;/a&gt;
      &lt;/span&gt;
    #end
    &lt;span class="buttonwrapper"&gt;
      &lt;input type="submit" id="wizard-next" name="xaction_save" value="$escapetool.xml($nextLabel)"
        title="$escapetool.xml($nextTip)" class="button"/&gt;
    &lt;/span&gt;
  &lt;/div&gt;
#end
{{/velocity}}

{{velocity}}
#if ($doc.fullName == 'AppWithinMinutes.WizardStep')
  Code shared by all AppWithinMinutes wizard steps.
#else
  ## Use the style sheet and the JavaScript code required by the velocity macros previously defined.
  #set ($discard = $xwiki.ssfx.use('uicomponents/wizard/wizard.css', true))
  #set ($discard = $xwiki.jsx.use('AppWithinMinutes.WizardStep'))
#end
{{/velocity}}</content>
  <object>
    <name>AppWithinMinutes.WizardStep</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>a05015f1-917d-4fdb-9060-285c27128b41</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <defaultValue>long</defaultValue>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>var XWiki = (function (XWiki) {

/**
 * Make sure the 'Next Step' wizard button behaves as the 'Save &amp; View' form action button. It's not enough to share
 * the same name, it must also fire the 'xwiki:actions:save' event with the right parameters. We could have fired the
 * event when the 'Next Step' button was clicked but we preferred to reuse the 'Save &amp; View' button in order to avoid
 * duplicating the code from actionButtons.js.
 */
function enhanceNextStepButton(nextStepButton, actionButtons) {
  var saveAndViewButton = actionButtons.down("input[name$='action_save']");
  // Replace the 'Next Step' button with the 'Save &amp; View' button.
  nextStepButton.insert({before: saveAndViewButton}).remove();
  Object.extend(saveAndViewButton, {
    id: nextStepButton.id,
    value: nextStepButton.value,
    title: nextStepButton.title,
    className: nextStepButton.className
  });
}

function init() {
  var form = $('inline');
  if (!form) {
    return false;
  }

  var nextStepButton = $('wizard-next');
  if (!nextStepButton) {
    return false;
  }

  // Hide the form action buttons because the wizard has its own buttons.
  var actionButtons = form.down('.bottombuttons').hide();

  // Make sure the 'Next Step' wizard button behaves as the 'Save &amp; View' form action button.
  // We defer the call to be sure that the 'Save &amp; View' button is initialized.
  enhanceNextStepButton.defer(nextStepButton, actionButtons);

  return true;
}
(XWiki.domIsLoaded &amp;&amp; init()) || document.observe('xwiki:dom:loaded', init);

return XWiki;
}(XWiki || {}));</code>
    </property>
    <property>
      <name>Code</name>
    </property>
    <property>
      <parse>0</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
</xwikidoc>
