<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc>
  <web>Invitation</web>
  <name>InvitationGuestActions</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <parent>Invitation.WebHome</parent>
  <creator>xwiki:XWiki.Admin</creator>
  <author>xwiki:XWiki.Admin</author>
  <customClass/>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <creationDate>1273964827000</creationDate>
  <date>1274346338000</date>
  <contentUpdateDate>1274346338000</contentUpdateDate>
  <version>1.1</version>
  <title/>
  <template/>
  <defaultTemplate/>
  <validationScript/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.0</syntaxId>
  <hidden>true</hidden>
  <object>
    <class>
      <name>XWiki.XWikiRights</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <allow>
        <defaultValue>1</defaultValue>
        <displayFormType>select</displayFormType>
        <displayType>allow</displayType>
        <name>allow</name>
        <number>4</number>
        <prettyName>Allow/Deny</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </allow>
      <groups>
        <cache>0</cache>
        <displayType>select</displayType>
        <multiSelect>1</multiSelect>
        <name>groups</name>
        <number>1</number>
        <prettyName>Groups</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <usesList>1</usesList>
        <classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
      </groups>
      <levels>
        <cache>0</cache>
        <displayType>select</displayType>
        <multiSelect>1</multiSelect>
        <name>levels</name>
        <number>2</number>
        <prettyName>Levels</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>3</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
      </levels>
      <users>
        <cache>0</cache>
        <displayType>select</displayType>
        <multiSelect>1</multiSelect>
        <name>users</name>
        <number>3</number>
        <prettyName>Users</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <usesList>1</usesList>
        <classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
      </users>
    </class>
    <name>Invitation.InvitationGuestActions</name>
    <number>0</number>
    <className>XWiki.XWikiRights</className>
    <guid>d015643c-4210-4651-bd92-4a85d385cf72</guid>
    <property>
      <allow>1</allow>
    </property>
    <property>
      <groups/>
    </property>
    <property>
      <levels>view</levels>
    </property>
    <property>
      <users>XWiki.XWikiGuest</users>
    </property>
  </object>
  <content>{{include reference="Invitation.InvitationCommon" /}}

{{velocity}}
#*
 * Invitation Application
 * Options for guests who are invited.
 *
 * Macros in this script don't rely on any variables except those which are passed to them and the following:
 *
 * $doc the com.xpn.xwiki.api.Document object representing the document containing this code.
 * $msg the internationalization message provider containing a get(String) and a get(String, List) function
 * $xcontext the com.xpn.xwiki.Context object for this request
 * $xwiki an object of the com.xpn.xwiki.api.XWiki class.
 * $escapetool an object of class org.apache.velocity.tools.generic.EscapeTool
 *
 * Macros also depend on other macros but only other macros which are contained in this script.
 *
 * This script is affected by the following documents:
 *
 * InvitationMessages stores all of the mail message objects. If this does not exist it will be created.
 *                    May be changed in the configuration.
 *
 * InvitationMailClass the class for mail message objects. May be changed in the configuration.
 *
 * InvitationConfig configuration for this code. Contains an XObject of the class defined in this document.
 *                  If it does not exist it will be created with default values.
 *
 *###
##
##---------------------------------------------------------------------
## Decide what we should do.
##---------------------------------------------------------------------
##
#set($action = [])
#getUserAction($request.getParameterMap(), $action)
#if($action.size() &gt; 0)
  #set($action = $action.get(0))
  ## Load config and mail.
  #set($config = {})
  #loadInvitationConfig($config)
  #set($mail = {})
  #set($emailContainer = $xwiki.getDocumentAsAuthor($config.get('emailContainer')))
  #loadInvitationMail($config, $emailContainer, $mail)
  ##
  ## Load CSS
  $xwiki.get('ssx').use($config.get('commonPage'))
  ##
  ## Don't load comments, history, etc.
  #set($docextras = [])
  ##
  #doAction($request.getParameter('messageID'),
            $action,
            $request.getParameter('memo'),
            $request.getParameter('confirm'),
            $mail,
            $emailContainer)
#else
  {{info}}$services.localization.render('xe.invitation.internalDocument', ["${doc.getSpace()}.WebHome"]){{/info}}
#end
##
##---------------------------------------------------------------------
## The macros (Nothing below this point is run directly)
##---------------------------------------------------------------------
##
#*
 * Do a guest allowed action on a single message.
 *
 * Action codes:
 * accept (message status code must be 1)
 * decline (message status code must be 1)
 * report (as spam) (message status code must not be 6)
 * else - unknown code
 *
 * $messageID (String) the unique ID of the invitation to act upon.
 *
 * $action (String) the action to do.
 *
 * $memo (String) an action specific message to attach to the mail EG: reason for declining, 
 *                or results of spam investigation.
 *
 * $confirm (Boolean) are you sure you want to do this?
 *
 * $mail (Map&lt;String, XObject&gt;) the map of stored messages by their id.
 *
 * $emailContainer (Document) the document to save after changing objects.
 *###
#macro(doAction, $messageID, $action, $memo, $confirm, $mail, $emailContainer)
  ##
  ## 1. get message. (If it's invalid will be '' and each action handles differently.)
  #set($message = '')
  #set($message = $mail.get($messageID))
  #if($message != '')
    #set($status = $message.getProperty('status').getValue())
  #end
  #set($oldMemo = "#getLastMemo($message)")

  ## 3. Do action.
  #if($action == 'accept')
    ## Accept invitation. &lt;------------------------------------------------------------------------
    = $services.localization.render('xe.invitation.doAction.accept.heading') =
    #if("$!message" == '')
      {{error}}(%id="invitation-action-message"%)$services.localization.render('xe.invitation.doAction.accept.noMessageFound'){{/error}}
    #elseif($status == 'accepted')
      ## already accepted
      {{error}}(%id="invitation-action-message"%)$services.localization.render('xe.invitation.doAction.accept.alreadyAccepted'){{/error}}
    #elseif($status == 'declined')
      ## already declined
      {{error}}(%id="invitation-action-message"%)$services.localization.render('xe.invitation.doAction.accept.alreadyDeclined'){{/error}}
    #elseif($status == 'canceled')
      ## invitation canceled.
      (%id="invitation-action-message"%)((({{error}}$services.localization.render('xe.invitation.doAction.accept.invitationCanceled')
      #if("$!oldMemo" != '')
        $services.localization.render('xe.invitation.doAction.invitationCanceledMemo',
                 [$xwiki.getUserName($message.getProperty('sendingUser').getValue(), false)])
        $oldMemo
      #end
      {{/error}}
    #elseif($status == 'reported' || $status == 'notSpam')
      ## reported as spam, nolonger valid.
      {{error}}(%id="invitation-action-message"%)$services.localization.render('xe.invitation.doAction.accept.alreadyReportedAsSpam'){{/error}}
    #elseif($status != 'pending')
      {{error}}(%id="invitation-action-message"%)$services.localization.render('xe.invitation.doAction.invalidStatus', ["#messageStatusForCode($status)"]){{/error}}
    #else
      #if("#canGuestAcceptInvitation($doc)" != 'true')
      ##
        {{error}}(%id="invitation-action-message"%)$services.localization.render('xe.invitation.doAction.accept.improperConfiguration'){{/error}}
      #else
        #define($doAfterRegistration)
          #setMessageStatus($message, 'accepted')
          $emailContainer.saveAsAuthor($services.localization.render('xe.invitation.doAction.accept.saveComment'))
        #end
        #set($invited = true)
        {{include reference="XWiki.Registration"/}}
      #end
    #end
  #elseif($action == 'decline')
    ## Decline Invitation &lt;------------------------------------------------------------------------
    = $services.localization.render('xe.invitation.doAction.decline.heading') =
    #if("$!message" == '')
      {{error}}(%id="invitation-action-message"%)$services.localization.render('xe.invitation.doAction.decline.noMessageFound'){{/error}}
    #elseif($status == 'accepted')
      ## already accepted
      {{error}}(%id="invitation-action-message"%)$services.localization.render('xe.invitation.doAction.decline.alreadyAccepted'){{/error}}
    #elseif($status == 'declined')
      ## already declined
      {{error}}(%id="invitation-action-message"%)$services.localization.render('xe.invitation.doAction.decline.alreadyDeclined'){{/error}}
    #elseif($status == 'canceled')
      ## invitation canceled.
      (%id="invitation-action-message"%)((({{error}}$services.localization.render('xe.invitation.doAction.decline.invitationCanceled')
       #if("$!oldMemo" != '')
         $services.localization.render('xe.invitation.doAction.invitationCanceledMemo', 
                  [$xwiki.getUserName($message.getProperty('sendingUser').getValue(), false)])
         $oldMemo
       #end
      {{/error}})))
    #elseif($status == 'reported' || $status == 'notSpam')
      ## reported as spam, nolonger valid.
      {{error}}(%id="invitation-action-message"%)$services.localization.render('xe.invitation.doAction.decline.alreadyReportedAsSpam'){{/error}}
    #elseif($status != 'pending')
      {{error}}(%id="invitation-action-message"%)$services.localization.render('xe.invitation.doAction.invalidStatus', ["#messageStatusForCode($status)"]){{/error}}
    #elseif($confirm &amp;&amp; ${services.csrf.isTokenValid("$!{request.getParameter('form_token')}")})
      #setMessageStatus($message, 'declined', $memo)##
      $emailContainer.saveAsAuthor($services.localization.render('xe.invitation.doAction.decline.saveComment'))
      {{info}}(%id="invitation-action-message"%)$services.localization.render('xe.invitation.doAction.decline.success'){{/info}}
    #else
      ## Are you sure?...
      #displayActionConfirmationForm([$messageID],
                                     $action,
                                     $services.localization.render('xe.invitation.doAction.decline.memoLabel',
                                         [$xwiki.getUserName($message.getProperty('sendingUser').getValue(), false)]),
                                     $services.localization.render('xe.invitation.doAction.decline.confirmLabel'),
                                     {})
    #end
  #elseif($action == 'report')
    ## Report Abuse &lt;------------------------------------------------------------------------------
    = $services.localization.render('xe.invitation.doAction.reportSpam.heading') =
    #if("$!message" == '')
      ## No message found by that id.
      {{error}}(%id="invitation-action-message"%)$services.localization.render('xe.invitation.doAction.reportSpam.noMessageFound'){{/error}}
    #elseif($confirm &amp;&amp; ${services.csrf.isTokenValid("$!{request.getParameter('form_token')}")})
      #setMessageStatus($message, 'reported', $memo)##
      $emailContainer.saveAsAuthor($services.localization.render('xe.invitation.doAction.reportSpam.reportSaveComment'))
      ## Your report has been logged, sorry for the inconvienence.
      {{info}}(%id="invitation-action-message"%)$services.localization.render('xe.invitation.doAction.reportSpam.success'){{/info}}
    #else
      ## Are you sure?...
      == $services.localization.render('xe.invitation.doAction.reportSpam.areYouSure') ==
      #displayActionConfirmationForm([$messageID],
                                     $action,
                                     $services.localization.render('xe.invitation.doAction.reportSpam.memoLabel'),
                                     $services.localization.render('xe.invitation.doAction.confirmLabel'),
                                     {})
      #displayMessage($message)
    #end

  #else
    ## Should not happen
    Invalid action
  #end
#end
{{/velocity}}</content>
</xwikidoc>
