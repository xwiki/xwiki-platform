<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.4" reference="WikiManager.WebHome" locale="">
  <web>WikiManager</web>
  <name>WebHome</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>Main.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title>$services.localization.render('platform.wiki.browse')</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.0</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity}}
{{html}}
#set ($createWikiDocReference = $services.model.createDocumentReference($services.wiki.mainWikiId, 
  'WikiManager', 'CreateWiki'))
#if ($hasCreateWiki &amp;&amp; $xwiki.exists($createWikiDocReference) 
  &amp;&amp; $services.security.authorization.hasAccess('view', $createWikiDocReference))
  &lt;p&gt;
    &lt;a href="$xwiki.getURL('WikiManager.CreateWiki')" class="button button-success" id="tmCreateWiki"&gt;
      $services.icon.renderHTML('add') $services.localization.render('platform.wiki.create.button')
    &lt;/a&gt;
  &lt;/p&gt;
#end
{{/html}}
#set($columns = ['wikiprettyname', 'description', 'owner', 'doc.creationDate', 'membershipType'])
#if(!$isGuest)
  #set($discard = $columns.add('_actions'))
#end

#set ($liveDataConfig = {
  'meta': {
    'propertyDescriptors': [
      { 'id': 'wikiprettyname', 'displayer': { 'id': 'link', 'propertyHref': 'wikiprettyname_url' } },
      { 'id': 'owner', 'editable': false},
      { 'id': 'membershipType', 'sortable': false, 'filterable': false, 'editable': false },
      { 
        'id': '_actions',
        'displayer': {
          'id': 'actions', 
          'actions': ['join', 'leave', 'requestJoin', 'cancelJoinRequest', 'viewInvitation', 'edit', 'delete']
        }
      }
    ],
    'actions': [
      { 
        'id': 'join',
        'icon': 'user_add',
        'allowProperty': 'doc.hasjoin',
        'urlProperty': 'doc.join_url'
      },
      {
        'id': 'leave',
        'icon': 'user_delete',
        'allowProperty': 'doc.hasleave',
        'urlProperty': 'doc.leave_url'
      },
      {
        'id': 'requestJoin',
        'icon': 'bell',
        'allowProperty': 'doc.hasrequestJoin',
        'urlProperty': 'doc.requestJoin_url'
      },
      {
        'id': 'cancelJoinRequest',
        'icon': 'bell_delete',
        'allowProperty': 'doc.hascancelJoinRequest',
        'urlProperty': 'doc.cancelJoinRequest_url'
      },
      {
        'id': 'viewInvitation',
        'icon': 'envelope',
        'allowProperty': 'doc.hasviewInvitation',
        'urlProperty': 'doc.viewInvitation_url'
      }
    ]
  }
})
#set ($sourceParameters = $escapetool.url({
  'className' : 'XWiki.XWikiServerClass',
  'resultPage' : 'WikiManager.WikisLiveTableResults',
  'translationPrefix' : 'platform.wiki.browse.',
  '$doc' : $doc.fullName
}))
{{liveData
  id='wikis'
  source='liveTable'
  sourceParameters="$sourceParameters"
  properties="$stringtool.join($columns, ',')"
  limit=10
}}$jsontool.serialize($liveDataConfig){{/liveData}}
#set($docextras=[])
{{/velocity}}</content>
</xwikidoc>
