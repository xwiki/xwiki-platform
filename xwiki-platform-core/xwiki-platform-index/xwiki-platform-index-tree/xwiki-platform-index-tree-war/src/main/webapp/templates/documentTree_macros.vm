## ---------------------------------------------------------------------------
## See the NOTICE file distributed with this work for additional
## information regarding copyright ownership.
##
## This is free software; you can redistribute it and/or modify it
## under the terms of the GNU Lesser General Public License as
## published by the Free Software Foundation; either version 2.1 of
## the License, or (at your option) any later version.
##
## This software is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
## Lesser General Public License for more details.
##
## You should have received a copy of the GNU Lesser General Public
## License along with this software; if not, write to the Free
## Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
## 02110-1301 USA, or see the FSF site: http://www.fsf.org.
## ---------------------------------------------------------------------------
#template('tree_macros.vm')

#set ($isDocumentTreeAvailable = $xwiki.exists('XWiki.DocumentTree'))

## Configuration options for the Document Tree Source (that is used to retrieve the tree nodes).
#set ($docTreeConfig = {
  'exclusions': $collectiontool.set,
  'filters': [],
  'filterByClass': '',
  'filterHiddenDocuments': true,
  'hierarchyMode': 'reference',
  'limit': 15,
  'root': '',
  'rootData': {},
  'sheet': '',
  'showAddAttachment': false,
  'showAddDocument': false,
  'showAttachments': true,
  'showClassProperties': false,
  'showDocumentTitle': true,
  'showObjects': false,
  'showOnlyViewable': true,
  'showRoot': false,
  'showSpaces': false,
  'showTerminalDocuments': true,
  'showTranslations': true,
  'showWikiPrettyName': true,
  'showWikis': false
})

#macro (documentTree $options)
  ## Default values for configuration options that concern the display and behavior of the tree
  ## (these are not passed to the Document Tree Source).
  #set ($macro.options = {
    'readOnly': true,
    'compact': false
  })
  #set ($discard = $macro.options.putAll($docTreeConfig))
  #set ($discard = $macro.options.putAll($options))
  ## showChildDocuments is deprecated since 7.2M2. Fall-back on hierarchyMode for backwards compatibility.
  #set ($showChildDocuments = $macro.options.remove('showChildDocuments'))
  #if ($showChildDocuments == 'true')
    #set ($macro.options.hierarchyMode = 'parentchild')
  #end
  #set ($resourceParams = {
    'outputSyntax': 'plain',
    'sheet': 'XWiki.DocumentTree'
  })
  #foreach ($entry in $docTreeConfig.entrySet())
    #set ($value = $macro.options.get($entry.key))
    #if ("$!value" != '' && $value != "$!entry.value" && !$defaultTreeOptions.containsKey($entry.key))
      #set ($discard = $resourceParams.put($entry.key, $value))
    #end
  #end
  ## If the current doc is forbidden in view, the tree won't be displayed because of a 403.
  ## In that case we fallback on requesting it from the main page of the wiki.
  #if (!$services.security.authorization.hasAccess("view", $doc.getDocumentReference()))
    #set ($docForRequestReference = $services.wiki.getCurrentWikiDescriptor().getMainPageReference())
    #set ($docForRequest = $xwiki.getDocument($docForRequestReference))
  #else
    #set ($docForRequest = $doc)
  #end
  #set ($macro.options.reference = "path:$docForRequest.getURL('get', $escapetool.url($resourceParams))")
  #if ($macro.options.root && !$macro.options.showRoot && "$!macro.options.rootData" == "$!docTreeConfig.rootData")
    ## Try to initialize the root node data based on the root node id.
    #set ($parts = $macro.options.root.split(':', 2))
    #if ($parts.size() == 2)
      #set ($macro.options.rootData = {
        'type': $parts[0],
        'id': $parts[1]
      })
    #end
  #end
  #set ($editable = $macro.options.remove('readOnly') != 'true')
  #set ($macro.options.dragAndDrop = $editable)
  #set ($macro.options.contextMenu = $editable)
  #set ($isFullWidthAvailable = $macro.options.remove('compact') != 'true')
  #set ($macro.options.icons = $isFullWidthAvailable)
  #set ($macro.options.edges = $isFullWidthAvailable)
  ## We use directly FontAwesome for the tree node icons for two reasons:
  ## * the XWiki icon set (available through the icon themes) is limited
  ## * jsTree expects an URL/path or a CSS class name as the value of the tree node icon configuration when JSON source is
  ##   used; the icon theme API is currently only able to render an icon but there's no way to get the icon configuration
  ##   as jsTree expects it. The alternative is to use the HTML source to feed the tree but then the tree definition and
  ##   configuration becomes complex.
  ## We don't load the FontAwesome CSS directly from its WebJar because it contains some relative paths that currently are
  ## not handled correctly by the WebJar action. This has been fixed in the FontAwesome icon theme so we load the theme
  ## SSX instead.
  #set ($discard = $xwiki.ssx.use('IconThemes.FontAwesome'))
  #set ($_options = $macro.options)
  #tree($_options)
#end
