/*
 ## Iterate over the sources defined in the configuration document, and create a source array to be passed to the
    ## search suggest contructor.
    #set ($sources = [])
    #set ($searchSuggestConfig = $xwiki.getDocument('XWiki.SearchSuggestConfig'))
    #foreach ($source in $searchSuggestConfig.getObjects('XWiki.SearchSuggestSourceClass'))
      #if ($source.getProperty('activated').value == 1)
        #set ($engine = $source.getProperty('engine').value)
        #if ("$!engine" == '')
          ## For backward compatibility we consider the search engine to be Lucene when it's no specified.
          #set ($engine = 'lucene')
        #end
        #set ($discard = $xwiki.getDocument('XWiki.SearchCode').getRenderedContent())
        #if ($engine == $searchEngine)
          #set ($name = $source.getProperty('name').value)
          #if ($services.localization.get($name))
            #set ($name = $services.localization.render($name))
          #else
            ## Evaluate the Velocity code for backward compatibility.
            #set ($name = "#evaluate($name)")
          #end
          #set ($icon = $source.getProperty('icon').value)
          #if ($icon.startsWith('icon:'))
            #set ($icon = $xwiki.getSkinFile("icons/silk/${icon.substring(5)}.png"))
          #else
            ## Evaluate the Velocity code for backward compatibility.
            #set ($icon = "#evaluate($icon)")
          #end
          #set ($service = $source.getProperty('url').value)
          #set ($parameters = {
            'query': $source.getProperty('query').value,
            'nb': $source.getProperty('resultsNumber').value
          })
          #if ($xwiki.exists($service))
            #set ($discard = $parameters.put('outputSyntax', 'plain'))
            #set ($service = $xwiki.getURL($service, 'get', $escapetool.url($parameters)))
          #else
            ## Evaluate the Velocity code for backward compatibility.
            #set ($service = "#evaluate($service)")
            #set ($service = "$service#if ($service.contains('?'))&#else?#end$escapetool.url($parameters)")
          #end
          #set ($highlight = $source.getProperty('highlight').value == 1)
          #set ($discard = $sources.add({
            'name': $name,
            'varname': 'input',
            'script': $service,
            'icon': $icon,
            'highlight': $highlight
          }))
        #end
      #end
    #end
*/
'use strict';var XWiki=function(b){b.SearchSuggest=Class.create({initialize:function(a,c){this.sources=c;if(this.searchInput=$(a))document.observe("xwiki:suggest:clearSuggestions",this.onClearSuggestions.bindAsEventListener(this)),document.observe("xwiki:suggest:containerCreated",this.onSuggestContainerCreated.bindAsEventListener(this)),document.observe("xwiki:suggest:containerPrepared",this.onSuggestContainerPrepared.bindAsEventListener(this)),document.observe("xwiki:suggest:updated",this.onSuggestUpdated.bindAsEventListener(this)),
document.observe("xwiki:suggest:selected",this.onSuggestionSelected.bindAsEventListener(this)),this.createSuggest()},onClearSuggestions:function(a){a.memo.suggest==this.suggest&&this.searchInput.setStyle({borderBottomStyle:this.searchInputBorderBottomSavedStyle})},onSuggestContainerCreated:function(a){a.memo.suggest==this.suggest&&(this.searchInputBorderBottomSavedStyle=this.searchInput.getStyle("borderBottomStyle"),this.searchInput.setStyle({borderBottomStyle:"none"}))},onSuggestContainerPrepared:function(a){this.noResultsMessage.addClassName("hidden")},
onSuggestUpdated:function(a){1==a.memo.container.select(".suggestItem").length&&this.noResultsMessage.removeClassName("hidden").setStyle({"float":"left"})},onSuggestionSelected:function(a){a.memo.suggest==this.suggest&&(a.stop(),a.memo.originalEvent&&Event.stop(a.memo.originalEvent),a.memo.url?window.location=a.memo.url:this.searchInput.up("form").submit())},createSuggest:function(){var a=(new Element("div")).insert(new Element("span",{"class":"suggestId"})).insert(new Element("span",{"class":"suggestValue"})).insert(new Element("span",
{"class":"suggestInfo"}));this.noResultsMessage=(new Element("div",{"class":"hidden"})).update("$escapetool.javascript($services.localization.render('core.widgets.suggest.noResults'))".escapeHTML());var c=(new Element("div")).update("$escapetool.javascript($services.localization.render('core.widgets.suggest.showResults'))".escapeHTML());c=(new Element("div")).insert(this.noResultsMessage).insert(c).insert(new Element("div",{"class":"clearfloats"}));a=(new b.widgets.XList([new b.widgets.XListItem(c,
{containerClasses:"suggestItem",classes:"showAllResults",eventCallbackScope:this,noHighlight:!0,value:a})],{classes:"suggestList",eventListeners:{click:function(d){this.searchInput.up("form").submit()},mouseover:function(d){this.suggest.clearHighlight();this.suggest.iHighlighted=d.element();d.element().addClassName("xhighlight")}}})).getElement();this.suggest=new b.widgets.Suggest(this.searchInput,{parentContainer:$("searchSuggest"),className:"searchSuggest horizontalLayout",fadeOnClear:!1,align:"auto",
minchars:3,sources:this.sources,insertBeforeSuggestions:(new Element("div",{"class":"results"})).update(a),displayValue:!0,displayValueText:"$escapetool.javascript($services.localization.render('platform.search.suggestResultLocatedIn'))",resultInfoHTML:!0,timeout:0,width:500,unifiedLoader:!0,loaderNode:a.down("li"),shownoresults:!1,propagateEventKeyCodes:[Event.KEY_RETURN]})}});var e=function(){var a=$jsontool.serialize($sources);new b.SearchSuggest($("headerglobalsearchinput"),a);return!0};b.isInitialized&&
e()||document.observe("xwiki:dom:loading",e);return b}(XWiki);

//# sourceMappingURL=searchSuggest.min.js.map
