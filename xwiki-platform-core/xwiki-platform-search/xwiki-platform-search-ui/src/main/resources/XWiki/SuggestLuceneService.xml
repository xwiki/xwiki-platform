<?xml version="1.0" encoding="UTF-8"?>

<xwikidoc>
  <web>XWiki</web>
  <name>SuggestLuceneService</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <parent>XWiki.SearchCode</parent>
  <creator>xwiki:XWiki.Admin</creator>
  <author>xwiki:XWiki.Admin</author>
  <customClass/>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <creationDate>1280310630000</creationDate>
  <date>1311081143000</date>
  <contentUpdateDate>1311081143000</contentUpdateDate>
  <version>1.1</version>
  <title>Lucene Suggestion Service</title>
  <template/>
  <defaultTemplate/>
  <validationScript/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.0</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity}}
## ------------------------
## URL parameters retrieval
## ------------------------
#set($query = "$!request.query")
#set($input = "$!request.input")
#set($nb = "$!request.nb")
#if($nb != '')
  #set($nb = $mathtool.toInteger($nb) + 1)
#else
  #set($nb = 6)
#end
## --------------------------
## Hidden documents filtering
## --------------------------
#set($hiddenClause = ' AND hidden:false')
## TODO: rewrite this when we'll have a user configuration script service
#if($xwiki.getDocument($xcontext.user).getValue('displayHiddenDocuments') == 1)
  #set($hiddenClause = '')
#end
## -----------------------------------
## Query execution, results formatting
## -----------------------------------
#if($query != '' &amp;&amp; $input != '')
  #set($query = $query.replaceAll('__INPUT__', $input))
  #set($discard = $response.setContentType("text/xml"))
  &lt;?xml version="1.0" encoding="UTF-8"?&gt;
  #set($rawresults = $xwiki.lucene.getSearchResults("(${query})${hiddenClause}", '', $xcontext.database, $NULL))
  #set($results = $rawresults.getResults("1", "$nb"))
  &lt;results&gt;
    #foreach($item in $results)
      #set($itemfullname = $services.model.serialize($item.getDocumentReference()))
      #set($itemdoc = $xwiki.getDocument($item.getDocumentReference()))  
      #if($item.type == "attachment")
        #set($name = $item.filename)
        #set($url = $itemdoc.getAttachmentURL($name))
      #else
        #set($name = $itemdoc.getDisplayTitle())
        #set($url = $itemdoc.getURL())
      #end
      &lt;rs id="$url" info="${escapetool.xml($itemfullname)}"&gt;$escapetool.xml($name)&lt;/rs&gt;
    #end
  &lt;/results&gt;
#else
{{info}}
This service allows to retrieve search results for the suggest UI component.
Examples:
* [[$doc.getExternalURL('get', 'outputSyntax=plain&amp;query=__INPUT__*&amp;input=test')]]
{{/info}}
#end
{{/velocity}}
</content>
</xwikidoc>
