<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.4" reference="XWiki.Like.Code.LiveTableResultPage" locale="">
  <web>XWiki.Like.Code</web>
  <name>LiveTableResultPage</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>XWiki.Like.Code</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity wiki="false"}}
#if ($xcontext.action == 'get')
  #template('hierarchy_macros.vm')
  #if("$!{request.xpage}" == 'plain')
    $response.setContentType('application/json')
  #end
  #if($request.user)
    #set ($userReference = $request.user)
  #else
    #set ($userReference = $services.user.currentUserReference) 
  #end
  ##==============================
  ## Offset = item # at which to start displaying data
  ##==============================
  #set($offset = $numbertool.toNumber($request.get('offset')))
  ## offset starts from 0 in velocity and 1 in javascript
  #set($offset = $offset - 1)
  #if($offset &lt; 0)
    #set($offset = 0)
  #end
  ##==================
  ## Limit = # of items to display
  ##==================
  #set($limit = $numbertool.toNumber($request.get('limit')))
  #set ($likedPages = $services.like.getUserLikes($userReference, $offset, $limit))
  #set ($optUserLikes = $services.like.countUserLikes($userReference))
  #if ($optUserLikes.isPresent())
    #set ($totalRows = $optUserLikes.get())
  #else
    #set ($totalRows = $likedPages.size())
  #end
  ##==========
  ## Sort direction
  ##==========
  #set($order = "$!request.sort")
  #if($order != '')
    #set($orderDirection = "$!{request.get('dir').toLowerCase()}")
    #if("$!orderDirection" != '' &amp;&amp; "$!orderDirection" != 'asc')
      #set($orderDirection = 'desc')
    #end
  #end
  #set ($pagesRows = [])
  #foreach($likedPage in $likedPages)
    #set ($likedDoc = $xwiki.getDocument($likedPage))
    #set ($optDocumentLikes = $services.like.getLikes($likedPage))
    #if ($optDocumentLikes.isPresent())
      #set ($documentLikes = $optDocumentLikes.get())
    #else
      #set ($documentLikes = "N/A")
    #end
    ## code inspired from getdocuments.vm
    #set ($viewable = $xwiki.hasAccessLevel('view', $xcontext.user, $services.model.serialize($likedPage, "default")))
    #set ($row = {'doc_viewable' : $viewable})
    #if (!$viewable)
      #set ($discard = $row.put('doc_fullName', $likedDoc.fullName))
    #else
      #set ($translatedDoc = $likedDoc.translatedDocument)
      #set ($fullname = $services.model.serialize($likedDoc.documentReference, 'default'))
      #set ($discard = $row.put('doc_name', $likedDoc.documentReference.name))
      #set ($discard = $row.put('doc_fullName', $fullname))
      #set ($location = "#hierarchy($likedDoc.documentReference, {'limit': 5, 'plain': false, 'local': true, 'displayTitle': false})")
      #set ($discard = $row.put('doc_location', $location))
      #set ($discard = $row.put('doc_space', $likedDoc.space))
      #set ($discard = $row.put('doc_url', $xwiki.getURL($likedDoc)))
      #set ($discard = $row.put('doc_space_url', 
        $xwiki.getURL($services.model.createDocumentReference($!likedDoc.wiki, $!likedDoc.space, 'WebHome'))))
      #set ($discard = $row.put('doc_wiki', $likedDoc.wiki))
      #set ($discard = $row.put('doc_wiki_url', $xwiki.getURL($services.model.resolveDocument('', 'default', 
        $likedDoc.documentReference.extractReference('WIKI')))))
      #set ($discard = $row.put('doc_author_url', $xwiki.getURL($translatedDoc.author)))
      #set ($discard = $row.put('doc_date', $xwiki.formatDate($translatedDoc.date)))
      #set ($discard = $row.put('doc_title', $translatedDoc.plainTitle))
      #set ($rawTitle = $translatedDoc.title)
      #if ($rawTitle != $row['doc_title'])
        #set ($discard = $row.put('doc_title_raw', $rawTitle))
      #end
      #set ($discard = $row.put('doc_author', $xwiki.getUserName($translatedDoc.author, false)))
      #set ($discard = $row.put('doc_creationDate', $xwiki.formatDate($translatedDoc.creationDate)))
      #set ($discard = $row.put('doc_creator', $xwiki.getUserName($translatedDoc.creator, false)))
    #end
    #set ($discard = $row.put('like', $documentLikes))
    #set ($discard = $pagesRows.add($row))
  #end
  #set ($newOffset = $offset + 1)
  ## ===
  ## JSON
  ## ===
  {
    "totalrows": $totalRows,
    "returnedrows":  $pagesRows.size(),
    "offset": $newOffset,
    "reqNo": $numbertool.toNumber($request.reqNo),
    "rows": $jsontool.serialize($pagesRows)
  }
#end
{{/velocity}}</content>
</xwikidoc>
