## ---------------------------------------------------------------------------
## See the NOTICE file distributed with this work for additional
## information regarding copyright ownership.
##
## This is free software; you can redistribute it and/or modify it
## under the terms of the GNU Lesser General Public License as
## published by the Free Software Foundation; either version 2.1 of
## the License, or (at your option) any later version.
##
## This software is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
## Lesser General Public License for more details.
##
## You should have received a copy of the GNU Lesser General Public
## License along with this software; if not, write to the Free
## Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
## 02110-1301 USA, or see the FSF site: http://www.fsf.org.
## ---------------------------------------------------------------------------
#template('diff_macros.vm')
##
## Preamble: which versions are being compared
##

#if ("$!previousOrigdocVersion" != '')
  #set ($changesLink = ${xwiki.getURL($tdoc, 'view', "viewer=changes&rev1=${previousOrigdocVersion}&rev2=${rev2}")})
  #set ($changesTitle = $services.localization.render('core.viewers.diff.previousVersion'))
  #set ($previousOrigdocLink = "<a class='changes-arrow' href='$changesLink' title='$changesTitle'>&lt;</a>")
#end
#if ("$!nextOrigdocVersion" != '')
  #set ($changesLink = ${xwiki.getURL($tdoc, 'view', "viewer=changes&rev1=${nextOrigdocVersion}&rev2=${rev2}")})
  #set ($changesTitle = $services.localization.render('core.viewers.diff.nextVersion'))
  #set ($nextOrigdocLink = "<a class='changes-arrow' href='$changesLink' title='$changesTitle'>&gt;</a>")
#end
#if ("$!previousNewdocVersion" != '')
  #set ($changesLink = ${xwiki.getURL($tdoc, 'view', "viewer=changes&rev1=${rev1}&rev2=${previousNewdocVersion}")})
  #set ($changesTitle = $services.localization.render('core.viewers.diff.previousVersion'))
  #set ($previousNewdocLink = "<a class='changes-arrow' href='$changesLink' title='$changesTitle'>&lt;</a>")
#end
#if ("$!nextNewdocVersion" != '')
  #set ($changesLink = ${xwiki.getURL($tdoc, 'view', "viewer=changes&rev1=${rev1}&rev2=${nextNewdocVersion}")})
  #set ($changesTitle = $services.localization.render('core.viewers.diff.nextVersion'))
  #set ($nextNewdocLink = "<a class='changes-arrow' href='$changesLink' title='$changesTitle'>&gt;</a>")
#end
## Display the previous change arrow only if there is a previous version of the original document and there is no extension version
#if ("$!previousOrigdocVersion" != '' && "$!previousNewdocVersion" != '')
  ## Keep the reverse navigation order in case the original document version is greater than the version of the new document
  #if ($origdoc.RCSVersion.isLessOrEqualThan($newdoc.RCSVersion))
    #set ($previousLink = ${xwiki.getURL($tdoc, 'view', "viewer=changes&rev1=${previousOrigdocVersion}&rev2=${rev1}")})
  #else
    #set ($previousLink = ${xwiki.getURL($tdoc, 'view', "viewer=changes&rev1=${rev2}&rev2=${previousNewdocVersion}")})
  #end
#end
## Display the next change arrow only if there is a next version of the new document and there is no extension version
#if ("$!nextOrigdocVersion" != '' && "$!nextNewdocVersion" != '')
  ## Keep the reverse navigation order in case the original document version is greater than the version of the new document
  #if ($origdoc.RCSVersion.isLessOrEqualThan($newdoc.RCSVersion))
    #set ($nextLink = ${xwiki.getURL($tdoc, 'view', "viewer=changes&rev1=${rev2}&rev2=${nextNewdocVersion}")})
  #else
    #set ($nextLink = ${xwiki.getURL($tdoc, 'view', "viewer=changes&rev1=${nextOrigdocVersion}&rev2=${rev1}")})
  #end
#end

#set ($from = {
  'doc': $origdoc,
  'version': $rev1,
  'previousVersionLink': $previousOrigdocLink,
  'nextVersionLink': $nextOrigdocLink,
  'previousLink': $previousLink
})
#set ($to = {
  'doc': $newdoc,
  'version': $rev2,
  'previousVersionLink': $previousNewdocLink,
  'nextVersionLink': $nextNewdocLink,
  'nextLink': $nextLink
})
#displayDocumentChangesHeader($from $to)

##
## Changes
##
#set ($includes = $request.getParameterValues('include'))
#if (!$includes)
  #set ($includes = ['rawChanges'])
#end
<div class="changes-body">
  <div class="changes-body-header">
    <div class="row">
      <div class="col-xs-12 col-sm-6">
        <ul class="nav nav-pills" role="tablist">
          <li role="presentation" class="active">
            <a href="#rawChanges" aria-controls="rawChanges" role="tab" data-toggle="pill" data-hint="raw">
              $escapetool.xml($services.localization.render('web.history.changes.raw'))
            </a>
          </li>
          <li role="presentation">
            <a href="#renderedChanges" aria-controls="renderedChanges" role="tab" data-toggle="pill" data-hint="rendered">
              $escapetool.xml($services.localization.render('web.history.changes.rendered'))
            </a>
          </li>
        </ul>
      </div>
      <div class="col-xs-12 col-md-6">
        <div class="changes-actions raw active"></div>
        <div class="changes-actions rendered">
          <a href="#toggleRenderedDiffContext" class="html-diff-context-toggle html-diff-context-toggle-show hidden">
            <span class="html-diff-context-show">
              $services.icon.renderHTML('plus-square')
              $escapetool.xml($services.localization.render('web.history.changes.showContext'))
            </span>
            <span class="html-diff-context-hide">
              $services.icon.renderHTML('minus-square')
              $escapetool.xml($services.localization.render('web.history.changes.hideContext'))
            </span>
          </a>
        </div>
      </div>
    </div>
  </div>
  <div class="tab-content">
    <div role="tabpanel" class="tab-pane active" id="rawChanges">
      #if ($includes.contains('rawChanges'))
        #displayDocumentRawChanges($origdoc $newdoc)
      #end
    </div>
    <div role="tabpanel" class="tab-pane html-diff" id="renderedChanges">
      #if ($includes.contains('renderedChanges'))
        #set ($htmlDiff = $services.diff.html.unified($origdoc.renderedContent, $newdoc.renderedContent))
        #if ($htmlDiff == '')
          <div class="infomessage">
            $escapetool.xml($services.localization.render('web.history.changes.noChanges'))
          </div>
        #elseif ("$!htmlDiff" == '')
          <div class="errormessage">
            $escapetool.xml($services.localization.render('web.history.changes.failedToCompute'))
          </div>
        #else
          $htmlDiff
        #end
      #end
    </div>
  </div>
</div>
