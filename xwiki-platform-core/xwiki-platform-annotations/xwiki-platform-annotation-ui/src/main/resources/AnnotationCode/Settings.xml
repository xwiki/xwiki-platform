<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc>
  <web>AnnotationCode</web>
  <name>Settings</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <parent>AnnotationCode.WebHome</parent>
  <creator>xwiki:XWiki.Admin</creator>
  <author>xwiki:XWiki.Admin</author>
  <customClass/>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <creationDate>1264870880000</creationDate>
  <date>1271945477000</date>
  <contentUpdateDate>1271945477000</contentUpdateDate>
  <version>1.1</version>
  <title/>
  <template/>
  <defaultTemplate/>
  <validationScript/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.0</syntaxId>
  <hidden>true</hidden>
  <object>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <name>AnnotationCode.Settings</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>a029fb86-6224-4ce9-b1d4-189b19753e9e</guid>
    <property>
      <cache/>
    </property>
    <property>
      <code>var XWiki = (function (XWiki) {
// Start XWiki augmentation.
XWiki.AnnotationSettings = Class.create({
  initialize : function() {
    this.addCheckboxListeners();
    this.addClearListeners();
    this.addToggleFilterVisibility('.criterion-label', '.criterion', 'collapsed');
    this.addToggleFilterVisibility('.annotation-filters-toggler a', '.annotation-filters', 'collapsed');
    // send a filter change event to notify annotations of the initial state of the loaded filter
    document.fire("xwiki:annotations:filter:changed", this.getCurrentFilter());
  },

  addCheckboxListeners : function() {
    $$('.criteria input[type=checkbox]').each(function(item) {
      item.observe('click', function(event) {
        // 1/ Update annotations
        var filter = this.getCurrentFilter();
        document.fire("xwiki:annotations:filter:changed", filter);
        // 2/ Some visual changes:
        var input = event.element();
        input.up().toggleClassName('selected');
        var criterion = input.up('.criterion');
        if (criterion.select('label.selected').size() &gt; 0) {
          criterion.addClassName('active');
        } else {
          criterion.removeClassName('active');
        }
      }.bindAsEventListener(this));
    }, this);
  },

  addClearListeners : function () {
    $$('.criterion .clear').each(function(item) {
      item.observe('click', function(event) {
        event.stop();
        // 1/ Unckeck all options + some visual changes:
        var criterion = event.element().up('.criterion');
        criterion.select('label.selected').each(function(item) {
          item.removeClassName('selected');
          item.down('input').checked = false;
        });
        criterion.removeClassName('active');
        // 2/ Update annotations
        var filter = this.getCurrentFilter();
        document.fire("xwiki:annotations:filter:changed", filter);
      }.bindAsEventListener(this));
    }, this);
  },

  /**
   * Reads the current filter from the filtering checkboxes.
   */
  getCurrentFilter : function() {
    var filter = [];
    // for each criterion
    $$('.criteria .criterion').each(function(criterion) {
      // get its name
      var criterionName = criterion.down('input[type=hidden]');
      if (!criterionName) {
        return;
      }
      criterionName = criterionName.name;
      // now go down and gel all values checkboxes which are checked
      var values = [];
      criterion.select('input[type=checkbox]').each(function(checkbox) {
        if(checkbox.checked) {
          values.push(checkbox.value);
        }
      });
      // and stack them in the filter
      for (var i = 0; i &lt; values.length; i++) {
        filter.push({'name' : criterionName, 'value' : values[i]});
      }
    });
    return filter;
  },

  /**
   * Expand/Collapse elements of the filter widget
   */
  addToggleFilterVisibility : function(triggerSelector, parentSelector, toggledClassName) {
    $$(triggerSelector).each(function(item) {
      item.observe('click', function(event) {
        event.stop();
        var parent = event.element().up(parentSelector);
        if (parent) {
          parent.toggleClassName(toggledClassName);
        }
      });
    });
  }
});
// End XWiki augmentation.
return XWiki;
}(XWiki || {}));

document.observe('xwiki:annotations:settings:loaded', function() {
  new XWiki.AnnotationSettings();
});</code>
    </property>
    <property>
      <name>Annotation Javascript -- Settings panel javascript, filters UI and update</name>
    </property>
    <property>
      <parse/>
    </property>
    <property>
      <use>always</use>
    </property>
  </object>
  <object>
    <class>
      <name>XWiki.StyleSheetExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <name>AnnotationCode.Settings</name>
    <number>0</number>
    <className>XWiki.StyleSheetExtension</className>
    <guid>dcd32810-0559-4cd4-aa90-c4bbb7192535</guid>
    <property>
      <cache/>
    </property>
    <property>
      <code>#template('colorThemeInit.vm')

.annotationsettings .plainmessage {
  background-image: url($xwiki.getSkinFile('icons/silk/add.png'));
  float: right;
  width: 30%;
  margin: 0 0 12px 4px;
}
/* IE7 expands the box for an unknown reason, and this seems to fix it: */
*+html .annotationsettings {
  zoom: 100%;
}
.annotation-filters {
  padding: 8px 4px 4px;
}
.annotation-filters-toggler {
  font-size: 80%;
  color: $theme.textPrimaryColor;
}
.criteria {
  margin: 0.5em 0;
}
.collapsed .criteria {
  display: none;
}

*+html .collapsed .criterion-option-list {
  width: 10px;
}

#annotation-filters:target .criteria {
  display: block;
}
.criterion {
  margin: 2px 0;
  padding: 0 0 0 14px;
  background: transparent url($xwiki.getSkinFile('icons/silk/bullet_toggle_minus.png')) top left no-repeat;
}
.criteria .collapsed {
  background-image: url($xwiki.getSkinFile('icons/silk/bullet_toggle_plus.png'));
}
.criteria .collapsed .criterion-option-list {
  display: none;
}
.criterion-label {
  margin-left: -14px;
  padding-left: 14px;
  cursor: pointer;
}
.active .criterion-label {
  font-weight: bold;
}
.criterion-label .details {
  text-transform: lowercase;
  font-size: 80%;
  color: $theme.textPrimaryColor;
}
.active .criterion-label .details {
  display: none;
}
.criterion-label .clear {
  text-transform: lowercase;
  font-size: 80%;
  color: $theme.notificationErrorColor;
  font-weight: normal;
  cursor: pointer;
  display: none;
}
.active .criterion-label .clear {
  display: inline;
}
.criterion-option-list label.option {
  font-weight: normal;
}
.criterion-option-list label.selected {
  background-color: $theme.highlightColor;
}</code>
    </property>
    <property>
      <name>Annotations settings panel css</name>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>always</use>
    </property>
  </object>
  <content>{{velocity output="false"}}
#*
 * Display the checkboxes for a given criterion, according to the values passed in $options
 * @param $label the pabel of the criterion, the way it should be displayed
 * @param $expanded true if the criterion should be displayed with options visible, false otherwise
 * @param $active true if any value in this criterion is checked, false otherwise
 * @param $options map of maps with the values to display for this criterion, which contains, for each value, the value to be sent to the filter request as key and as value a map with "checked" a boolean indicating whether the value is chosen or not and "prettyName" the display string corresponding to the respective value
 *#
#macro(displayCriterion $label $name $expanded $active $options)
 &lt;div class="criterion #if(!$expanded) collapsed #end #if($active) active #end"&gt;
    &lt;span class="criterion-label"&gt;$label &lt;span class="details"&gt;($msg.get('annotations.filters.anyvalue'))&lt;/span&gt; &lt;span class="clear"&gt;($msg.get('annotations.filters.clearvalue'))&lt;/span&gt;&lt;/span&gt;
    ## and the hidden input holding the criterion name, that allows the javascript to extract the filter from this criterion
    &lt;input type="hidden" name="${name}" value="${name}"/&gt;
    #if ($expanded)
    &lt;div class="criterion-options"&gt;
      &lt;div class="criterion-option-list"&gt;
        #if ($options.keySet().size() == 0)
          &lt;span class="no-option"&gt;$msg.get('annotations.filters.nooption', [$label])&lt;/span&gt;
        #end
        #foreach ($option in $options.keySet())
          #set($optionValue = $options.get($option))
          &lt;label class="option #if($optionValue.checked) selected #end"&gt;&lt;input type="checkbox" value="${option}" #if($optionValue.checked) checked="checked" #end/&gt;$optionValue.prettyName&lt;/label&gt;
        #end
      &lt;/div&gt;
    &lt;/div&gt;
    #end
  &lt;/div&gt;
#end

#*
 * Extracts the unique values of propertyName for the annotations in annotationsList and returns them, along with the number of occurrences, in $valuesMap.
 * @param $annotationsList the list of annotations to group the values for
 * @param $propertyName the property whose values to group
 * @param $valuesMap the map to return the values in
 *#
#macro(getValues $annotationsList $propertyName $valuesMap)
  #set ($result = {})
  #foreach($ann in $annotationsList)
    #set($value = "")
    #set($value = $ann.get($propertyName))
    #if("$!{value}" != "")
      #set($previousValue = $result.get($value))
      #if ($previousValue)
        #set($newValue = $previousValue + 1)
        #set($dispose = $result.put($value, $newValue))
      #else
        #set($dispose = $result.put($value, 1))
      #end
    #end
  #end
  #set ($valuesMap = $NULL)
  #setVariable ("$valuesMap" $result)
#end

#*
 * Displays the annotators checkbox selectors for the annotations authors.
 * @param $annotationsList the list of annotations to display the annotators selector for
 *#
#macro(displayAnnotatorCheckboxes $annotationsList)
  #set($checkboxesMap = {})
  #set($valuesMap = {})
  #getValues($annotationsList, "author", $valuesMap)
  #foreach($value in $valuesMap.keySet())
    #set($dispose = $checkboxesMap.put($value, {"checked" : false, "prettyName" : $xwiki.getUserName($value, false)}))
  #end
  #set($config = 'AnnotationCode.AnnotationConfig')
  #set($annotationClassDocName = $xwiki.getDocument($config).getObject($config).getProperty('annotationClass').value)
  #set($annotationClass = $xwiki.getDocument("$!{annotationClassDocName}").getxWikiClass())
  #displayCriterion($annotationClass.get("author").prettyName, "author", true, false, $checkboxesMap)
#end


#*
 * Displays the checkboxes for criterion extracted from the passed property name.
 * @param $propertyName the name of the property to extract this criterion from
 * @param $annotationsList the list of annotations to display the annotators selector for
 *#
#macro(displayPropertyCheckboxes $annotationsList $propertyName)
  #set($checkboxesMap = {})
  #set($valuesMap = {})
  #getValues($annotationsList, $propertyName, $valuesMap)
  #foreach($value in $valuesMap.keySet())
    #set($dispose = $checkboxesMap.put($value, {"checked" : false, "prettyName" : $value}))
  #end
  #set($config = 'AnnotationCode.AnnotationConfig')
  #set($annotationClassDocName = $xwiki.getDocument($config).getObject($config).getProperty('annotationClass').value)
  #set($annotationClass = $xwiki.getDocument("$!{annotationClassDocName}").getxWikiClass())
  #displayCriterion($annotationClass.get($propertyName).prettyName, $propertyName, true, false, $checkboxesMap)
#end

{{/velocity}}

{{velocity}}
{{html clean="false"}}
&lt;div class="annotationsettings"&gt;
  #if ("$!{request.target}" != "")
    ## check the syntax of the target (should be an annotations function called instead of a standard xwiki call)
    #set($targetDoc = $xwiki.getDocument($!request.target))
    #set($targetDocSyntax = $targetDoc.syntax)
    #if (!($targetDocSyntax.type.id == 'xwiki' &amp;&amp; $targetDocSyntax.version == '1.0'))
      &lt;div class="box plainmessage"&gt;$msg.get("annotations.action.create.helpmessage", ["&lt;strong&gt;Ctrl + M (Meta + M)&lt;/strong&gt;"])&lt;/div&gt;
      &lt;input type="checkbox" name="annotationsdisplay" id="annotationsdisplay" /&gt;
      &lt;label for="annotationsdisplay"&gt;$msg.get('annotations.settings.display')&lt;/label&gt;
      &lt;div class="annotation-filters collapsed"  id="annotation-filters"&gt;
        &lt;div class="annotation-filters-toggler"&gt;&lt;a href="#annotation-filters"&gt;$msg.get('annotations.filters.show')&lt;/a&gt;&lt;/div&gt;
        &lt;div class="criteria"&gt;
          #set($annotationsList = $services.annotations.getAnnotations($!request.target))
          #displayAnnotatorCheckboxes($annotationsList)
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="clearfloats" /&gt;
    #else
      &lt;div class="box infomessage"&gt;$msg.get("annotations.settings.error.wrongsyntax")&lt;/div&gt;
    #end
  #else
    &lt;div class="box infomessage"&gt;$msg.get("annotations.settings.error.notarget")&lt;/div&gt;
  #end
&lt;/div&gt;
{{/html}}
{{/velocity}}</content>
</xwikidoc>
