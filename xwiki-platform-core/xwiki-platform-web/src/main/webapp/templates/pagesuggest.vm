#macro (suggestPages)
  #set ($input = "$!request.input.toLowerCase()")
  #set ($statement = "where lower(doc.fullName) like :input or lower(doc.title) like :input")
  #if ($request.wiki == 'global')
    #set ($wikiReference = $services.model.createWikiReference($xcontext.mainWikiName))
  #else
    #set ($wikiReference = $doc.documentReference.wikiReference)
  #end
  #set ($query = $services.query.xwql($statement).setWiki($wikiReference.name).addFilter('unique'))
  #set ($query = $query.setLimit(10).bindValue('input', "%$input%"))
  #set ($rawResults = $query.execute())
  #displayResults($rawResults $wikiReference)
#end
##
#macro (displayResults $rawResults $wikiReference)
  #set ($results = [])
  #foreach ($result in $rawResults)
    #addResultData($result $results $wikiReference)
  #end
  #if ($request.media == 'json')
    #displayResultsJSON($results)
  #else
    #displayResultsXML($results)
  #end
#end
##
#macro (getLabel $reference)
  #set ($doc = $xwiki.getDocument($reference))
  #set ($res = $doc.plainTitle)
  #if ("$!res" == "")
    #set ($res = $doc.name)
  #end
#end
##
#macro (addResultData $result $results $wikiReference)
  #set ($reference = $services.model.resolveDocument($result, $wikiReference))
  #getLabel($reference)
  #set ($label = $res)
  #set ($icon = $services.icon.getMetaData('page_white'))
  #set ($hint = "")
  #foreach ($ref in $reference.reversedReferenceChain)
    #if ($ref.type != "WIKI" && $ref.name != "WebHome" && $foreach.hasNext)
      #if ("$!hint" != "")
        #set ($hint = "$hint / ")
      #end
      #getLabel($ref)
      #set ($hint = "$hint $res")
    #end
  #end
  #set ($discard = $results.add({
    'value': $services.model.serialize($reference, 'compactwiki'),
    'label': $label,
    'icon': $icon,
    'url': $xwiki.getURL($reference),
    'hint': $hint
  }))
#end
##
#macro (displayResultsXML $results)
  #set ($discard = $response.setContentType('text/xml'))
  <?xml version="1.0" encoding="UTF-8"?>
  <results>
    #foreach ($result in $results)
      #set ($icon = $result.icon.url)
      #if ("$!icon" == '')
        #set ($icon = $result.icon.cssClass)
      #end
      <rs id="$escapetool.xml($result.url)" icon="$!escapetool.xml($icon)"
        info="$escapetool.xml($result.label)">$escapetool.xml($result.value)</rs>
    #end
  </results>
#end
##
#macro (displayResultsJSON $results)
  #set ($discard = $response.setContentType('application/json'))
  $jsontool.serialize($results)
#end
##
#if ($request.exactMatch == 'true' && "$!request.input" != '')
  ## This is normally used for loading the initial selection.
  #set ($rawResults = [$request.input])
  #displayResults($rawResults)
#else
  #suggestPages()
#end
