<div class="gradientfilterIE"></div>
<div class="componentcontainer">
<strong id="xwikicontentmenutitle" class="hidden">$services.localization.render('core.menu.content.title')</strong>
<div class="rightmenu">
</div>
<div class="leftmenu">
##
## Let's clean the query string to avoid injections
##
#set($cleanQueryString = $escapetool.html($escapetool.url($request.getParameterMap())))
#if($hasEdit && !$isReadOnly)
  ## Compute the default edit mode
  #set($editaction = $doc.getDefaultEditMode())
  ##
  ## Edit menu
  ##
  #if($isAdvancedUser)
    #xwikitopmenuentrystart($doc.getURL($editaction, $!languageparams) $services.localization.render('core.menu.edit') 'tmEdit' 'hasIcon')
    #submenuitem($doc.getURL('edit', "$!{languageparams}#if ($languageparams != '')&amp;#{end}editor=wiki") $services.localization.render('core.menu.edit.wiki') 'tmEditWiki', '')
    ## Check if the WYSIWYG supports the current document's syntax and if so add a menu entry to edit the current
    ## document with the WYSIWYG editor.
    #if ($services.wysiwyg.isSyntaxSupported($tdoc.syntax.toIdString()) || $tdoc.syntax.toIdString() == 'xwiki/1.0')
      #submenuitem($doc.getURL('edit', "$!{languageparams}#if ($languageparams != '')&amp;#{end}editor=wysiwyg") $services.localization.render('core.menu.edit.wysiwyg') 'tmEditWysiwyg', '')
    #end
    #submenuitem($doc.getURL($editaction, "$!{languageparams}#if ($languageparams != '')&amp;#{end}editor=inline") $services.localization.render('core.menu.edit.inline') 'tmEditInline', '')
    #submenuseparator()
    #submenuitem($doc.getURL('edit', 'editor=rights') $services.localization.render('core.menu.edit.rights') 'tmEditRights', '')
    #submenuitem($doc.getURL('edit', 'editor=object') $services.localization.render('core.menu.edit.object') 'tmEditObject', '')
    #submenuitem($doc.getURL('edit', 'editor=class') $services.localization.render('core.menu.edit.class') 'tmEditClass', '')
    #xwikitopmenuentryend()
  #else ## !isAdvanced
    #xwikitopmenuentry($doc.getURL($editaction, $!languageparams) $services.localization.render('core.menu.edit') 'tmEdit', 'hasIcon')
  #end
  #if($keyboardShortcutsEnabled)
    <script type="text/javascript">
    //<![CDATA[
      shortcut.add("$services.localization.render('core.shortcuts.view.edit')",function() { location.href=$('tmEdit').down('a').href; }, { 'type':'keypress', 'propagate':false, 'disable_in_input':true });
      #if($isAdvancedUser)
        shortcut.add("$services.localization.render('core.shortcuts.view.wiki')",function() { location.href=$('tmEditWiki').href; }, { 'type':'keypress', 'propagate':false, 'disable_in_input':true });
        shortcut.add("$services.localization.render('core.shortcuts.view.wysiwyg')",function() { location.href=$('tmEditWysiwyg').href; }, { 'type':'keypress', 'propagate':false, 'disable_in_input':true });
        shortcut.add("$services.localization.render('core.shortcuts.view.inline')",function() { location.href=$('tmEditInline').href; }, { 'type':'keypress', 'propagate':false, 'disable_in_input':true });
        shortcut.add("$services.localization.render('core.shortcuts.view.rights')",function() { location.href=$('tmEditRights').href; }, { 'type':'keypress', 'propagate':false, 'disable_in_input':true });
        shortcut.add("$services.localization.render('core.shortcuts.view.objects')",function() { location.href=$('tmEditObject').href; }, { 'type':'keypress', 'propagate':false, 'disable_in_input':true });
        #if($hasAdmin)
          shortcut.add("$services.localization.render('core.shortcuts.view.class')",function() { location.href=$('tmEditClass').href; }, { 'type':'keypress', 'propagate':false, 'disable_in_input':true });
        #end
      #end
    //]]>
    </script>
  #end
#end
##
## Export menu
##
#if(!$doc.isNew())
  #xwikitopmenuentrystart('' $services.localization.render('core.menu.export') 'tmExport' '')
  ## Preserve the document query string.
  #submenuitem($doc.getURL('view', "xpage=pdfoptions&amp;qs=$!escapetool.url($request.getQueryString())") $services.localization.render('core.menu.export.pdf') 'tmExportPdf', '')
  #if("$!{services.officemanager.serverState}" == "Connected")
    #submenuitem($doc.getURL('export', "format=odt&amp;$cleanQueryString") $services.localization.render('core.menu.export.odt') 'tmExportOdt', '')
    #submenuitem($doc.getURL('export', "format=rtf&amp;$cleanQueryString") $services.localization.render('core.menu.export.rtf') 'tmExportRtf', '')
  #end
  #submenuitem($doc.getURL('export', "format=html&amp;$cleanQueryString") $services.localization.render('core.menu.export.html') 'tmExportHtml', '')
  #if($hasAdmin && "$!xwiki.getPlugin('package')" != '')
    #submenuitem($doc.getURL('export', "format=xar&amp;name=$escapetool.url($doc.fullName)&amp;pages=$escapetool.url($services.model.serialize($doc.getDocumentReference(),'default'))&amp;$!docvariant") $services.localization.render('core.menu.export.xar') 'tmExportXar', '')
  #end
  #xwikitopmenuentryend()
#end
##
## Actions menu
##
#if(!$doc.isNew())
  #xwikitopmenuentrystart('' $services.localization.render('core.menu.moreactions') 'tmMoreActions' '')
  #submenuitem($doc.getURL('view', "xpage=print&amp;$cleanQueryString") $services.localization.render('core.menu.preview') 'tmPrintPreview', '')
  #submenuitem($doc.getURL('view', "viewer=code") $services.localization.render('core.menu.view.source') 'tmViewSource', '')
  #xwikitopmenuentryend()
  #if ($keyboardShortcutsEnabled)
    <script type="text/javascript">
    //<![CDATA[
      shortcut.add("$services.localization.render('core.shortcuts.view.code')", function() {
        location.href = $('tmViewSource').href;
      }, {'type': 'keypress', 'propagate': false, 'disable_in_input': true });
    //]]>
    </script>
  #end
#end
</div>
</div>
