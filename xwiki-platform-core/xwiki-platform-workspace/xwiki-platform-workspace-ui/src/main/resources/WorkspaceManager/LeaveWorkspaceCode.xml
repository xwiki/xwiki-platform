<?xml version="1.0" encoding="UTF-8"?>

<xwikidoc>
  <web>WorkspaceManager</web>
  <name>LeaveWorkspaceCode</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <parent>WorkspaceManager.WebHome</parent>
  <creator>xwiki:XWiki.Admin</creator>
  <author>xwiki:XWiki.Admin</author>
  <customClass/>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <creationDate>1293832800000</creationDate>
  <date>1293832800000</date>
  <contentUpdateDate>1293832800000</contentUpdateDate>
  <version>1.1</version>
  <title>#if("$!{request.workspaceName}" == '')$msg.get('workspacemanager.title.leave.empty')#{else}$msg.get('workspacemanager.title.leave', ["${request.workspaceName}"])#end</title>
  <template/>
  <defaultTemplate/>
  <validationScript/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.0</syntaxId>
  <hidden>false</hidden>
  <content>{{velocity}}
#set ($workspaceName = $request.workspaceName)
#set ($workspaceId = $request.workspaceId)
#set ($confirm = $request.confirm)
##
#if ("$!workspaceId" == '' || "$!workspaceName" == '')
  {{error}}[workspaceId] and [workspaceName] parameters are not specified.{{/error}}
#else
  ## FIXME: add plugin dependency checks.
  ##
  #set ($WorkspaceManager = $services.workspace)
  ##
  #set ($workspace = $WorkspaceManager.getWorkspace($workspaceId))
  ##
  #if ("$!workspace" == '')
    #if ("$!{WorkspaceManager.lastException}" != '')
      {{error}}Exception: $!{WorkspaceManager.lastException.message}{{/error}}
    #else
      {{error}}$msg.get('workspacemanager.error.workspacedoesnotexist', ["$workspaceId"]){{/error}}
    #end
  #else
    #set ($workspaceGroupDocument = $workspace.groupDocument)
    ##
    ## Use the low level API since this page has PR and we need to make the current user modify a document of a wiki he does not yet have access to.
    ##
    #set ($workspaceGroupDocumentRestricted = $workspaceGroupDocument.document)
    #set ($groupsClassReference = $services.model.createDocumentReference($workspaceId, 'XWiki', 'XWikiGroups'))
    #set ($currentUser = "${xcontext.mainWikiName}:${xcontext.user}")
    #set ($workspaceUrl = $workspace.wikiDescriptor.homePageUrl)
    ##
    #set ($existingMemberObject = $workspaceGroupDocumentRestricted.getXObject($groupsClassReference, 'member', $currentUser))
    #if ("$!existingMemberObject" == '')
      {{error}}The user [[$currentUser]] is not a member of the workspace [[$workspaceName&gt;&gt;$workspaceUrl]].{{/error}}
    #elseif ($workspace.wikiDescriptor.owner == $currentUser)
      {{error}}The user [[$currentUser]] is the owner of the workspace [[$workspaceName&gt;&gt;$workspaceUrl]]. The owner of a workspace may not leave it unless the workspace is deleted or the owner is changed.{{/error}}
    #else
      #if ("$!confirm" != 1)
        #set ($browseDocumentReference = $services.model.createDocumentReference($xcontext.mainWikiName, 'WorkspaceManager', 'WebHome'))
        #set ($backUrl = $xwiki.getURL($browseDocumentReference))
        #set ($confirmUrl = $doc.getURL('view', "$!request.queryString&amp;confirm=1"))
        {{box}}
          Are you sure you want to leave workspace [[$workspaceName&gt;&gt;$workspaceUrl]]?
          ((({{html}}
            &lt;span class="buttonwrapper"&gt;&lt;a class="button" href="$confirmUrl"&gt;Yes&lt;/a&gt; &lt;a class="button" href="$backUrl"&gt;No&lt;/a&gt;&lt;/span&gt;
          {{/html}})))
        {{/box}}
      #else
        #set ($temp = $workspaceGroupDocumentRestricted.removeXObject($existingMemberObject))
        #set ($temp = $xwiki.getXWiki().saveDocument($workspaceGroupDocumentRestricted, "User $currentUser left workspace.", true, $xcontext.context))
        {{success}}The user [[$currentUser]] successfully left workspace [[$workspaceName&gt;&gt;$workspaceUrl]].{{/success}}
      #end
    #end
  #end
#end
{{/velocity}}</content>
</xwikidoc>
