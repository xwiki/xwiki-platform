#if ($isInServletMode)## Visible only in a page
<div id="mainmenu" class="layoutsubsection actionmenu">
<div class="gradientfilterIE"></div>
<div class="componentcontainer">
<strong id="xwikimenutitle" class="hidden">$services.localization.render('core.menu.main.title')</strong>
<div class="rightmenu">
#set ($isWikiAPIAvailable = ("!$services.wiki" != '') && ("!$services.wiki.user" != ''))
#set ($mainWikiHomeDocumentReference = $services.model.createDocumentReference($xcontext.mainWikiName, 'Main', 'WebHome'))
#set ($WikiManagerMainDocReference = $services.model.createDocumentReference($xcontext.mainWikiName, 'WikiManager', 'WebHome'))
#set ($isWikiUIAvailable = $xwiki.exists($WikiManagerMainDocReference))
#set ($isMainWikiUser = ($xcontext.mainWikiName == "$!{xcontext.userReference.wikiReference.name}"))
#set ($isAdminAppInstalled = $xwiki.exists('XWiki.AdminSheet'))
##
## User
##
#if (!$xcontext.action.startsWith('login'))
  #if ($isGuest)
    #set ($loginurl = $xwiki.getURL('XWiki.XWikiLogin', 'login', "xredirect=$escapetool.url($xwiki.relativeRequestURL)"))
    #xwikitopmenuentry($!loginurl $!services.localization.render('login') 'tmLogin')
  #else
    #set ($logouturl = $xwiki.getURL('XWiki.XWikiLogout', 'logout', "xredirect=$escapetool.url($xwiki.relativeRequestURL)"))
    #xwikitopmenuentry($!logouturl $!services.localization.render('logout') 'tmLogout')
  #end
#end
#if ($isGuest && $xwiki.hasAccessLevel('register', 'XWiki.XWikiPreferences'))
  #set ($regurl = $xwiki.getURL('XWiki.Register', 'register'))
  #xwikitopmenuentry($!regurl $!services.localization.render('core.register') 'tmRegister')
#end
##
##
#if (!$isGuest)
#if ($isSuperAdmin)
  #xwikitopmenuentry('#' $!services.localization.render('superadmin') 'tmUser' 'hasIcon')
#else
  #xwikitopmenuentrystart($xwiki.getURL($xcontext.user, 'view') "$services.localization.render('core.menu.type.profile')__SEPARATOR__$!xwiki.getUserName($xcontext.user, false)" 'tmUser' 'hasIcon')
  #submenuitem($xwiki.getURL($xcontext.user, 'view') $services.localization.render('core.menu.profile') 'tmProfile', '')
  #submenuitem($xwiki.getURL($xcontext.user, 'view', 'category=preferences') $services.localization.render('core.menu.userPreferences') 'tmUserPreferences', '')
  #if ($hasWatch)
    #submenuitem($xwiki.getURL($xcontext.user, 'view', 'category=watchlist') $services.localization.render('core.menu.watchlist.management') 'tmWatchlistManager', '')
    #submenuitem($xwiki.getURL($xcontext.user, 'view', 'category=network') $services.localization.render('core.menu.network') 'tmUserNetwork', '')
  #end
  #if ($isWikiUIAvailable && $isMainWikiUser)
    #submenuitem($xwiki.getURL($xcontext.user, 'view', 'category=wikis') $services.localization.render('platform.wiki.menu.userwikis') 'tmUserWikis', '')
  #end
  #submenuitem($xwiki.getURL($xcontext.user, 'view', 'category=dashboard') $services.localization.render('core.menu.userDashboard') 'tmUserDashboard', '')
  #xwikitopmenuentryend()
#end
#end
</div>
<div class="leftmenu">
##
## Create
##
## $displayCreateWiki is determined by:
## - the wiki app is installed
## - and the user has the right to create a wiki
## - and the wiki application has been installed.
## (in the future the last condition will be removed since we will use the Distribution Wizard for wiki creation)
#set ($displayCreateWiki = $isWikiAPIAvailable && $isWikiUIAvailable && $hasCreateWiki)
#set ($displayCreateSubmenu = $hasCreateSpace || $hasCreatePage || $hasComment || $displayCreateWiki)
#if ($displayCreateSubmenu)
  #xwikitopmenuentrystart('' $services.localization.render('core.menu.create') 'tmCreate' 'hasIcon')
  #set ($hasPreviousMenuSection = false)
  #if ($displayCreateWiki)
    #set ($createWikiDocReference = $services.model.createDocumentReference('xwiki', 'WikiManager', 'CreateWiki'))
    #submenuitem("$xwiki.getURL($createWikiDocReference)" $services.localization.render('core.menu.create.wiki') 'tmCreateWiki', '')
    #set ($hasPreviousMenuSection = true)
  #end
  #if ($hasCreateSpace)
    #if ($hasPreviousMenuSection)
      #submenuseparator()
    #end
    #submenuitem("$doc.getURL('create', 'tocreate=space')" $services.localization.render('core.menu.create.space') 'tmCreateSpace', '')
    #set ($hasPreviousMenuSection = true)
  #end
  #if ($hasCreatePage)
    #if ($hasPreviousMenuSection)
      #submenuseparator()
    #end
    #submenuitem("$doc.getURL('create')" $services.localization.render('core.menu.create.page') 'tmCreatePage', '')
    ## Only display the Office Importer menu action if the Office Importer application is installed
    #set ($officeImporterMainDocument = $xwiki.getDocument('XWiki.OfficeImporter'))
    #if ("$!{officeImporterMainDocument.isNew()}" == 'false')
      #submenuitem($officeImporterMainDocument.getURL('view', "&amp;parent=$!{escapetool.url($doc.fullName)}") $services.localization.render('core.menu.create.pageFromOffice') 'tmCreatePageFromOffice', '')
    #end
    #set ($hasPreviousMenuSection = true)
  #end
  #if ((($hasComment && $showcomments) || ($hasEdit && $showattachments)) && !$doc.isNew() && $hasPreviousMenuSection)
    #submenuseparator()
  #end
  #if ($hasComment && $showcomments && !$doc.isNew())
    #submenuitem("$doc.getURL('view', 'viewer=comments')" $services.localization.render('core.menu.create.comment') 'tmCreateComment', '')
    <script type="text/javascript">
      //<![CDATA[
        document.observe('xwiki:dom:loaded', function() {
          $('tmCreateComment').observe('click', function(event) {
            event.stop();
            XWiki.displayDocExtra('Comments', 'commentsinline.vm', true);
            return false;
          });
        });
      //]]>
    </script>
    #set ($hasPreviousMenuSection = true)
  #end
  #if ($hasEdit && $showattachments && !$doc.isNew())
    #submenuitem("$doc.getURL('view', 'viewer=attachments')" $services.localization.render('core.menu.create.attachment') 'tmCreateAttachment', '')
    <script type="text/javascript">
      //<![CDATA[
        document.observe('xwiki:dom:loaded', function() {
          $('tmCreateAttachment').observe('click', function(event) {
            event.stop();
            XWiki.displayDocExtra('Attachments', 'attachmentsinline.vm', true);
            return false;
          });
        });
      //]]>
    </script>
    #set ($hasPreviousMenuSection = true)
  #end
  #xwikitopmenuentryend()
#end
##
## Home Menu
##
## This menu is displayed if:
## - Wiki UI is available
## - The current wiki is the main wiki OR the current wiki has support for local users only
#set ($displayHomeMenu = $isWikiUIAvailable && ($xcontext.isMainWiki() || ("$!services.wiki.user" != '' && $services.wiki.user.getUserScope()=='GLOBAL_ONLY')))
#if ($displayHomeMenu)
  #xwikitopmenuentrystart($xwiki.getURL($mainWikiHomeDocumentReference) $services.localization.render('core.menu.type.home') 'tmMainWiki' 'hasIcon')
  #set ($hasPreviousMenuSection = false)
  #if ($hasWatch && $xcontext.isMainWiki())
    #set ($watchClasses = '')
    #set ($unwatchClasses = 'hidden')
    #if ($services.watchlist.isWatched("WIKI"))
      #set ($watchClasses = 'hidden')
      #set ($unwatchClasses = '')
    #end
    #submenuitem("$doc.getURL('view', 'xpage=watch&amp;do=addwiki')&amp;xredirect=$escapetool.url($doc.getURL())" $services.localization.render('core.menu.watchlist.add.wiki') 'tmWatchWiki', $watchClasses)
    #submenuitem("$doc.getURL('view', 'xpage=watch&amp;do=removewiki')&amp;xredirect=$escapetool.url($doc.getURL())" $services.localization.render('core.menu.watchlist.remove.wiki') 'tmUnwatchWiki', $unwatchClasses)
    #set ($hasPreviousMenuSection = true)
  #end
  #set ($hasHomeWikiAdmin = $xwiki.hasAccessLevel('admin', $xcontext.user, "${xcontext.mainWikiName}:XWiki.XWikiPreferences"))
  #if ($hasHomeWikiAdmin)
    #set ($adminRef = $services.model.createDocumentReference($xcontext.mainWikiName, 'XWiki', 'XWikiPreferences'))
    #set ($adminwikiaction = $!xwiki.getURL($adminRef, 'admin'))
    #set ($importaction = $!xwiki.getURL($adminRef, 'import'))
    #set ($homeAdminSheetRef = $services.model.createDocumentReference($xwiki.mainWikiName, 'XWiki', 'AdminSheet'))
    #set ($isHomeAdminAppInstalled = $xwiki.exists($homeAdminSheetRef))
    #if ($isHomeAdminAppInstalled)
      #if($xcontext.isMainWiki())
        #submenuitem($adminwikiaction $services.localization.render('core.menu.admin.wiki') 'tmAdminWiki', '')
      #else
        #submenuitem($adminwikiaction $services.localization.render('core.menu.admin') 'tmAdminWiki', '')
      #end
    #else
      #submenuitem($importaction $services.localization.render('core.menu.admin') 'tmAdminWiki' '')
    #end
    #set ($hasPreviousMenuSection = true)
  #end
  #if ($hasPreviousMenuSection)
    #submenuseparator()
  #end  
  #submenuitem("$xwiki.getURL($WikiManagerMainDocReference)" $services.localization.render('platform.wiki.menu.wikiindex') 'tmWikiIndex' '')
  #set($homeDocumentIndexRef = $services.model.createDocumentReference($xcontext.mainWikiName, 'Main', 'AllDocs'))
  #if ($xwiki.exists($homeDocumentIndexRef))
    #submenuitem($xwiki.getURL($homeDocumentIndexRef) $services.localization.render('core.menu.wiki.documentindex') 'tmWikiDocumentIndex' '')
  #end
  #set($homeUserIndexRef = $services.model.createDocumentReference($xcontext.mainWikiName, 'Main', 'UserDirectory'))
  #if ($xwiki.exists($homeUserIndexRef))
    #submenuitem($xwiki.getURL($homeUserIndexRef) $services.localization.render('xe.panels.quicklinks.userdirectory') 'tmMainUserIndex' '')
  #end
  #xwikitopmenuentryend()  
#end
##
## Wiki
##
#set ($canDeleteWiki = $isWikiAPIAvailable && $isWikiUIAvailable && $services.wiki.mainWikiId != $services.wiki.currentWikiId && $services.wiki.canDeleteWiki($xcontext.user, $services.wiki.currentWikiId))
#set ($displayWikiSubmenu = $hasWatch || $hasGlobalAdmin || $xwiki.exists('Main.AllDocs') || $canDeleteWiki)
#set ($wikiEntryId = 'tmWiki')
#set ($wikiEntryText = $services.localization.render('core.menu.type.wiki'))
#set ($wikiName = $services.wiki.getById($xcontext.database).prettyName)
## If no pretty name is available (no wiki script service or pretty name is empty), use the wiki name.
#if ("$!wikiName.trim()" == '')
  #set ($wikiName = $xcontext.getDatabase())
#end
#set ($wikiEntryText = "${wikiEntryText}__SEPARATOR__${wikiName}")
## The wiki menu is available if:
## - OR WikiManager is not installed
## - OR the wiki is not the home
#if(!$isWikiUIAvailable || !$xcontext.isMainWiki())
  #if($displayHomeMenu)
    #xwikitopmenuseparator()
  #end
  #if(!$displayWikiSubmenu)
    ## Only display a link to the wiki
    #xwikitopmenuentry($xwiki.getURL($services.model.resolveDocument('', 'default', $doc.documentReference.extractReference('WIKI'))) $wikiEntryText $wikiEntryId 'hasIcon')
  #else
    ## Display a complete menu
    #xwikitopmenuentrystart($xwiki.getURL($services.model.resolveDocument('', 'default', $doc.documentReference.extractReference('WIKI'))) $wikiEntryText $wikiEntryId 'hasIcon')
    #set ($hasPreviousMenuSection = false)
    #if ($hasWatch)
      #set ($watchClasses = '')
      #set ($unwatchClasses = 'hidden')
      #if ($services.watchlist.isWatched("WIKI"))
        #set ($watchClasses = 'hidden')
        #set ($unwatchClasses = '')
      #end
      #submenuitem("$doc.getURL('view', 'xpage=watch&amp;do=addwiki')&amp;xredirect=$escapetool.url($doc.getURL())" $services.localization.render('core.menu.watchlist.add.wiki') 'tmWatchWiki', $watchClasses)
      #submenuitem("$doc.getURL('view', 'xpage=watch&amp;do=removewiki')&amp;xredirect=$escapetool.url($doc.getURL())" $services.localization.render('core.menu.watchlist.remove.wiki') 'tmUnwatchWiki', $unwatchClasses)
      #set ($hasPreviousMenuSection = true)
    #end
    #if ($hasGlobalAdmin)
      #set ($adminwikiaction = $!xwiki.getURL('XWiki.XWikiPreferences', 'admin'))
      #set ($importaction = $!xwiki.getURL('XWiki.XWikiPreferences', 'import'))
      #if ($isAdminAppInstalled)
        #submenuitem($adminwikiaction $services.localization.render('core.menu.admin.wiki') 'tmAdminWiki', '')
      #else
        #submenuitem($importaction $services.localization.render('core.menu.admin') 'tmAdminWiki' '')
      #end
      #set ($hasPreviousMenuSection = true)
    #end
    #if ($xwiki.exists('Main.AllDocs'))
      #if ($hasPreviousMenuSection)
        #submenuseparator()
      #end
      #submenuitem("$xwiki.getURL('Main.AllDocs')" $services.localization.render('core.menu.wiki.documentindex') 'tmWikiDocumentIndex' '')
      #set ($hasPreviousMenuSection = true)
    #end
    #if ($canDeleteWiki)
      #if ($hasPreviousMenuSection)
        #submenuseparator()
      #end
      #set ($deleteWikiPageReference = $services.model.createDocumentReference($xcontext.mainWikiName, 'WikiManager', 'DeleteWiki'))
      #set ($deleteUrl = $xwiki.getURL($deleteWikiPageReference, 'view', "wikiId=${services.wiki.currentWikiId}"))
      #submenuitem($deleteUrl $services.localization.render('platform.wiki.menu.deletewiki') 'tmDeleteWiki' '')
      #set ($hasPreviousMenuSection = true)
    #end
    #xwikitopmenuentryend()
  #end
#end
##
## Space
##
#set ($displaySpaceSubmenu = $hasWatch || $hasSpaceAdmin || $xwiki.exists('Main.SpaceIndex'))
#xwikitopmenuseparator()
#if (!$displaySpaceSubmenu)
  #xwikitopmenuentry($xwiki.getURL($services.model.resolveDocument('', 'default', $doc.documentReference.extractReference('SPACE'))) "$services.localization.render('core.menu.type.space')__SEPARATOR__$!{escapetool.xml($doc.space)}" 'tmSpace' 'hasIcon')
#else
  #xwikitopmenuentrystart($xwiki.getURL($services.model.resolveDocument('', 'default', $doc.documentReference.extractReference('SPACE'))) "$services.localization.render('core.menu.type.space')__SEPARATOR__$!{escapetool.xml($doc.space)}" 'tmSpace' 'hasIcon')
  #set ($hasPreviousMenuSection = false)
  #if ($hasWatch)
    #set ($watchClasses = '')
    #set ($unwatchClasses = 'hidden')
    #if ($services.watchlist.isWatched("SPACE"))
      #set ($watchClasses = 'hidden')
      #set ($unwatchClasses = '')
    #end
    #submenuitem("$doc.getURL('view', 'xpage=watch&amp;do=addspace')&amp;xredirect=$escapetool.url($doc.getURL())" $services.localization.render('core.menu.watchlist.add.space') 'tmWatchSpace', $watchClasses)
    #submenuitem("$doc.getURL('view', 'xpage=watch&amp;do=removespace')&amp;xredirect=$escapetool.url($doc.getURL())" $services.localization.render('core.menu.watchlist.remove.space') 'tmUnwatchSpace', $unwatchClasses)
    #set ($hasPreviousMenuSection = true)
  #end
  #if ($hasSpaceAdmin && $isAdminAppInstalled)
    #set ($spaceAdminDocRef = $services.model.createDocumentReference($doc.wiki, $doc.space, 'WebPreferences'))
    #set ($adminspaceaction = $xwiki.getURL($spaceAdminDocRef, 'admin'))
    #submenuitem($adminspaceaction $services.localization.render('core.menu.admin.space', [$escapetool.xml($doc.space)]) 'tmAdminSpace')
    #set ($hasPreviousMenuSection = true)
  #end
  #set($spaceIndexReference = $services.model.createDocumentReference('', 'Main', 'SpaceIndex'))
  #if ($xwiki.exists($spaceIndexReference))
    #if ($hasPreviousMenuSection)
      #submenuseparator()
    #end
    #set ($spaceHomeReference = $services.model.createDocumentReference('', $doc.space, 'WebHome'))
    #if ($xwiki.exist($spaceHomeReference))
      #set ($spaceIndexUrl = $xwiki.getURL($spaceHomeReference, 'view', 'sheet=Main.SpaceIndex'))
    #elseif ($xwiki.exists($doc.documentReference))
      #set ($spaceIndexUrl = $xwiki.getURL($doc.documentReference, 'view', 'sheet=Main.SpaceIndex'))
    #else
      #set ($spaceIndexUrl = $xwiki.getURL($spaceIndexReference, 'view', "space=${escapetool.url($doc.space)}"))
    #end
    #submenuitem($spaceIndexUrl $services.localization.render('core.menu.space.documentindex') 'tmSpaceDocumentIndex' '')
    #set ($hasPreviousMenuSection = true)
  #end
  #if ($hasSpaceAdmin)
    #if ($hasPreviousMenuSection)
      #submenuseparator()
    #end
    #set ($spaceDeleteUrl = $!xwiki.getURL($services.model.resolveDocument('', 'default', $doc.documentReference.extractReference('SPACE')), 'deletespace'))
    #submenuitem($spaceDeleteUrl $services.localization.render('core.menu.space.delete') 'tmSpaceDelete' '')
    #set ($hasPreviousMenuSection = true)
  #end
  #xwikitopmenuentryend()
#end
##
## Page
##
#set ($canView = !$doc.isNew() && $xwiki.hasAccessLevel('view'))
#set ($canCopy = $canView && $hasCreatePage)
#set ($canDelete = !$doc.isNew() && $xwiki.hasAccessLevel('delete'))
#set ($canShare = $canView && $xwiki.exists('XWiki.SharePage') && !$isGuest)
#set ($canWatch = !$doc.isNew() && $hasWatch)
#set ($displayPageSubmenu = $canWatch || $canShare || $canCopy || $canDelete)
#xwikitopmenuseparator()
#if (!$displayPageSubmenu)
  #xwikitopmenuentry($xwiki.getURL($doc.documentReference, 'view') "$services.localization.render('core.menu.type.page')__SEPARATOR__$!{escapetool.xml($doc.name)}" 'tmPage' 'hasIcon')
#else
  #xwikitopmenuentrystart($xwiki.getURL($doc.documentReference, 'view') "$services.localization.render('core.menu.type.page')__SEPARATOR__$!{escapetool.xml($doc.name)}" 'tmPage' 'hasIcon')
  #if ($canWatch)
   #set ($watchClasses = '')
    #set ($unwatchClasses = 'hidden')
    #if ($services.watchlist.isWatched("DOCUMENT"))
      #set ($watchClasses = 'hidden')
      #set ($unwatchClasses = '')
    #end
    #submenuitem("$xwiki.getURL($doc.documentReference, 'view', 'xpage=watch&amp;do=adddocument')&amp;xredirect=$escapetool.url($xwiki.getURL($doc.documentReference))" $services.localization.render('core.menu.watchlist.add.page') 'tmWatchDocument' $watchClasses)
    #submenuitem("$xwiki.getURL($doc.documentReference, 'view', 'xpage=watch&amp;do=removedocument')&amp;xredirect=$escapetool.url($xwiki.getURL($doc.documentReference))" $services.localization.render('core.menu.watchlist.remove.page') 'tmUnwatchDocument' $unwatchClasses)
  #end
  #if ($canShare)
    #submenuitem($xwiki.getURL($doc.documentReference, 'view', 'viewer=share') $services.localization.render('core.menu.share') 'tmActionShare', '')
    #userPicker_import()
    $xwiki.jsx.use('XWiki.SharePage')
    $xwiki.ssx.use('XWiki.SharePage')
  #end
  #if (($canWatch || $canShare) && ($canCopy || $canDelete))
    #submenuseparator()
  #end
  #if ($canCopy)
    #submenuitem($xwiki.getURL($doc.documentReference, 'view', 'xpage=copy') $services.localization.render('core.menu.copy') 'tmActionCopy', '')
  #end
  #if ($canDelete)
    #submenuitem($xwiki.getURL($doc.documentReference, 'view', 'xpage=rename&amp;step=1') $services.localization.render('core.menu.rename') 'tmActionRename', '')
    #submenuitem($xwiki.getURL($doc.documentReference, 'delete', $!languageparams) $services.localization.render('core.menu.delete') 'tmActionDelete', '')
  #end
  #xwikitopmenuentryend()
  #if ($canDelete && $keyboardShortcutsEnabled)
    <script type="text/javascript">
      //<![CDATA[
      shortcut.add("$services.localization.render('core.shortcuts.view.delete')",function() { location.href=$('tmActionDelete').href; }, { 'type':'keypress', 'propagate':false, 'disable_in_input':true });
      shortcut.add("$services.localization.render('core.shortcuts.view.rename')",function() { location.href=$('tmActionRename').href; }, { 'type':'keypress', 'propagate':false, 'disable_in_input':true });
      //]]>
    </script>
  #end
#end
</div>
</div>
</div>
#end
