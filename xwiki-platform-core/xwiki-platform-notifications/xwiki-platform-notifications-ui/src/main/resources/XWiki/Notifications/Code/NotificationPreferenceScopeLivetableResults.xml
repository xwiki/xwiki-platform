<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.3" reference="XWiki.Notifications.Code.NotificationPreferenceScopeLivetableResults" locale="">
  <web>XWiki.Notifications.Code</web>
  <name>NotificationPreferenceScopeLivetableResults</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1494937284000</creationDate>
  <parent>XWiki.Notifications.Code.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1495011454000</date>
  <contentUpdateDate>1495011454000</contentUpdateDate>
  <version>1.1</version>
  <title>NotificationPreferenceScopeLivetableResults</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity}}
#template('hierarchy_macros.vm')
#if ($xcontext.action == 'get')
  ##
  ## Build the list of NotificationPreferenceScope related to the specified event type.
  ##
  #set ($document = $xwiki.getDocument($services.model.resolveDocument($request.user)))
  #set ($restBaseURL = $services.rest.url($document.documentReference))
  #set ($elements = [])
  #foreach ($obj in $document.getObjects('XWiki.Notifications.Code.NotificationPreferenceScopeClass'))
    #if ($obj.getValue('eventType') == "$!request.eventType")
      #if ($obj.getValue('scope') == 'pageOnly')
        #set ($reference = $services.model.resolveDocument($obj.getValue('scopeReference')))
      #elseif ($obj.getValue('scope') == 'pageAndChildren')
        #set ($reference = $services.model.resolveSpace($obj.getValue('scopeReference')))
      #elseif ($obj.getValue('scope') == 'wiki')
        #set ($reference = $services.model.createWikiReference($obj.getValue('scopeReference')))
      #end
      #set ($scope = $obj.getValue('scope'))
      #if ($scope == 'pageOnly')
        #set ($scopeIcon = 'page')
      #elseif ($scope == 'pageAndChildren')
        #set ($scopeIcon = 'chart-organisation')
      #else
        #set ($scopeIcon = 'wiki')
      #end
      #set ($element = {
        'scope'          : $services.icon.renderHTML($scopeIcon),
        'scopeReference' : $obj.getValue('scopeReference'),
        'doc_viewable'   : true,
        'location'       : "#hierarchy($reference, {'limit': 5, 'plain': false, 'local': false, 'displayTitle': false})",
        'doc_delete_url' : "${restBaseURL}/objects/XWiki.Notifications.Code.NotificationPreferenceScopeClass/${obj.reference.objectNumber}"
      })
      #set ($discard = $elements.add($element))
    #end
  #end
  ##
  ## JSON.
  ##
  #set ($discard = $response.setContentType('application/json'))
  #set ($offset = $numbertool.toNumber($request.offset))
  #if (!$offset)
    #set ($offset = 1)
  #end
  $jsontool.serialize({
    'totalrows'   : $elements.size(),
    'reqNo'       : $request.reqNo,
    'returnedrows': $elements.size(),
    'offset'      : $offset,
    'rows'        : $elements
  })
#end
{{/velocity}}
</content>
</xwikidoc>
