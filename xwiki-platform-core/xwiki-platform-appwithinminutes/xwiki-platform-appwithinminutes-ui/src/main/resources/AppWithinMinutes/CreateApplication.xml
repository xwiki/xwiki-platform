<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.1">
  <web>AppWithinMinutes</web>
  <name>CreateApplication</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>AppWithinMinutes.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title>$services.localization.render('platform.appwithinminutes.appNamePageTitle')</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.0</syntaxId>
  <hidden>true</hidden>
  <content>{{include reference="AppWithinMinutes.WizardStep"/}}

{{template name="locationPicker_macros.vm" /}}

{{velocity output="false"}}
#macro(showStep)
  {{html wiki="true"}}
  #appWizardHeader('name')
  (% class="wizard-help" %)
  (((
    **$services.localization.render('platform.appwithinminutes.wizardStepHelpTitle')** $services.localization.render('platform.appwithinminutes.wizardStepHelpDescription')
    (% class="steps vertical" %)
    #foreach($step in $awmSteps)
      * (% class="number" %)$mathtool.add($foreach.index, 1)(%%) (% class="name" %)$services.localization.render("appWithinMinutes.wizardStep.${step}.name")(%%)
        (% class="description" %)$services.localization.render("appWithinMinutes.wizardStep.${step}.description")
    #end
  )))
  &lt;form action="$doc.getURL()" method="post" class="xform wizard-body"&gt;
    #locationPicker({
      'id': 'app',
      'title': {
        'label': 'platform.appwithinminutes.appNameLabel',
        'hint': 'platform.appwithinminutes.appNameHint',
        'name': 'appName'
      },
      'preview': {
        'label': 'appWithinMinutes.createApp.location.label',
        'hint': 'appWithinMinutes.createApp.location.hint'
      },
      'parent': {
        'label': 'appWithinMinutes.createApp.parent.label',
        'hint': 'appWithinMinutes.createApp.parent.hint',
        'name': 'appParentReference',
        'reference': $doc.documentReference.wikiReference,
        'placeholder': 'appWithinMinutes.createApp.parent.placeholder'
      }
    })
    &lt;div class="appName-preview"&gt;&lt;/div&gt;
    #appWizardFooter(1)
  &lt;/form&gt;
  {{/html}}
#end

#macro (processStep)
  ## Check if the application already exists.
  #getAppReference
  #getAppDescriptor($appReference)
  #if ($appDescriptor)
    ## Edit an existing application. Use the configured class name.
    #set ($appClassRef = $appDescriptor.getObject($appDescriptorClassName).getValue('class'))
    ## The class reference is relative to the document holding the application descriptor.
    #set ($appClassRef = $services.model.resolveDocument($appClassRef, 'explicit', $appDescriptor.documentReference))
  #else
    ## Create a new application. Use the default class name.
    #set ($appCodeRef = $services.model.createSpaceReference('Code', $appReference))
    #set ($appClassRef = $services.model.createDocumentReference("$!{appReference.name}Class", $appCodeRef))
  #end
  #set ($queryString = {'wizard': true})
  #if (!$xwiki.exists($appClassRef))
    #set ($appHomeRef = $services.model.resolveDocument('', 'default', $appReference))
    #set ($discard = $queryString.putAll({
      'template': 'AppWithinMinutes.ClassTemplate',
      'parent': $services.model.serialize($appHomeRef),
      'title': "$appReference.name Class"
    }))
  #end
  $response.sendRedirect($xwiki.getURL($appClassRef, 'edit', $escapetool.url($queryString)))
#end

#macro (validateAppName)
  #getAppReference
  #if (!$appReference)
    (% class="xErrorMsg" %)$services.localization.render('platform.appwithinminutes.appNameEmptyError')
  #else
    #getAppDescriptor($appReference)
    #if ($appDescriptor)
      ## Edit an existing application.
      #set ($appDescriptorObj = $appDescriptor.getObject($appDescriptorClassName))
      #set ($appClassRef = $appDescriptorObj.getValue('class'))
      ## The class reference is relative to the document holding the application descriptor.
      #set ($appClassRef = $services.model.resolveDocument($appClassRef, 'explicit', $appDescriptor.documentReference))
    #else
      ## Create a new application.
      #set ($appCodeRef = $services.model.createSpaceReference('Code', $appReference))
      #set ($appClassRef = $services.model.createDocumentReference("$!{appReference.name}Class", $appCodeRef))
    #end
    ; $services.localization.render('platform.appwithinminutes.appNamePreviewHomePageUrlLabel')
    : {{{$!xwiki.getDocument($appReference).externalURL}}}
    ; $services.localization.render('platform.appwithinminutes.appNamePreviewCodeSpaceLabel')
    : {{html clean="false"}}#hierarchy($appClassRef.parent){{/html}}
    #set ($appHomeRef = $services.model.resolveDocument('', 'default', $appReference))
    #if ($appDescriptor || $xwiki.exists($appHomeRef) || $xwiki.exists($appClassRef))

      {{warning}}$services.localization.render('platform.appwithinminutes.appNameIsUsedWarning'){{/warning}}
    #end
  #end
#end

#macro (getAppReference)
  #if ($request.resolve == 'true')
    #set ($appReference = $services.model.resolveSpace($request.appName))
  #elseif ("$!request.appName" != '')
    #set ($parentReference = $doc.documentReference.wikiReference)
    #if ("$!request.appParentReference" != '')
      #set ($parentReference = $services.model.resolveSpace($request.appParentReference))
    #end
    #set ($appReference = $services.model.createSpaceReference($request.appName, $parentReference))
  #else
    #set ($appReference = $NULL)
  #end
#end

#macro (getAppDescriptor $appReference)
  #set ($appDescriptorClassName = 'AppWithinMinutes.LiveTableClass')
  #set ($appDescriptorStatement = "from doc.object($appDescriptorClassName) as obj where doc.space = :space")
  #set ($localSpaceReference = $services.model.serialize($appReference, 'local'))
  #set ($appDescriptors = $services.query.xwql($appDescriptorStatement).bindValue('space', $localSpaceReference).execute())
  #if ($appDescriptors.size() &gt; 0)
    #set ($appDescriptor = $xwiki.getDocument($appDescriptors.get(0)))
  #end
#end
{{/velocity}}

{{velocity}}
#if ("$!request.appName" != '')
  #if ($xcontext.action == 'get')
    #validateAppName
  #else
    ## CSRF protection is not needed because this step only redirects to the next one passing data in the query string.
    #processStep
  #end
#else
  #showStep
#end
#set ($displayDocExtra = false)
{{/velocity}}</content>
  <object>
    <name>AppWithinMinutes.CreateApplication</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>25bc0a83-b45b-4646-bf2b-a62ac7384f1d</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>require(['jquery'], function($) {
  var appNameInput = $('input[name="appName"]');
  var appParentInput = $('input[name="appParentReference"]');
  var preview = $('.appName-preview');
  var submitButton = $('#wizard-next').prop('disabled', true);

  var errorMessage = appNameInput.closest('dd').prev('dt').find('.xErrorMsg');
  if (errorMessage.size() == 0) {
    errorMessage = $(document.createElement('span')).addClass('xErrorMsg').hide().appendTo(errorMessage.addBack());
  }

  var toggleValidationError = function(message) {
    if (message) {
      appNameInput.addClass('xErrorField').focus();
      errorMessage.text(message).show();
    } else {
      appNameInput.removeClass('xErrorField');
      errorMessage.hide();
    }
  };

  var updatePreview = function(content) {
    preview.removeClass('loading').html(content);
    var error = preview.find('.xErrorMsg');
    submitButton.prop('disabled', error.size() &gt; 0);
    toggleValidationError(error.remove().text());
  };

  var fetchPreviewUpdate = function() {
    if (appNameInput.val() == '') {
      updatePreview('&lt;span class="xErrorMsg"&gt;$escapetool.javascript($services.localization.render("platform.appwithinminutes.appNameEmptyError"))&lt;/span&gt;');
    } else {
      preview.addClass('loading');
      $.get(XWiki.currentDocument.getURL('get'), submitButton.closest('form').serialize(), updatePreview);
    }
  };

  var previewTimeout;
  var schedulePreviewUpdate = function() {
    clearTimeout(previewTimeout);
    submitButton.prop('disabled', true);
    setTimeout(fetchPreviewUpdate, 500);
  };

  appNameInput.add(appParentInput)
    .on('input', schedulePreviewUpdate)
    .keyup(function(event) {
      // Show the error message if the user presses Enter before typing anything.
      if (event.which == 13 &amp;&amp; appNameInput.val() == '' &amp;&amp; !appNameInput.hasClass('xErrorField')) {
        fetchPreviewUpdate();
      }
    });
});</code>
    </property>
    <property>
      <name>Code</name>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>currentPage</use>
    </property>
  </object>
  <object>
    <name>AppWithinMinutes.CreateApplication</name>
    <number>0</number>
    <className>XWiki.StyleSheetExtension</className>
    <guid>3782ad9f-9bfd-43f2-9310-c196092a0ad1</guid>
    <class>
      <name>XWiki.StyleSheetExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <contentType>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>contentType</name>
        <number>6</number>
        <prettyName>Content Type</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>CSS|LESS</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </contentType>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>#template('colorThemeInit.vm')
.wizard-help {
  background-color: $theme.backgroundSecondaryColor;
  border-bottom: 1px solid $theme.borderColor;
  color: $theme.textSecondaryColor;
  float: right;
  font-size: 0.857em;
  margin: 0 0 2em 2em;
  padding: 1em;
  width: 17em;
}

.wizard-help strong {
  color: $theme.textColor;
}

.wizard-body {
  margin-right: 19em;
}

.appName-preview dl {
  color: $theme.textSecondaryColor;
  font-size: 0.8em;
  margin-bottom: 1em;
}

.appName-preview dt {
  font-weight: normal;
  margin-top: 1em;
}

.appName-preview dt:after {
  content: ":"
}

.appName-preview .breadcrumb {
  background-color: transparent;
  padding: 0;
}</code>
    </property>
    <property>
      <contentType>CSS</contentType>
    </property>
    <property>
      <name>Style</name>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>currentPage</use>
    </property>
  </object>
</xwikidoc>
