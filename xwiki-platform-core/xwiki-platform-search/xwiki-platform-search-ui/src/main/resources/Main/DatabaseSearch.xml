<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc>
  <web>Main</web>
  <name>DatabaseSearch</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <parent>Main.Search</parent>
  <creator>xwiki:XWiki.Admin</creator>
  <author>xwiki:XWiki.Admin</author>
  <customClass/>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <creationDate>1274890129000</creationDate>
  <date>1298680377000</date>
  <contentUpdateDate>1298680377000</contentUpdateDate>
  <version>1.1</version>
  <title>#if("$!{request.text}" == '')$services.localization.render('search.page.database.title.noquery')#else$services.localization.render('search.page.database.title.query', [$request.text])#end</title>
  <template/>
  <defaultTemplate/>
  <validationScript/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.0</syntaxId>
  <hidden>true</hidden>
  <object>
    <class>
      <name>XWiki.UIExtensionClass</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <content>
        <disabled>0</disabled>
        <name>content</name>
        <number>3</number>
        <prettyName>Extension Content</prettyName>
        <rows>10</rows>
        <size>40</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </content>
      <extensionPointId>
        <disabled>0</disabled>
        <name>extensionPointId</name>
        <number>1</number>
        <prettyName>Extension Point ID</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </extensionPointId>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>2</number>
        <prettyName>Extension ID</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parameters>
        <disabled>0</disabled>
        <name>parameters</name>
        <number>4</number>
        <prettyName>Extension Parameters</prettyName>
        <rows>10</rows>
        <size>40</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </parameters>
      <scope>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>scope</name>
        <number>5</number>
        <prettyName>Extension Scope</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>wiki=Current Wiki|user=Current User|global=Global</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </scope>
    </class>
    <name>Main.DatabaseSearch</name>
    <number>0</number>
    <className>XWiki.UIExtensionClass</className>
    <guid>01bd7e60-de8c-4fc6-b233-d0a86a3cdaf7</guid>
    <property>
      <content/>
    </property>
    <property>
      <extensionPointId>org.xwiki.platform.search</extensionPointId>
    </property>
    <property>
      <name>database</name>
    </property>
    <property>
      <parameters>label=$services.localization.render('search.extension.title.database')
admin=
search=Main.DatabaseSearch</parameters>
    </property>
    <property>
      <scope>wiki</scope>
    </property>
  </object>
  <content>{{velocity}}
$xwiki.ssfx.use("uicomponents/search/search.css", true)##
## Disable the document extra data: comments, attachments, history...
#set($docextras = [])
#set ($rssmode = ("$!request.xpage" == 'plain'))
## ---------------
## Space filtering
## ---------------
#set($spaces = $xwiki.spaces)
#set($selectedSpace = $escapetool.html($!request.space))
## ---------------
## Space macros
## ---------------
#macro(spaceoption $space $selectedSpace)
  &lt;option value="${space}" #if($selectedSpace == $space)selected="selected"#end&gt;$space&lt;/option&gt;
#end
#macro(spaceselect $selectedSpace $spaces)
  &lt;select name="space" title="$services.localization.render('search.page.bar.spaces.title')"&gt;
    &lt;option value="" #if($selectedSpace == '')selected="selected"#end&gt;$services.localization.render('search.page.bar.spaces.all')&lt;/option&gt;
    #foreach($space in $spaces)
      #if (!$blacklistedSpaces.contains($space) &amp;&amp; $xwiki.hasAccessLevel('view', "${space}.DocumentReservedForInternalXWikiUsage${mathtool.random(0, 999)}"))
        #spaceoption($space $selectedSpace)
      #end
    #end
  &lt;/select&gt;
#end
##
##
#set($text = "$!request.getParameter('text')")
#set($utext = $escapetool.url($text))
## ---------------
## Query form
## ---------------
#if(!$rssmode)
{{html}}
&lt;form action="" id="searchBar"&gt;
  &lt;div class="centered"&gt;
    &lt;label for="text" class="hidden"&gt;$services.localization.render('search.page.query.label')&lt;/label&gt;
    &lt;input type="text" id="text" name="text" class="searchQuery #if($text == '') withTip#end" #if($text == '') value="$services.localization.render('search.page.bar.query.tip')" #else value="${escapetool.xml($text)}" #end title="$services.localization.render('search.page.bar.query.title')"/&gt;
    #spaceselect($selectedSpace $spaces)
    &lt;span class='buttonwrapper'&gt;
      &lt;input type="submit" class="searchButton button" value="$services.localization.render('search.page.bar.submit')" title="$services.localization.render('search.page.bar.submit.title')"/&gt;
    &lt;/span&gt;
  &lt;/div&gt;
&lt;/form&gt;
{{/html}}
#end
#set($space = $selectedSpace)
#set($datedlist = [])
#if("$!text" == '')
  ## No search
#else
  #set($text = $text.replaceAll("'", "''").replaceAll("%", "\\%"))
  #set($nbitems = 50)
  ## ----------------------------------------------------------------------
  ## Exclude Blacklisted spaces ($blacklistedSpaces is set in xwikivars.vm)
  ## Also exclude WebPreferences.
  ## ----------------------------------------------------------------------
  #set ($webClause = '')
  #foreach ($blacklistedSpace in $blacklistedSpaces)
    #set ($webClause = "${webClause} doc.space &lt;&gt; '$blacklistedSpace' and")
  #end
  #if(!$hasAdmin &amp;&amp; !$isAdvancedUser)
    #set ($webClause = "${webClause} doc.name&lt;&gt;'WebPreferences' and")
  #end
  ## -----------------------------------------------------------
  ## Display only a given space if $request.space is defined
  ## -----------------------------------------------------------
  #if("$!space" != '')
    #set ($webClause = "${webClause} doc.space='$space' and")
  #end
  #macro(addelement $item $list)
    #if($xwiki.hasAccessLevel('view', $xcontext.user, "${xcontext.database}:${item}"))
      #set($itemdoc = $xwiki.getDocument($item))
      ## All items will be sorted by the date; since the list is obtained from several queries, we can't order in the HQL.
      ## Prefix all item names with the date for sorting the combined results.
      #set($sdate = $xwiki.formatDate($itemdoc.date, 'yyyyMMddHHmmss'))
      #set($sitem = "${sdate}${item}")
      #if(!$list.contains($sitem))
        #set($discard = $list.add($sitem))
      #end
    #end
  #end
  ## -----------------------------------------------------------
  ## Search in the page names
  ## -----------------------------------------------------------
  #set($query = $services.query.xwql("where $webClause upper(doc.fullName) like ?1 order by doc.date desc").addFilter('hidden').bindValue(1, "%${text.toUpperCase()}%").setLimit($nbitems).setOffset(0))
  #foreach ($item in $query.execute())
    #addelement($item $datedlist)
  #end
  ## -----------------------------------------------------------
  ## Search in page content
  ## -----------------------------------------------------------
  #set($query = $services.query.xwql("where $webClause upper(doc.content) like ?1 order by doc.date desc").addFilter('hidden').bindValue(1, "%${text.toUpperCase()}%").setLimit($nbitems).setOffset(0))
  #foreach ($item in $query.execute())
    #addelement($item $datedlist)
  #end
  ## -----------------------------------------------------------
  ## Search in text fields (simple String properties)
  ## -----------------------------------------------------------
  #set($query = $services.query.xwql("from BaseObject as obj, StringProperty as prop where $webClause obj.name=doc.fullName and prop.id.id = obj.id and upper(prop.value) like ?1").addFilter('hidden').bindValue(1, "%${text.toUpperCase()}%").setLimit($nbitems).setOffset(0))
  #foreach ($item in $query.execute())
    #addelement($item $datedlist)
  #end
  ## -----------------------------------------------------------
  ## Search in big text fields (textarea properties)
  ## -----------------------------------------------------------
  #set($query = $services.query.xwql("from BaseObject as obj, LargeStringProperty as prop where $webClause obj.name=doc.fullName and prop.id.id = obj.id and upper(prop.value) like ?1").addFilter('hidden').bindValue(1, "%${text.toUpperCase()}%").setLimit($nbitems).setOffset(0))
  #foreach ($item in $query.execute())
    #addelement($item $datedlist)
  #end
#end
#set($list = [])
#set ($discard = $collectionstool.sort($datedlist))
#foreach($item in $datedlist)
  ## datedlist contains items prefixed with the date; strip the date from the actual item name:
  #set($ok = $list.add(0, $item.substring(14)))
#end
#if ("$!utext" != '')
  #if($rssmode)
    #set ($feed = $xwiki.feed.getDocumentFeed($list, {}))
    #set ($feedURI = $doc.getExternalURL("view"))
    #set ($discard = $feed.setLink($feedURI))
    #set ($discard = $feed.setUri($feedURI))
    #set ($discard = $feed.setAuthor('XWiki'))
    #set ($discard = $feed.setTitle($services.localization.render('search.rss', [$text])))
    #set ($discard = $feed.setDescription($services.localization.render('search.rss', [$text])))
    #set ($discard = $feed.setLanguage($xcontext.language))
    #set ($discard = $feed.setCopyright($xwiki.getXWikiPreference('copyright')))
    {{{$xwiki.feed.getFeedOutput($feed, $xwiki.getXWikiPreference('feed_type', 'rss_2.0'))}}}
  #else

    {{include reference="XWiki.Results"/}}

    #if($selectedSpace == '')
      #set($rssURL = $xwiki.getURL($doc.fullName, 'view', "xpage=plain&amp;amp;outputSyntax=plain&amp;amp;text=${utext}" ))
    #else
      #set($rssURL = $xwiki.getURL($doc.fullName, 'view', "xpage=plain&amp;amp;outputSyntax=plain&amp;space=${selectedSpace}&amp;text=${utext}"))
    #end
    {{html}}
      &lt;a href="${rssURL}" class='hasIcon iconRSS'&gt;$services.localization.render('search.rss', ["[$escapetool.xml($text)]"])&lt;/a&gt;
    {{/html}}
  #end
#end
{{/velocity}}</content>
</xwikidoc>
