'use strict';var XWiki=function(d){function f(){var a=$("body").down("#stepButtons button[value=CANCEL]");a&&a.observe("click",function(b){window.confirm("$escapetool.javascript($services.localization.render('platform.extension.distributionWizard.cancelConfirmation'))")||b.stop()});$("body").select("form.previousUI").each(function(b){new h(b)});$("extension.flavor")&&new d.FlavorOrDefaultUIStep(!0);$("extension.defaultui")&&new d.FlavorOrDefaultUIStep(!1);$("extension.defaultui.wikis")&&new k;$("extension.outdatedextensions")&&
new d.OutdatedExtensionsStep;return!0}d.FlavorOrDefaultUIStep=Class.create({initialize:function(a){this.isFlavorStep=a;document.observe("xwiki:extension:statusChanged",this._onExtensionStatusChanged.bindAsEventListener(this));require(["jquery"],function(b){b(".xwiki-flavor-picker").on("xwiki:flavorpicker:updated",function(){var c=b(this).find('input[name="flavor"]:checked').length;b('input[name="installFlavor"]').prop("disabled",0===c)})})},_onExtensionStatusChanged:function(a){var b=$("stepButtons")&&
$("stepButtons").select("button");if(b){a=a.memo.extension;var c=a.getStatus();"loading"==c?b.invoke("disable"):(b.invoke("enable"),(this.isFlavorStep||"$services.distribution.getUIExtensionId().id"==a.getId()&&"$services.distribution.getUIExtensionId().version.value"==a.getVersion())&&this._onDefaultUiExtensionStatusChanged(b,c))}},_onDefaultUiExtensionStatusChanged:function(a,b){"installed"==b?(a[0].up().removeClassName("hidden"),a[1].up().addClassName("hidden"),a[2].up().addClassName("hidden")):
(a[0].up().addClassName("hidden"),a[1].up().removeClassName("hidden"),a[2].up().removeClassName("hidden"))}});var g=Class.create({initialize:function(){this.container=$("distributionWizard");document.observe("xwiki:extension:statusChanged",this._updateStepButtons.bind(this));document.observe("xwiki:dom:updated",function(a){a.memo.elements.each(function(b){(b.down(".extension-item")||b.hasClassName("extensionUpdater"))&&this._updateStepButtons()}.bind(this))}.bindAsEventListener(this))},_updateStepButtons:function(){var a=
$("stepButtons");a&&(a=a.select("button"),this.container.down(".extension-item.extension-item-loading")||this.container.down(".job-log-item-loading")?(a.invoke("disable"),this._disable&&this._disable()):(a.invoke("enable"),this._enable&&this._enable(),this._isCompleted&&this._isCompleted()?(a[0].up().removeClassName("hidden"),a[1].up().addClassName("hidden"),a[2].up().addClassName("hidden")):(a[0].up().addClassName("hidden"),a[1].up().removeClassName("hidden"),a[2].up().removeClassName("hidden"))))}});
d.OutdatedExtensionsStep=Class.create(g,{_enable:function(){var a=this.container.down(".checkForUpdates");a&&a.up(".xHint").show()},_disable:function(){var a=this.container.down(".checkForUpdates");a&&a.up(".xHint").hide()},_isCompleted:function(){var a=0,b=0;this.container.select(".invalidExtensions").each(function(c){c=c.childElements();a+=c.length;b+=c.filter(function(e){return e.hasClassName("extension-item-installed")}).length});return b==a}});var k=Class.create(g,{_isCompleted:function(){return!0}}),
h=Class.create({initialize:function(a){this.form=a;this.versionList=a.down("select.versions");this.versionInput=a.down('input[name="previousUIVersion"]');this.idInput=a.down('input[name="previousUIId"]');this.recommendedUI=a.next(".recommendedUI").hide();this.upgradeQuestion=a.previous("form.upgradeQuestion");document.observe("xwiki:extension:statusChanged",this._onPreviousUIExtensionStatusChanged.bindAsEventListener(this));a.down(".button").observe("click",this._resolvePreviousUIExtension.bindAsEventListener(this));
a=a.down(".button.secondary");a.up().removeClassName("hidden");a.observe("click",this._hidePreviousUIForm.bindAsEventListener(this));this.versionList&&this._enhancePreviousUIInput();this.upgradeQuestion&&this._enhanceUpgradeQuestion()},_enhancePreviousUIInput:function(){var a=new Element("input",{type:"image","class":"icon",src:'$xwiki.getSkinFile("icons/silk/pencil.png")',alt:"$escapetool.javascript($services.localization.render('platform.extension.distributionWizard.uiStepPreviousUIAdvancedInputHint'))",
title:"$escapetool.javascript($services.localization.render('platform.extension.distributionWizard.uiStepPreviousUIAdvancedInputHint'))"}),b=a.cloneNode();this.versionList.insert({after:a}).up("dd").removeClassName("hidden").addClassName("versionSelector").previous().removeClassName("hidden");this.versionInput.up("dd").hide().previous().hide();this.idInput.hide().up("dd").previous().down(".xHint").hide();this.idInput.insert({after:b}).insert({after:new Element("span")});this.idInput.up("dd").hide().previous().hide();
this.versionList.observe("change",this._onSelectPreviousUIVersion.bind(this));a.observe("click",this._switchToAdvancedPreviousUIInput.bindAsEventListener(this));b.observe("click",this._switchToAdvancedPreviousUIInput.bindAsEventListener(this))},_enhanceUpgradeQuestion:function(){this.upgradeQuestion.removeClassName("hidden").down(".button").observe("click",function(a){a.stop();this.upgradeQuestion.hide();this.form.enable().show().focusFirstElement()}.bindAsEventListener(this)).activate();this.upgradeQuestion.down(".button.secondary").observe("click",
this._hidePreviousUIForm.bindAsEventListener(this));this.form.hide()},_onSelectPreviousUIVersion:function(){var a=this.versionList.options[this.versionList.selectedIndex];this.versionInput.value=a.value;this.idInput.next().update(a.title).up("dd").show().previous().show();this.idInput.value=a.title},_switchToAdvancedPreviousUIInput:function(a){a.stop();this.versionList.up("dd").hide().previous().hide();this.idInput.next().hide().next().hide();this.versionInput.up("dd").show().previous().show();this.idInput.show().up("dd").show().previous().show().down(".xHint").show();
a.element().previous()==this.versionList?this.versionInput.activate():this.idInput.activate()},_hidePreviousUIForm:function(a){a&&a.stop();this.form.hide();this.upgradeQuestion&&this.upgradeQuestion.hide();this.recommendedUI.show()},_resolvePreviousUIExtension:function(a){a.stop();var b=this.form.serialize(!0);new Ajax.Request(this.form.action,{parameters:{extensionId:b.previousUIId,extensionVersion:b.previousUIVersion,extensionNamespace:"wiki:"+b.wiki,hideExtensionDetails:!0},onCreate:function(){this.form.disable();
var c=this.form.down(".buttons").next();c&&c.remove()}.bind(this),onSuccess:function(c){c=(new Element("div")).update(c.responseText);var e=c.down(".extension-item");e?e.down('button[name="extensionAction"][value="install"]')?(this.previousUIExtensionId={id:b.previousUIId,version:b.previousUIVersion},this._displayPreviousUIExtension(e)):this._hidePreviousUIForm():this.form.enable().insert(c)}.bind(this),on0:function(c){c.request.options.onFailure(c)},onFailure:function(){this.form.enable();new d.widgets.Notification("$escapetool.javascript($services.localization.render('platform.extension.distributionWizard.uiStepPreviousUIRequestFailed'))",
"error")}.bind(this)})},_displayPreviousUIExtension:function(a){var b=(new Element("div",{"class":"xHint"})).update("$escapetool.javascript($services.localization.render('platform.extension.distributionWizard.uiStepPreviousUIHint'))".escapeHTML());b=(new Element("div")).insert(b).insert(a);this.form.hide().insert({after:b});document.fire("xwiki:dom:updated",{elements:[b]});a=a.down('button[name="extensionAction"][value="install"]');a.update("$escapetool.javascript($services.localization.render('platform.extension.distributionWizard.uiStepPreviousUIRepairLabel'))".escapeHTML());
a.title="$escapetool.javascript($services.localization.render('platform.extension.distributionWizard.uiStepPreviousUIRepairHint'))";a.value="repairXAR";a.activate();a.insert({after:new Element("input",{type:"hidden",name:"form_token",value:document.documentElement.getAttribute("data-xwiki-form-token")})})},_onPreviousUIExtensionStatusChanged:function(a){a=a.memo.extension;var b=a.getStatus();if(this.previousUIExtensionId&&a.getId()==this.previousUIExtensionId.id&&a.getVersion()==this.previousUIExtensionId.version&&
b&&b.startsWith("installed")){this.form.next().remove();for(a=this.form.next();a;a=a.show().next());(a=this.recommendedUI.down(".extension-item"))&&a._extensionBehaviour.refresh({hideExtensionDetails:!0})}}});d.domIsLoaded&&f()||document.observe("xwiki:dom:loaded",f);return d}(XWiki||{});

//# sourceMappingURL=distribution.min.js.map
