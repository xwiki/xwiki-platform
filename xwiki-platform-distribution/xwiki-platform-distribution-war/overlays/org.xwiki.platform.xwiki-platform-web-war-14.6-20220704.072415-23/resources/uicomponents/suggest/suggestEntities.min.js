/*
 #set ($paths = {
  'xwiki-suggestPages': $xwiki.getSkinFile('uicomponents/suggest/suggestPages.js', true),
  'xwiki-suggestAttachments': $xwiki.getSkinFile('uicomponents/suggest/suggestAttachments.js', true)
})
#[[*/
'use strict';(function(l){require.config({paths:l});define("xwiki-entityTypeSwitch",["jquery","xwiki-suggestPages","xwiki-suggestAttachments"],function(c){var e=function(a){var b=g(a);a.on("change",function(d){h(b,a.val())});h(b,a.val())},g=function(a){var b=a.data("propertyGroup");if(b){a=a.parents();for(var d=0;d<a.length;d++){var k=c(a[d]).find(".entityReferenceString[data-property-group]").filter(function(){return c(this).data("propertyGroup")===b});if(0<k.length)return k}}return c()},f={DOCUMENT:"suggestPages",
ATTACHMENT:"suggestAttachments"},h=function(a,b){a.each(function(){this.selectize&&this.selectize.destroy()});(b=f[b])&&"function"===typeof a[b]&&a[b].call(a)};c.fn.switchEntityType=function(){return this.not(".initialized").each(function(){e(c(this).addClass("initialized"))})}});require(["jquery","xwiki-entityTypeSwitch","xwiki-events-bridge"],function(c){var e=function(g,f){c(f&&f.elements||document).find(".entityType[data-property-group]").switchEntityType()};c(document).on("xwiki:dom:updated",
e);c(e)})}).apply("]]#",$jsontool.serialize([$paths]));

//# sourceMappingURL=suggestEntities.min.js.map
