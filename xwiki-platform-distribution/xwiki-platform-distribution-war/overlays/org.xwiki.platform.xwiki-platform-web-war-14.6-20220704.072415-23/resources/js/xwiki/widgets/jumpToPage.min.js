/*
 #set ($paths = {
  'js': {
    'xwiki-suggestPages': $xwiki.getSkinFile('uicomponents/suggest/suggestPages.js', true)
  },
  'css': {
    'selectize': [
      $services.webjars.url('selectize.js', 'css/selectize.bootstrap3.css'),
      $xwiki.getSkinFile('uicomponents/suggest/xwiki.selectize.css', true)
    ]
  }
})
#set ($l10n = {
  'inputTooltip': $services.localization.render('core.viewers.jump.dialog.input.tooltip'),
  'viewLabel': $services.localization.render('core.viewers.jump.dialog.actions.view'),
  'viewTooltip': $services.localization.render('core.viewers.jump.dialog.actions.view.tooltip'),
  'editLabel': $services.localization.render('core.viewers.jump.dialog.actions.edit'),
  'editTooltip': $services.localization.render('core.viewers.jump.dialog.actions.edit.tooltip'),
  'content': $services.localization.render('core.viewers.jump.dialog.content')
})
#set ($shortcuts = {
  'show': 'core.viewers.jump.shortcuts',
  'view': 'core.viewers.jump.dialog.actions.view.shortcuts',
  'edit': 'core.viewers.jump.dialog.actions.edit.shortcuts'
})
#foreach ($entry in $shortcuts.entrySet())
  ## An action can have multiple  keyboard shortcuts associated (comma separated).
  #set ($values = $services.localization.render($entry.value).split('\s*,\s*'))
  #foreach ($value in $values)
    ## Each keyboard shortcut is wrapped in quotes because it was (poorly) designed to be injected direcly in JavaScript,
    ## which we don't do anymore. So we need to remove the quotes.
    #set ($discard = $values.set($foreach.index, $value.replaceAll('(^[''"])|([''"]$)', '')))
  #end
  #set ($discard = $entry.setValue($values))
#end
#[[*/
'use strict';(function(l,c,f){require.config({paths:l.js});window.XWiki=window.XWiki||{};var g=XWiki.widgets=XWiki.widgets||{};if(XWiki.widgets.ModalPopup){g.JumpToPage=Class.create(g.ModalPopup,{urlTemplate:(new XWiki.Document("__document__","__space__")).getURL("__action__"),initialize:function($super){var b=new Element("div");this.input=new Element("input",{type:"text",id:"jmp_target",title:c.inputTooltip});this.input.placeholder=this.input.title;b.appendChild(this.input);this.viewButton=this.createButton("button",
c.viewLabel,c.viewTooltip,"jmp_view");this.editButton=this.createButton("button",c.editLabel,c.editTooltip,"jmp_edit","secondary");var a=new Element("div",{"class":"buttons"});a.appendChild(this.viewButton);a.appendChild(this.editButton);b.appendChild(a);$super(b,{show:{method:this.showDialog,keys:f.show},view:{method:this.openDocument,keys:f.view,options:{propagate:!0}},edit:{method:this.openDocument,keys:f.edit}},{title:c.content,extraClassName:"jump-dialog",verticalPosition:"top"});this.shortcuts.close.options=
{propagate:!0}},createDialog:function($super,b){Event.observe(this.viewButton,"click",this.openDocument.bindAsEventListener(this,"view"));Event.observe(this.editButton,"click",this.openDocument.bindAsEventListener(this,"edit"));$super(b);this.input.up(".xdialog-modal-container").addClassName("jump-dialog-container");var a=this;require(["jquery","xwiki-suggestPages"],function(d){l.css.selectize.forEach(function(e){d("<link/>").attr({type:"text/css",rel:"stylesheet",href:e}).appendTo("head")});var n=
function(e){var m=d(a.viewButton).add(a.editButton).find("input");!1===e?m.prop("disabled",!0):setTimeout(function(){m.prop("disabled",!1)},0)},h=function(e){n(""!==d(a.input).val())};d(a.input).on("change",h).suggestPages({maxItems:1});a.input.selectize.on("dropdown_open",n.bind(null,!1));a.input.selectize.on("dropdown_close",h);a.input.selectize.focus();h()})},showDialog:function($super){$super();this.input.selectize?(this.input.selectize.clear(),this.input.selectize.focus()):(this.input.value=
"",this.input.focus())},openDocument:function(k,b){this[(b||"view")+"Button"].down("input").disabled||(Event.stop(k),k=XWiki.Model.resolve(this.input.value,XWiki.EntityType.DOCUMENT,XWiki.currentDocument.documentReference),window.location=(new XWiki.Document(k)).getURL(b))}});function p(){return new g.JumpToPage}XWiki.domIsLoaded&&p()||document.observe("xwiki:dom:loaded",p)}else console&&console.warn&&console.warn("[JumpToPage widget] Required class missing: XWiki.widgets.ModalPopup")}).apply("]]#",
$jsontool.serialize([$paths,$l10n,$shortcuts]));

//# sourceMappingURL=jumpToPage.min.js.map
