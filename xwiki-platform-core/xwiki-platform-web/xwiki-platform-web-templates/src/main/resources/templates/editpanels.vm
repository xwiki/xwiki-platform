## ---------------------------------------------------------------------------
## See the NOTICE file distributed with this work for additional
## information regarding copyright ownership.
##
## This is free software; you can redistribute it and/or modify it
## under the terms of the GNU Lesser General Public License as
## published by the Free Software Foundation; either version 2.1 of
## the License, or (at your option) any later version.
##
## This software is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
## Lesser General Public License for more details.
##
## You should have received a copy of the GNU Lesser General Public
## License along with this software; if not, write to the Free
## Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
## 02110-1301 USA, or see the FSF site: http://www.fsf.org.
## ---------------------------------------------------------------------------
#if($isInServletMode)
## This template is necessary so that different skins can use different edit Panels.
## Thus each skin is allowed to override the editpanelsvars.vm file.
#template('editpanelsvars.vm')
#if ($editor == 'wiki')
  #set ($editorPanels = $editorPanelsWiki)
#elseif ($editor == 'wysiwyg')
  #set ($editorPanels = $editorPanelsWysiwyg)
#elseif ($editor == 'object')
  #set ($editorPanels = $editorPanelsObjects)
#elseif ($editor == 'class')
  #set ($editorPanels = $editorPanelsClass)
#elseif ($editor == 'rights')
  #set ($editorPanels = $editorPanelsRights)
#elseif ($editor == 'history')
  #set ($editorPanels = $editorPanelsHistory)
#end
#if ($!editorPanels != '')
  #set ($editorPanels = $editorPanels.split(','))
  <div id="editPanels" class="panels editor">

  ## Convert the list of panels to panel (UIExtension) IDs
  #set ($panelIDList = [])
  #foreach ($panel in $editorPanels)
    #set ($panelDocumentReference = $services.model.resolveDocument($panel.trim(), 'currentmixed'))
    #set ($panelStringReference = $services.model.serialize($panelDocumentReference, 'default'))
    #set ($discard = $panelIDList.add($panelStringReference))
  #end

  ## Get the Panel UIExtensions by filtering on the above computed panel ID list
  #set ($panelUIExtensions = $services.uix.getExtensions('platform.panels', {'select' : "$stringtool.join($panelIDList, ',')"}))

  ## Display each configured panel that the current user has view on
  #foreach ($panelUIExtension in $panelUIExtensions)
    ## We need to set this because the panelheader macro used in panels needs it
    #set ($paneldoc = $xwiki.getDocument($panelUIExtension.id))
    #if ($paneldoc && $!xwiki.hasAccessLevel('view', $paneldoc))
      $services.rendering.render($panelUIExtension.execute(), "xhtml/1.0")
    #end
  #end

  </div>
#end
#end