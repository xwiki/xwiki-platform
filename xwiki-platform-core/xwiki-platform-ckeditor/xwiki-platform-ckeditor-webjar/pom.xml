<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.xwiki.platform</groupId>
    <artifactId>xwiki-platform-ckeditor</artifactId>
    <version>16.5.0-SNAPSHOT</version>
  </parent>
  <packaging>webjar</packaging>
  <artifactId>xwiki-platform-ckeditor-webjar</artifactId>
  <name>XWiki Platform - CKEditor - Webjar</name>
  <description>Packages CKEditor code in a WebJar.</description>
  <properties>
    <!-- Name to display by the Extension Manager -->
    <xwiki.extension.name>CKEditor WebJar</xwiki.extension.name>
    <!-- Category for the Extension Manager -->
    <xwiki.extension.category>webjar</xwiki.extension.category>
    <!-- This module has been moved from XWiki Contrib to platform. -->
    <xwiki.extension.previousIds>org.xwiki.contrib:application-ckeditor-webjar</xwiki.extension.previousIds>
    <!-- The list of extensions that this module either replaces or bundles:
      * this module replaces the CKEditor Integration WebJar extension from XWiki Contrib
      * this module bundles the CKEditor code (so it can be seen as a replacement for both the CKEditor default WebJar
        and the CKEditor node module) -->
    <xwiki.extension.features>
      org.xwiki.contrib:application-ckeditor-webjar,
      org.webjars:ckeditor/${ckeditor.version},
      org.webjars.npm:ckeditor/${ckeditor.version},
      ckeditor4/${ckeditor.version}
    </xwiki.extension.features>

    <!-- The path to the folder where we clone the CKEditor sources. -->
    <ckeditor.path>${project.build.directory}/ckeditor4-${ckeditor.version}</ckeditor.path>
    <ckeditor.builder.path>${ckeditor.path}/dev/builder</ckeditor.builder.path>
  </properties>
  <build>
    <plugins>
      <!-- Download the CKEditor sources for the version (tag) we want to use. -->
      <plugin>
        <groupId>com.googlecode.maven-download-plugin</groupId>
        <artifactId>download-maven-plugin</artifactId>
        <version>1.9.0</version>
        <executions>
          <!-- Download the CKEditor sources for the version (tag) we want to use. -->
          <execution>
            <id>download-ckeditor-sources</id>
            <!-- Make sure this execution is not used by default (you need to call it explicitly in your pom). -->
            <phase>generate-resources</phase>
            <goals>
              <goal>wget</goal>
            </goals>
            <configuration>
              <url>https://github.com/ckeditor/ckeditor4/archive/${ckeditor.version}.zip</url>
              <unpack>true</unpack>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <!-- Copy the build configuration to the CKEditor sources. -->
          <execution>
            <id>copy-ckeditor-build-config</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${ckeditor.builder.path}</outputDirectory>
              <resources>
                <resource>
                  <directory>src/main/config</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
          <!-- Copy the output of the CKEditor builder to the expected WebJar location. -->
          <execution>
            <id>copy-ckeditor-resources</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${webjar.outputDirectory}</outputDirectory>
              <resources>
                <resource>
                  <directory>${ckeditor.builder.path}/release/ckeditor</directory>
                  <excludes>
                    <exclude>config.js</exclude>
                    <exclude>styles.js</exclude>
                  </excludes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <overwrite>true</overwrite>
        </configuration>
      </plugin>
      <!-- Add support for passing JVM arguments when running CKBuilder. -->
      <plugin>
        <groupId>com.google.code.maven-replacer-plugin</groupId>
        <artifactId>replacer</artifactId>
        <version>1.5.3</version>
        <executions>
          <execution>
            <id>add-jvm-args</id>
            <phase>process-resources</phase>
            <goals>
              <goal>replace</goal>
            </goals>
            <configuration>
              <file>${ckeditor.builder.path}/build.sh</file>
              <replacements>
                <replacement>
                  <!-- The arguments that appear before -jar are passed to the JVM while those that appear after are
                    passed to the Java application (CKBuilder in this case). -->
                  <token>java -jar</token>
                  <value>java \$JVM_ARGS -jar</value>
                </replacement>
              </replacements>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Build the CKEditor. -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>build-ckeditor</id>
            <!-- Use a phase after compile because the Clirr Maven Plugin executes all the phases up to compile
                 twice. -->
            <phase>process-classes</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>${ckeditor.builder.path}/build.sh</executable>
              <environmentVariables>
                <!-- See https://github.com/ckeditor/ckbuilder/issues/34 -->
                <JVM_ARGS>--add-exports java.desktop/sun.java2d=ALL-UNNAMED</JVM_ARGS>
              </environmentVariables>
              <arguments>
                <!-- Exclude from release all plugins/skins that are not specified in build-config. -->
                <argument>--skip-omitted-in-build-config</argument>
                <!-- Turn off warnings about syntax errors on Internet Explorer, like trailing commas. -->
                <argument>--no-ie-checks</argument>
                <!-- We don't use the generated archives. -->
                <argument>--no-zip</argument>
                <argument>--no-tar</argument>
                <!-- Uncomment to leave the JavaScript code as is (merge but not minify). -->
                <!--<argument>-&#45;leave-js-unminified</argument>-->
                <!-- Uncomment to see all the available configuration options. -->
                <!--<argument>-&#45;help</argument>-->
              </arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
