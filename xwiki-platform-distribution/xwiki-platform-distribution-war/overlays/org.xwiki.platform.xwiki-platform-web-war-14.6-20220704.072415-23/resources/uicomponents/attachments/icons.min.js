/*
 #set ($discard = "#mimetypeimg('' '')")
#set ($discard = $mimetypeMap.put('attachment', ['attach', 'attachment']))
#foreach ($map in [$mimetypeMap, $extensionMap])
  #foreach ($entry in $map.entrySet())
    #set ($discard = $entry.value.set(0, $services.icon.getMetaData($entry.value.get(0))))
    #set ($translationKey = "core.viewers.attachments.mime.$entry.value.get(1)")
    #set ($discard = $entry.value.set(1, $services.localization.render($translationKey)))
  #end
#end
#[[*/
'use strict';(function(d,f){define("xwiki-attachments-icon",[],function(){var g=function(a){return new Promise(b=>{var c=new FileReader;c.onload=function(e){b(e.target.result)};c.readAsDataURL(a)})},h=function(a,b){b=b.substring(b.lastIndexOf(".")+1);if(d.hasOwnProperty(a))return d[a][0];if(f.hasOwnProperty(b))return f[b][0];a=a.substring(0,a.indexOf("/")+1);return d.hasOwnProperty(a)?d[a][0]:d.attachment[0]};return{getIcon:function(a){if("string"===typeof a.mimeType&&"image/"===a.mimeType.substring(0,
6)){var b=a.xwikiRelativeUrl;if("/"===b.substring(0,1)||"http://"===b.substring(0,7))b+=(0>b.indexOf("?")?"?":"&")+"width=48";var c={iconSetType:"IMAGE",url:b};a.file&&(c.promise=g(a.file).then(function(e){return c.url=e}));return c}return h(a.mimeType,a.name)},loadIcon:function(a){return new Promise(b=>{if("IMAGE"===a.icon.iconSetType){var c=new Image;c.onload=function(){b(a)};c.src=a.icon.url}else b(a)})}}})}).apply("]]#",$jsontool.serialize([$mimetypeMap,$extensionMap]));

//# sourceMappingURL=icons.min.js.map
