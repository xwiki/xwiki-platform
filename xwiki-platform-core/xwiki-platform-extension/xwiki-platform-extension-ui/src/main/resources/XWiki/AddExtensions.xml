<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.1">
  <web>XWiki</web>
  <name>AddExtensions</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1321658413000</creationDate>
  <parent>XWiki.AdminSheet</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1416392387000</date>
  <contentUpdateDate>1416392387000</contentUpdateDate>
  <version>1.1</version>
  <title>$services.localization.render('admin.xwiki.addextensions')</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{template name="extension.vm" output="false"/}}

{{velocity}}
## HTML cleaner messes up the content of the legend tag.
{{html clean="false"}}
#if ($isAjaxRequest)
  #handleExtensionRequest()
#else
  &lt;div class="full column"&gt;
  #displayExtensionSearchBar()

  #if ($request.extensionId &amp;&amp; $request.extensionVersion)
    ## Advanced search.
    #handleExtensionRequest()
  #else
    ## Simple search.
    #set ($noResultsMessageKey = 'extensions.search.noResults')
    #set ($paginationParams = {})
    ## Dump whitespace generated by the pagination macro
    #set ($discard = "#paginationPrepareParams($paginationParams)")
    #set ($repository = $extensionManager)
    #if ($request.repo)
      #set ($selectedRepositoryId = $request.repo)
    #end
    #if ("$!selectedRepositoryId" != '')
      #set ($repository = $extensionManager.getRepository($selectedRepositoryId))
      #if ("$!request.search" == '')
        ## Fetch extensions from known repositories.
        #if ($selectedRepositoryId == 'core')
          #set($extensions = $services.extension.core.getCoreExtensions())
        #elseif ($selectedRepositoryId == 'installed')
          #if ($xcontext.isMainWiki())
            #set($extensions = $services.extension.installed.getInstalledExtensions())
          #else
            #set($extensions = $services.extension.installed.getInstalledExtensions($extensionNamespace))
          #end
        #elseif ($selectedRepositoryId == 'local')
          #set($extensions = $services.extension.local.getLocalExtensions())
        #end
        #if ($extensions)
          #set ($totalHits = $extensions.size())
          #if ($totalHits == 0)
            #set ($noResultsMessageKey = "extensions.search.repository.${selectedRepositoryId}.empty")
          #end
          ## All extensions from the specified repository have been fetched. We need to display only the current page.
          #set ($extensions = $extensions.subList($paginationParams.firstItem, $mathtool.min($extensions.size(), $mathtool.add($paginationParams.firstItem, $paginationParams.itemsPerPage))))
        #end
      #end
    #end
    #if (!$extensions)
      #if ($selectedRepositoryId == 'installed' &amp;&amp; !$xcontext.isMainWiki())
        ## When searching for installed extensions we need to take the namespace into account.
        #set ($extensions = $services.extension.installed.repository.searchInstalledExtensions("$!request.search",
          $extensionNamespace, $paginationParams.firstItem, $paginationParams.itemsPerPage))
      #else
        #set ($extensions = $repository.search("$!request.search", $paginationParams.firstItem, $paginationParams.itemsPerPage))
      #end
      #set ($totalHits = $extensions.totalHits)
    #end
    #if (!$extensions.iterator().hasNext())
      &lt;div class="box infomessage"&gt;$services.localization.render($noResultsMessageKey, ["&lt;em&gt;$!escapetool.xml($request.search)&lt;/em&gt;"])&lt;/div&gt;
    #else
      #if ($totalHits &amp;&amp; $totalHits &gt; $paginationParams.itemsPerPage)
        #set ($hasPagination = true)
        #set ($paginationParams.totalItems = $totalHits)
        #set ($paginationParams.url = $doc.getURL($xcontext.action, $request.getQueryString().replaceAll('(^|&amp;)firstIndex=[^&amp;]++&amp;?', '$1')))
        #pagination($paginationParams)
      #end
      #foreach($extension in $extensions)
        #displayExtension($extension)
      #end
      #if ($hasPagination)
        #set ($discard = $paginationParams.put('position', 'bottom'))
        #pagination($paginationParams)
      #end
    #end
  #end
  &lt;/div&gt;
#end
{{/html}}
{{/velocity}}</content>
  <attachment>
    <filename>icon.png</filename>
    <author>xwiki:XWiki.Admin</author>
    <date>1326128399000</date>
    <version>1.1</version>
    <comment/>
    <content></content>
    <filesize>8529</filesize>
  </attachment>
  <object>
    <name>XWiki.AddExtensions</name>
    <number>0</number>
    <className>XWiki.UIExtensionClass</className>
    <guid>d7757510-18cc-41db-be75-e95204c75b25</guid>
    <class>
      <name>XWiki.UIExtensionClass</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <content>
        <disabled>0</disabled>
        <name>content</name>
        <number>3</number>
        <prettyName>Extension Content</prettyName>
        <rows>10</rows>
        <size>40</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </content>
      <extensionPointId>
        <disabled>0</disabled>
        <name>extensionPointId</name>
        <number>1</number>
        <prettyName>Extension Point ID</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </extensionPointId>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>2</number>
        <prettyName>Extension ID</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parameters>
        <disabled>0</disabled>
        <name>parameters</name>
        <number>4</number>
        <prettyName>Extension Parameters</prettyName>
        <rows>10</rows>
        <size>40</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </parameters>
      <scope>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>scope</name>
        <number>5</number>
        <prettyName>Extension Scope</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>wiki=Current Wiki|user=Current User|global=Global</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </scope>
    </class>
    <property>
      <content/>
    </property>
    <property>
      <extensionPointId>org.xwiki.platform.panels.Applications.more</extensionPointId>
    </property>
    <property>
      <name>platform.panels.addApplications</name>
    </property>
    <property>
      <parameters>label=$services.localization.render('extensions.applicationsPanel.install')
## The Application Panel checks only if the current user has the right to view the specified target page. Since simple
## users have by default view right on the XWiki.XWikiPreferences page but only admins can actually install
## applications, we need to check admin rights here in order to hide this entry for simple users.
target=#if ($xwiki.hasWikiAdminRights())XWiki.XWikiPreferences#end
targetQueryString=editor=globaladmin&amp;section=XWiki.AddExtensions
icon=icon:bullet_go</parameters>
    </property>
    <property>
      <scope>wiki</scope>
    </property>
  </object>
</xwikidoc>
