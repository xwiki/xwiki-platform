<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.2" reference="Mail.SendMailStatusJSON" locale="">
  <web>Mail</web>
  <name>SendMailStatusJSON</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>Mail.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title>Send Mail Status JSON</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity wiki="false"}}
#if("$!{request.outputSyntax}" == 'plain' || "$!{request.xpage}" == 'plain')
  $response.setContentType('application/json')
  ##==================================================
  ## Offset = item # at which to start displaying data
  ##==================================================
  #set($offset = $numbertool.toNumber($request.get('offset')).intValue())
  ## Offset starts from 0 in velocity and 1 in javascript
  #set($offset = $offset - 1)
  #if(!$offset || $offset &lt; 0)
    #set($offset = 0)
  #end
  ##==============================
  ## Limit = # of items to display
  ##==============================
  #set($limit = $numbertool.toNumber($request.get('limit')).intValue())
  #if(!$limit)
    #set ($limit = 15)
  #end
  ##===============
  ## Sort direction
  ##===============
  #set($order = "$!request.sort")
  #if($order != '')
    #if($order == 'error')
      #set($order = 'errorSummary')
    #end
    #set($orderDirection = true)
    #if("$!{request.get('dir')}" != '' &amp;&amp; "$!{request.get('dir')}" != 'asc')
      #set($orderDirection = false)
    #end
  #else
    #set($order = "date")
    #set($orderDirection = false)
  #end
  ## ===========
  ## Filter Data
  ## ===========
  #set ($filterMap = {})
  #set ($filterId = "$!{request.get('batchId')}")
  #if("$!{filterId}" != '')
    #set ($discard = $filterMap.put('batchId', "%${filterId.trim()}%"))
  #end
  #set($filterType = "$!{request.get('type')}")
  #if("$!{filterType}" != '')
    #set ($discard = $filterMap.put('type', "%${filterType.trim()}%"))
  #end
  #set($filterRecipients = "$!{request.get('recipients')}")
  #if("$!{filterRecipients}" != '')
    #set ($discard = $filterMap.put('recipients', "%${filterRecipients.trim()}%"))
  #end
  #set($filterStatus = "$!{request.get('state')}")
  #if("$!{filterStatus}" != '')
    #set ($discard = $filterMap.put('state', "%${filterStatus.trim()}%"))
  #end
  #if ($xcontext.isMainWiki())
    #set($filterWiki = "$!{request.get('wiki')}")
    #if("$!{filterWiki}" != '')
      #set ($discard = $filterMap.put('wiki', "%${filterWiki.trim()}%"))
    #end
  #end
  #set($filterError = "$!{request.get('error')}")
  #if("$!{filterError}" != '')
    #set ($discard = $filterMap.put('errorSummary', "%${filterError.trim()}%"))
  #end
  #set ($totalrows = $services.mail.storage.count($filterMap))
  #set ($results = $services.mail.storage.load($filterMap, $offset, $limit, $order, $orderDirection))
  ## ===============
  ## JSON Generation
  ## ===============
  #set ($rows = [])
  #set ($resultmap = {
    'totalrows': $totalrows,
    'matchingtags': {},
    'tags' : [],
    'returnedrows': $results.size(),
    'offset': $numbertool.toNumber($request.offset).intValue(),
    'sort': $request.sort,
    'dir': $request.dir,
    'reqNo': $numbertool.toNumber($request.reqNo).intValue(),
    'rows': $rows })
  #foreach($item in $results)
    #set ($row = {
        'doc_viewable' : true,
        'date' : $xwiki.formatDate($!item.date),
        'batchId' : $!item.batchId,
        'type' : $!item.type,
        'recipients' : $!item.recipients,
        'state' : $!item.state,
        'error' : $!item.errorSummary })
    #if ($xcontext.isMainWiki())
      #set($discard  = $row.put('wiki', $!item.wiki))
    #end
    #if("$!item.state" != 'sent')
      #set($discard  = $row.put('actions', "&lt;form action='' enctype='multipart/form-data' method='post'&gt;
              &lt;input name='mail_id' value='$!item.messageId' type='hidden'/&gt;
              &lt;input name='batch_id' value='$!item.batchId' type='hidden'/&gt;
              &lt;span class='btn-group text-left'&gt;&lt;input name='mailsendingaction_resend' value='${escapetool.xml($services.localization.render('Mail.SendMailStatus_livetable.resend'))}' class='btn btn-primary btn-sm' type='submit'&gt;
&lt;/span&gt;
            &lt;/form&gt;" ))
    #else
      #set($discard  = $row.put('actions', ''))
    #end
    #set($discard = $rows.add($row))
  #end
  $jsontool.serialize($resultmap)
#else
  This page should be called by Mail.SendMailStatus with parameters.
#end
{{/velocity}}</content>
</xwikidoc>
