<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc>
  <web>AppWithinMinutes</web>
  <name>CreateApplication</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <parent>AppWithinMinutes.WebHome</parent>
  <creator>xwiki:XWiki.Admin</creator>
  <author>xwiki:XWiki.Admin</author>
  <customClass/>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <creationDate>1322209154000</creationDate>
  <date>1322394814000</date>
  <contentUpdateDate>1322394814000</contentUpdateDate>
  <version>1.1</version>
  <title>$services.localization.render('platform.appwithinminutes.appNamePageTitle')</title>
  <defaultTemplate/>
  <validationScript/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.0</syntaxId>
  <hidden>true</hidden>
  <object>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <name>AppWithinMinutes.CreateApplication</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>25bc0a83-b45b-4646-bf2b-a62ac7384f1d</guid>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>var XWiki = (function (XWiki) {

XWiki.DeferredUpdater = Class.create({
  initialize : function(updatable) {
    this.elapsedHandler = updatable.onUpdate.bind(updatable);
    this.updatable = updatable;
  },
  deferUpdate : function() {
    if (this.timer) {
      clearTimeout(this.timer);
    }
    this.timer = setTimeout(this.elapsedHandler, 500);
  }
});

XWiki.AppNameValidator = Class.create({
  initialize : function(input, submitButton) {
    this.input = input;
    this.deferredUpdater = new XWiki.DeferredUpdater(this);
    var updateScheduler = this._scheduleUpdate.bindAsEventListener(this);
    ['keypress', 'paste', 'cut'].each(function(eventType) {
      input.observe(eventType, updateScheduler);
    }.bind(this));

    this.submitButton = submitButton;
    this.submitButton.observe('click', this._onSubmit.bindAsEventListener(this));

    this.preview = new Element('div', {'class': 'appName-preview'});
    this.input.insert({after: this.preview});

    var previousDT = input.up('dd').previous();
    this.errorMessage = previousDT.down('xErrorMsg');
    if (!this.errorMessage) {
      this.errorMessage = new Element('span', {'class': 'xErrorMsg'});
      previousDT.insert(this.errorMessage.hide());
    }
  },
  _onSubmit : function(event) {
    if (!this.input._validated) {
      event.stop();
      this._scheduleUpdate();
    }
  },
  _scheduleUpdate : function(event) {
    if(!this.input._validated || [9, 13, 35, 36, 37, 38, 39, 40].indexOf(event.keyCode) &lt; 0) {
      this.input._validated = false;
      this.deferredUpdater.deferUpdate();
    }
  },
  _onValidate : function(response) {
    this.preview.removeClassName('loading').update(response.responseText);
    var error = this.preview.down('.xErrorMsg');
    this.input._validated = !error;
    this._showError(error ? error.remove().firstChild.nodeValue : '');
  },
  _showError : function(message) {
    if (message) {
      this.input.addClassName('xErrorField').focus();
      this.errorMessage.update(message.escapeHTML()).show();
    } else {
      this.input.removeClassName('xErrorField');
      this.errorMessage.hide();
    }
  },
  onUpdate : function() {
    if (this.input.value == '') {
      this._onValidate({
        responseText: '&lt;span class="xErrorMsg"&gt;$escapetool.javascript($services.localization.render('platform.appwithinminutes.appNameEmptyError'))&lt;/span&gt;'
      });
    } else {
      this.preview.addClassName('loading');
      new Ajax.Request('$doc.getURL('get')', {
        method: 'get',
        parameters: {'appName': this.input.value},
        onSuccess: this._onValidate.bind(this)
      });
    }
  }
});

function init() {
  var appNameInput = $('appName');
  appNameInput &amp;&amp; new XWiki.AppNameValidator(appNameInput, $('wizard-next'));
  return !!appNameInput;
}
(XWiki.domIsLoaded &amp;&amp; init()) || document.observe('xwiki:dom:loaded', init);

return XWiki;
}(XWiki || {}));</code>
    </property>
    <property>
      <name>Code</name>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>currentPage</use>
    </property>
  </object>
  <object>
    <class>
      <name>XWiki.StyleSheetExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <name>AppWithinMinutes.CreateApplication</name>
    <number>0</number>
    <className>XWiki.StyleSheetExtension</className>
    <guid>3782ad9f-9bfd-43f2-9310-c196092a0ad1</guid>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>#template('colorThemeInit.vm')
.wizard-help {
  background-color: $theme.backgroundSecondaryColor;
  border-bottom: 1px solid $theme.borderColor;
  color: $theme.textSecondaryColor;
  float: right;
  font-size: 0.857em;
  margin: 0 0 2em 2em;
  padding: 1em;
  width: 17em;
}

.wizard-help strong {
  color: $theme.textColor;
}

.wizard-body {
  margin-right: 19em;
}

.appName-preview dl {
  color: $theme.textSecondaryColor;
  font-size: 0.8em;
  margin-bottom: 1em;
}

.appName-preview dl tt {
  color: $theme.textColor;
}

.appName-preview dt {
  font-weight: normal;
  margin-top: 1em;
}

.appName-preview dt:after {
  content: ":"
}</code>
    </property>
    <property>
      <name>Style</name>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>currentPage</use>
    </property>
  </object>
  <content>{{include reference="AppWithinMinutes.WizardStep"/}}

{{velocity output="false"}}
#macro(showStep)
  {{html wiki="true"}}
  #appWizardHeader(1)
  (% class="wizard-help" %)
  (((
    **$services.localization.render('platform.appwithinminutes.wizardStepHelpTitle')** $services.localization.render('platform.appwithinminutes.wizardStepHelpDescription')
    (% class="steps vertical" %)
    #foreach($index in [1, 2, 3])
      * (% class="number" %)$index(%%) (% class="name" %)$services.localization.render("platform.appwithinminutes.wizardStep${index}Name")(%%)
        (% class="description" %)$services.localization.render("platform.appwithinminutes.wizardStep${index}Description")
    #end
  )))
  &lt;form action="" method="post" class="xform wizard-body"&gt;
    ; &lt;label for="appName"&gt;$services.localization.render('platform.appwithinminutes.appNameLabel')&lt;/label&gt;
      (% class="xHint" %)$services.localization.render('platform.appwithinminutes.appNameHint')
    : &lt;input type="text" id="appName" name="appName" /&gt;
    #appWizardFooter(1)
  &lt;/form&gt;
  {{/html}}
#end

#macro(getAppDescriptor $appName)
  #set($appDescriptorClassName = 'AppWithinMinutes.LiveTableClass')
  #set($appDescriptorStatement = "from doc.object($appDescriptorClassName) as obj where doc.space = :space")
  #set($appDescriptors = $services.query.xwql($appDescriptorStatement).bindValue('space', $appName).execute())
  #if($appDescriptors.size() &gt; 0)
    #set($appDescriptor = $xwiki.getDocument($appDescriptors.get(0)))
  #end
#end

#macro(processStep)
  ## Check if the application already exists.
  #getAppDescriptor($request.appName)
  #if($appDescriptor)
    ## Edit an existing application. Use the configured class name.
    #set($classStringRef = $appDescriptor.getObject($appDescriptorClassName).getProperty('class').value)
    ## The class string reference is relative to the document holding the application descriptor.
    #set($classRef = $services.model.resolveDocument($classStringRef, 'explicit', $appDescriptor.documentReference))
  #else
    ## Create a new application. Use the default class name.
    #set($classRef = $services.model.createDocumentReference($doc.wiki, "${request.appName}Code", "#toXMLName($request.appName)Class"))
  #end
  #set($queryString = 'wizard=true')
  #if(!$xwiki.exists($classRef))
    #set($classTitle = "$request.appName Class")
    #set($queryString = "$queryString&amp;editor=inline&amp;template=AppWithinMinutes.ClassTemplate&amp;parent=${request.appName}.WebHome&amp;title=$escapetool.url($classTitle)")
  #end
  $response.sendRedirect($xwiki.getURL($classRef, 'edit', $queryString))
#end

#macro(validateAppName $appName)
  #getAppDescriptor("$!appName")
  #if($appDescriptor)
    ## Edit an existing application.
    #set($appHomeRef = $appDescriptor.documentReference)
    #set($classStringRef = $appDescriptor.getObject($appDescriptorClassName).getProperty('class').value)
    ## The class string reference is relative to the document holding the application descriptor.
    #set($appClassRef = $services.model.resolveDocument($classStringRef, 'explicit', $appDescriptor.documentReference))
  #else
    ## Create a new application.
    #set($className = "#toXMLName($appName)")
    #if($className == '')
      (% class="xErrorMsg" %)$services.localization.render('platform.appwithinminutes.appNameInvalidClassNameError')
    #end
    #set($appHomeRef = $services.model.createDocumentReference($doc.wiki, $appName, 'WebHome'))
    #set($appClassRef = $services.model.createDocumentReference($doc.wiki, "$!{appName}Code", "$!{className}Class"))
  #end
  #set($appHomeURL = $stringtool.removeEnd($xwiki.getDocument($appHomeRef).getExternalURL(), 'WebHome'))
  ; $services.localization.render('platform.appwithinminutes.appNamePreviewHomePageUrlLabel')
  : {{{$!appHomeURL}}}
  ; $services.localization.render('platform.appwithinminutes.appNamePreviewDataSpaceLabel')
  : {{{$doc.wiki}}} » {{{$appName}}}
  ; $services.localization.render('platform.appwithinminutes.appNamePreviewCodeSpaceLabel')
  : {{{$doc.wiki}}} » {{{${appName}Code}}}
  ; $services.localization.render('platform.appwithinminutes.appNamePreviewClassReferenceLabel')
  : {{{$appClassRef.wikiReference.name}}} » {{{$appClassRef.lastSpaceReference.name}}} » {{{$appClassRef.name}}}
  #if($appDescriptor || $xwiki.exists($appHomeRef) || $xwiki.exists($appClassRef))

    {{warning}}$services.localization.render('platform.appwithinminutes.appNameIsUsedWarning'){{/warning}}
  #end
#end
{{/velocity}}

{{velocity}}
#if("$!request.appName" != '')
  #if($xcontext.action == 'get')
    #validateAppName($request.appName)
  #else
    ## CSRF protection is not needed because this step only redirects to the next one passing data in the query string.
    #processStep()
  #end
#else
  #showStep()
#end
{{/velocity}}</content>
</xwikidoc>
