<?xml version="1.0" encoding="UTF-8" ?>
<!-- Licensed to the Apache Software Foundation (ASF) under one or more contributor 
	license agreements. See the NOTICE file distributed with this work for additional 
	information regarding copyright ownership. The ASF licenses this file to 
	You under the Apache License, Version 2.0 (the "License"); you may not use 
	this file except in compliance with the License. You may obtain a copy of 
	the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required 
	by applicable law or agreed to in writing, software distributed under the 
	License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS 
	OF ANY KIND, either express or implied. See the License for the specific 
	language governing permissions and limitations under the License. -->
<config>
	<abortOnConfigurationError>${solr.abortOnConfigurationError:true}</abortOnConfigurationError>

	<luceneMatchVersion>LUCENE_40</luceneMatchVersion>

	<dataDir>${solr.data.dir:}</dataDir>

	<!-- The DirectoryFactory to use for indexes. solr.StandardDirectoryFactory, 
		the default, is filesystem based and tries to pick the best implementation 
		for the current JVM and platform. One can force a particular implementation 
		via solr.MMapDirectoryFactory, solr.NIOFSDirectoryFactory, or solr.SimpleFSDirectoryFactory. 
		solr.RAMDirectoryFactory is memory based, not persistent, and doesn't work 
		with replication. -->
	<directoryFactory name="DirectoryFactory"
		class="${solr.directoryFactory:solr.RAMDirectoryFactory}" />

	<indexConfig>
	</indexConfig>

	<updateHandler class="solr.DirectUpdateHandler2">
	</updateHandler>

	<query>
		<maxBooleanClauses>1024</maxBooleanClauses>
		<filterCache class="solr.FastLRUCache" size="512"
			initialSize="512" autowarmCount="0" />
		<queryResultCache class="solr.LRUCache" size="512"
			initialSize="512" autowarmCount="0" />
		<documentCache class="solr.LRUCache" size="512"
			initialSize="512" autowarmCount="0" />
		<enableLazyFieldLoading>true</enableLazyFieldLoading>
		<queryResultWindowSize>20</queryResultWindowSize>
		<queryResultMaxDocsCached>200</queryResultMaxDocsCached>
		<listener event="newSearcher" class="solr.QuerySenderListener">
			<arr name="queries">
				<!-- <lst><str name="q">solr</str><str name="sort">price asc</str></lst> 
					<lst><str name="q">rocks</str><str name="sort">weight asc</str></lst> -->
			</arr>
		</listener>
		<listener event="firstSearcher" class="solr.QuerySenderListener">
			<arr name="queries">
				<lst>
					<str name="q">static firstSearcher warming in solrconfig.xml</str>
				</lst>
			</arr>
		</listener>
		<useColdSearcher>false</useColdSearcher>
		<maxWarmingSearchers>2</maxWarmingSearchers>
	</query>

	<requestDispatcher>
		<requestParsers enableRemoteStreaming="true"
			multipartUploadLimitInKB="2048000" />
		<httpCaching never304="true" />
	</requestDispatcher>

	<requestHandler name="/select" class="solr.SearchHandler">
		<!-- default values for query parameters can be specified, these will be 
			overridden by parameters in the request -->
		<lst name="defaults">
			<str name="echoParams">explicit</str>
			<int name="rows">10</int>
			<str name="df">text</str>
		</lst>
	</requestHandler>

  <requestHandler name="/update" class="solr.UpdateRequestHandler" />

	<requestHandler name="/update/javabin" class="solr.UpdateRequestHandler" />

	<requestDispatcher>
		<requestParsers enableRemoteStreaming="true"
			multipartUploadLimitInKB="2048000" />

		<httpCaching never304="true" />
	</requestDispatcher>


	<requestHandler name="/analysis/field" startup="lazy"
		class="solr.FieldAnalysisRequestHandler" />

	<requestHandler name="/analysis/document"
		class="solr.DocumentAnalysisRequestHandler" startup="lazy" />

	<!-- Term Vector Component http://wiki.apache.org/solr/TermVectorComponent -->
	<searchComponent name="tvComponent" class="solr.TermVectorComponent" />

	<!-- A request handler for demonstrating the term vector component This 
		is purely as an example. In reality you will likely want to add the component 
		to your already specified request handlers. -->
	<requestHandler name="/tvrh" class="solr.SearchHandler"
		startup="lazy">
		<lst name="defaults">
			<str name="df">text</str>
			<bool name="tv">true</bool>
		</lst>
		<arr name="last-components">
			<str>tvComponent</str>
		</arr>
	</requestHandler>


	<!-- Terms Component http://wiki.apache.org/solr/TermsComponent A component 
		to return terms and document frequency of those terms -->
	<searchComponent name="terms" class="solr.TermsComponent" />

	<!-- A request handler for demonstrating the terms component -->
	<requestHandler name="/terms" class="solr.SearchHandler"
		startup="lazy">
		<lst name="defaults">
			<bool name="terms">true</bool>
		</lst>
		<arr name="components">
			<str>terms</str>
		</arr>
	</requestHandler>
    
</config>