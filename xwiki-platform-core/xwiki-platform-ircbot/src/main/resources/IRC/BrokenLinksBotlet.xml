<?xml version="1.0" encoding="UTF-8"?>
<xwikidoc>
<web>IRC</web>
<name>BrokenLinksBotlet</name>
<language></language>
<defaultLanguage>en</defaultLanguage>
<translation>0</translation>
<parent>IRC.IRCBot</parent>
<creator>XWiki.Admin</creator>
<author>XWiki.Admin</author>
<customClass></customClass>
<contentAuthor>XWiki.Admin</contentAuthor>
<creationDate>1323347519000</creationDate>
<date>1323360543000</date>
<contentUpdateDate>1323360543000</contentUpdateDate>
<version>1.1</version>
<title>Broken Links Botlet</title>
<template></template>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment></comment>
<minorEdit>false</minorEdit>
<syntaxId>xwiki/2.0</syntaxId>
<hidden>false</hidden>
<object>
<class>
<name>IRC.IRCBotlet</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<description>
<disabled>0</disabled>
<name>description</name>
<number>1</number>
<picker>0</picker>
<prettyName>Description</prettyName>
<size>30</size>
<unmodifiable>0</unmodifiable>
<validationMessage></validationMessage>
<validationRegExp></validationRegExp>
<classType>com.xpn.xwiki.objects.classes.StringClass</classType>
</description>
<usage>
<disabled>0</disabled>
<name>usage</name>
<number>2</number>
<picker>0</picker>
<prettyName>Usage</prettyName>
<size>30</size>
<unmodifiable>0</unmodifiable>
<validationMessage></validationMessage>
<validationRegExp></validationRegExp>
<classType>com.xpn.xwiki.objects.classes.StringClass</classType>
</usage>
</class>
<name>IRC.BrokenLinksBotlet</name>
<number>0</number>
<className>IRC.IRCBotlet</className>
<guid>fb10b368-77a4-4f48-bfc4-36278c96ba2c</guid>
<property>
<description>When a broken link is found in the wiki display a notification on IRC</description>
</property>
<property>
<usage>Called automatically when a broken link is found in the wiki</usage>
</property>
</object>
<object>
<class>
<name>XWiki.XWikiRights</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<allow>
<defaultValue>1</defaultValue>
<disabled>0</disabled>
<displayFormType>select</displayFormType>
<displayType>allow</displayType>
<name>allow</name>
<number>4</number>
<prettyName>Allow/Deny</prettyName>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</allow>
<groups>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>1</multiSelect>
<name>groups</name>
<number>1</number>
<prettyName>Groups</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>5</size>
<unmodifiable>0</unmodifiable>
<usesList>1</usesList>
<classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
</groups>
<levels>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>1</multiSelect>
<name>levels</name>
<number>2</number>
<prettyName>Levels</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>3</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
</levels>
<users>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>1</multiSelect>
<name>users</name>
<number>3</number>
<prettyName>Users</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>5</size>
<unmodifiable>0</unmodifiable>
<usesList>1</usesList>
<classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
</users>
</class>
<name>IRC.BrokenLinksBotlet</name>
<number>0</number>
<className>XWiki.XWikiRights</className>
<guid>f0a22f0a-0a9a-44b6-9b60-51c62297e450</guid>
<property>
<allow>1</allow>
</property>
<property>
<groups>XWiki.XWikiAdminGroup,</groups>
</property>
<property>
<levels>view,edit,comment,delete</levels>
</property>
<property>
<users></users>
</property>
</object>
<content>{{velocity}}
$doc.use('IRC.IRCBotlet')
$doc.getValue('description')

Usage: $doc.getValue('usage')
{{/velocity}}

= Status =

{{include document="IRC.IRCBotlet"/}}

{{groovy}}
import com.xpn.xwiki.*
import com.xpn.xwiki.api.*
import org.xwiki.component.descriptor.*
import com.xpn.xwiki.web.*
import org.xwiki.observation.*
import org.xwiki.observation.event.*

class BrokenLinksBotlet implements EventListener, IRCBotlet
{
    def context

    void init(context) 
    {
        this.context  = context
    }

    String getName()
    {
        return "invalidurlevent"
    }

    List&lt;Event&gt; getEvents()
    {
        return [Class.forName("org.xwiki.rendering.transformation.linkchecker.InvalidURLEvent").getConstructor().newInstance()]
    }

    List handleMessage(String channel, String sender, String login, String hostname, String message, XWiki xwiki, XWikiContext context)
    {
        // Don't do anything
    }

    void onEvent(Event event, java.lang.Object source, java.lang.Object data)
    {
        def bot =  context.getEngineContext().getAttribute("ircbot")
        if (bot == null) {
            return
        }

        def url = source.get('url')
        def reference = source.get('source')
        def responseCode = source.get('state')?.getResponseCode()
        bot.sendMessage(bot.getChannels()[0], "Invalid link found ${url} on page ${reference} (code = ${responseCode})")
    }
}

// Only allow to start/stop if the LinkChecker transformation is active
if (!services.get("linkchecker") || !services.get("rendering")?.getDefaultTransformationNames().contains('linkchecker')) {
    println "This Botlet can only be started/stopped if the Link Checker transformation is available and active."
    return
}

if (request.action == "start" || xcontext.get("botAction") == "start") {

    // Register against the component manager as an IRCBotlet
    DefaultComponentDescriptor descriptor = new DefaultComponentDescriptor()
    descriptor.setImplementation(BrokenLinksBotlet.class)
    descriptor.setRole(IRCBotlet.class)
    descriptor.setRoleHint("invalidurlevent")
    Utils.getComponentManager().registerComponent(descriptor)

    // Lookup the component to initialize it
    def botlet = Utils.getComponent(IRCBotlet.class, "invalidurlevent")
    botlet.init(xcontext.getContext())
    def ircconfigdoc = xwiki.getDocument("IRC.IRCConfig")
    ircconfigdoc.use(doc.fullName)

    // Register against the Observation Manager
    def observation = Utils.getComponent(ObservationManager.class)
    observation.removeListener("invalidurlevent")
    observation.addListener(botlet)

} else if (request.action == "stop" || xcontext.get("botAction") == "stop") {

    // Unregister from the Observation Manager
    def observation = Utils.getComponent(ObservationManager.class)
    observation.removeListener("invalidurlevent")

    // Unregister from the component manager
    Utils.getComponentManager().unregisterComponent(IRCBotlet.class, "invalidurlevent")
}
{{/groovy}}

{{groovy}}
import com.xpn.xwiki.web.*
import org.xwiki.observation.*

// Only allow to start/stop if the LinkChecker transformation is active
if (!services.get("linkchecker") || !services.get("rendering")?.getDefaultTransformationNames().contains('linkchecker')) {
    return
}

def buttonText
def action
def observation = Utils.getComponent(ObservationManager.class)
if (observation.getListener("invalidurlevent") != null) {
    buttonText = "Stop the Botlet"
    action = "stop"
    println "Status: Botlet is started."
} else {
    buttonText = "Start the Botlet"
    action = "start"
    println "Status: Botlet is not started."
}
println ""
println "{{html}}&lt;form method='get'&gt;"
println "  &lt;input type='submit' class='button' value='${buttonText}'/&gt;"
println "  &lt;input type='hidden' name='action' value='${action}'/&gt;"
println "&lt;/form&gt;{{/html}}"
{{/groovy}}

= Botlet parameters =

No parameters.

= Code =

{{groovy}}
import org.xwiki.rendering.block.*

// Pretty print the first Groovy macro content.
println "{{code language=\"none\"}}${doc.getDocument().getXDOM().getChildrenByType(MacroBlock.class, true).get(2).getContent()}{{/code}}"
{{/groovy}}</content></xwikidoc>
