<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.3" reference="XWiki.DeletedAttachments" locale="">
  <web>XWiki</web>
  <name>DeletedAttachments</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>Main.AllDocs</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title>$services.localization.render('platform.index.attachmentsTrash')</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.0</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity}}
#set($dateFormat = 'yyyy MMMM d, HH:mm')
#if(!$request.list)
$xwiki.ssx.use('XWiki.DeletedAttachments')##
$xwiki.jsx.use('XWiki.DeletedAttachments', {'minify' : 'false'})##
##
#set($columns = ['datt.filename', 'datt.docName', 'datt.date', 'datt.deleter', 'actions'])
#set($columnsProperties = {
    'datt.filename'  : { 'type' : 'text', 'size' : 10 },
    'datt.docName'   : { 'type' : 'text', 'size' : 10 },
    'datt.date'      : { 'type' : 'date'},
    'datt.deleter'   : { 'type' : 'text', 'size' : 10 },
    'actions'        : { 'type' : 'text', 'filterable' : false, 'sortable' : false }
  })##
#set($options = {
    'url'               : "$xwiki.getURL('XWiki.DeletedAttachments', 'view', 'list=1&amp;xpage=plain&amp;outputSyntax=plain')",
    'callback'          : 'XWiki.index.trash.attachments.displayEntry',
    'translationPrefix' : 'platform.index.trashAttachments.'
  })##
##
##
##
{{html wiki="true" clean="false"}}
&lt;div class="hidden"&gt;
#livetable('attachmentTrash' $columns $columnsProperties $options)
&lt;/div&gt;
{{/html}}

{{html wiki="true" clean="false"}}
&lt;noscript&gt;

  #set($deletedAttachments = $services.query.hql('select count(datt.id) from DeletedAttachment as datt').execute().get(0))
  #if($deletedAttachments == 0)

    {{info}}$services.localization.render('platform.index.trashAttachmentsEmpty'){{/info}}

  #else
  #macro(displayDeletedAttachment $id)
    #set($datt = $xwiki.getDeletedAttachment("$id"))
    #set($originalAttachment = $datt.getAttachment())
    #set($originalDocument = $xwiki.getDocument($datt.docName))
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="$originalDocument.getAttachmentRevisionURL($originalAttachment.filename, $originalAttachment.version, "rid=${datt.id}").replaceAll('&amp;', '&amp;amp;')"&gt;$escapetool.xml($datt.filename)&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="$originalDocument.getURL()"&gt;$escapetool.xml($originalDocument.plainTitle) ($escapetool.xml(${originalDocument.fullName}))&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;$xwiki.formatDate($datt.getDate(), $dateFormat)&lt;/td&gt;
      &lt;td&gt;$xwiki.getUserName($datt.getDeleter())&lt;/td&gt;
      &lt;td class="itemActions"&gt;
        #if($datt.canDelete())
          &lt;a href="${originalDocument.getAttachmentURL($datt.filename, 'delattachment', "trashId=${datt.id}&amp;amp;xredirect=$escapetool.url($!request.getRequestURI())?$escapetool.url($!request.getQueryString())")}" class="tool delete" title="$services.localization.render('platform.index.trashAttachmentsActionsDeleteTooltip')"&gt;$services.localization.render('platform.index.trashAttachmentsDeleteText')&lt;/a&gt;
        #end
      &lt;/td&gt;
    &lt;/tr&gt;
  #end
##
  #if("$!{request.view}" == '')
    #set($queryParams = '')
  #else
    #set($queryParams = "view=$!{escapetool.url($request.view)}")
  #end
  #set($paginationParameters = {
    'totalItems' : $services.query.hql('select count(datt.id) from DeletedAttachment as datt').execute().get(0),
    'defaultItemsPerPage' : 15,
    'url' : $doc.getURL('view', $queryParams)
  })
  #pagination($paginationParameters)
  &lt;table id="searchResults" class="xwiki-livetable xwiki-livetable-display"&gt;
    &lt;thead class="xwiki-livetable-display-header"&gt;&lt;tr&gt;
      &lt;th scope="col" class="xwiki-livetable-display-header-text selected asc"&gt;$services.localization.render('platform.index.trashAttachments.datt.filename')&lt;/th&gt;
      &lt;th scope="col" class="xwiki-livetable-display-header-text"&gt;$services.localization.render('platform.index.trashAttachments.datt.docName')&lt;/th&gt;
      &lt;th scope="col" class="xwiki-livetable-display-header-text"&gt;$services.localization.render('platform.index.trashAttachments.datt.date')&lt;/th&gt;
      &lt;th scope="col" class="xwiki-livetable-display-header-text"&gt;$services.localization.render('platform.index.trashAttachments.datt.deleter')&lt;/th&gt;
      &lt;th scope="col" class="xwiki-livetable-display-header-text"&gt;$services.localization.render('platform.index.trashAttachments.actions')&lt;/th&gt;
    &lt;/tr&gt;&lt;/thead&gt;
    &lt;tbody class="xwiki-livetable-display-body"&gt;
    #set ($query = $services.query.hql('select datt.id from DeletedAttachment as datt order by datt.filename asc'))
    #foreach($item in $query.setLimit($paginationParameters.itemsPerPage).setOffset($paginationParameters.firstItem).execute())
      #displayDeletedAttachment($item)
    #end
    &lt;/tbody&gt;
  &lt;/table&gt;
  #set($discard = $paginationParameters.put('position', 'bottom'))
  #pagination($paginationParameters)
  #end ## deletedAttachments != 0
&lt;/noscript&gt;
{{/html}}##
#end## !$request.list
{{/velocity}}

{{velocity output="false"}}
## ============================================================================================
## This page is called from live table via Ajax with the argument xpage=plain. It returns a
## set of results serialized in JSON.
## @programming This service page needs to be saved by a user with the programming access level
## to work as expected
## ============================================================================================
#if ($request.list &amp;&amp; $request.xpage == 'plain')
  #set ($offset = $numbertool.toNumber($request.get('offset')).intValue())
  ## offset starts from 0 in velocity and 1 in javascript
  #set ($offset = $offset - 1)
  #if (!$offset || $offset &lt; 0)
    #set ($offset = 0)
  #end
  #set ($limit = $numbertool.toNumber($request.get('limit')).intValue())
  #if (!$limit)
    #set ($limit = 15)
  #end
  #set ($filenameFilter = $request.get('datt.filename'))
  #set ($docNameFilter = $request.get('datt.docName'))
  #set ($dateFilter = $request.get('datt.date'))
  #set ($deleterFilter = $request.get('datt.deleter'))
  #set ($sql = '')
  #set ($params = {})
  #if ("$!filenameFilter" != '')
    #set ($sql = "and lower(datt.filename) like '%${filenameFilter.trim().toLowerCase()}%' ")
  #end
  #if ("$!docNameFilter" != '')
    #set ($sql = "and lower(datt.docName) like '%${docNameFilter.trim().toLowerCase()}%' ")
  #end
  #if ("$!dateFilter" != '')
    #set ($dates = $dateFilter.split('-'))
    #if ($dates.size() == 2)
      ## Date range matching
      #set ($sql = "${sql} and datt.date between :startDate and :endDate ")
      #set ($discard = $params.put('startDate', $datetool.toDate($numbertool.toNumber($dates[0]))))
      #set ($discard = $params.put('endDate', $datetool.toDate($numbertool.toNumber($dates[1]))))
    #else
      ## Single value matching
      #set ($sql = "${sql} and upper(str(datt.date)) like upper(str(:date)) ")
      #set ($discard = $params.put('date', $dateFilter))
    #end
  #end
  #if ("$!deleterFilter" != '')
    #set ($sql = $sql + "and lower(datt.deleter) like '%${deleterFilter.trim().toLowerCase()}%' ")
  #end
  #if ("$!request.sort" != '')
    #set ($order = $request.sort)
  #else
    #set ($order = 'datt.id')
  #end
  #if ("$!request.dir" != '')
    #set ($dir = $request.dir)
  #else
    #set ($dir = 'asc')
  #end
  #set ($selectSql = "select datt.id, $order from DeletedAttachment as datt where 1=1 " + $sql + " order by $order $dir")
  #set ($countSql = "select count(*) from DeletedAttachment as datt where 1=1 " + $sql)
  #set ($items = $services.query.hql($selectSql).bindValues($params).setLimit($limit).setOffset($offset).execute())
  #set ($totalItems = $services.query.hql($countSql).bindValues($params).execute().get(0))
  #set ($json = {
    'totalrows': $totalItems,
    'returnedrows': $items.size(),
    'offset': $mathtool.add($offset, 1),
    'reqNo': $request.reqNo,
    'query': $selectSql,
    "rows": []
  })
  #foreach ($item in $items)
    #set ($datt = $xwiki.getDeletedAttachment("$item.get(0)"))
    #set ($originalDocument = $xwiki.getDocument($datt.docName))
    #set ($row = {
      'filename': $datt.filename,
      'docName': $datt.docName,
      'documentUrl': $xwiki.getURL($datt.docName),
      'canDelete': $datt.canDelete(),
      'canRestore': $datt.canRestore(),
      'restoreUrl': $xwiki.getAttachmentURL($datt.docName, $datt.filename),
      'date': $xwiki.formatDate($datt.date, $dateFormat),
      'deleter': $datt.deleter,
      'deletername': $xwiki.getUserName($datt.deleter, false),
      'deleterurl': $xwiki.getURL($datt.deleter, 'view')
    })
    #set ($row.alreadyExists = "$!originalDocument.getAttachment($datt.filename)" != '')
    #if ($originalDocument)
      #set ($row.title = $originalDocument.plainTitle)
      #set ($row.deleteUrl = $originalDocument.getAttachmentURL($datt.filename, 'delattachment', $escapetool.url({
        'trashId': $datt.id,
        'form_token': $services.csrf.token
      })))
      #set ($originalAttachment = $datt.getAttachment())
      #if ($originalAttachment)
        #set ($row.url = $originalDocument.getAttachmentRevisionURL($originalAttachment.filename, $originalAttachment.version, $escapetool.url({
          'rid': $datt.id
        })))
      #end
    #else
      #set ($row.title = $datt.docName)
    #end
    #set ($discard = $json.rows.add($row))
  #end
  #jsonResponse($json)
#end
{{/velocity}}</content>
  <object>
    <name>XWiki.DeletedAttachments</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>2b1a4426-e37b-40ba-9ad3-4055a466da0a</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>// Make sure the XWiki.index.trash.attachments 'namespace' exists.
if (typeof XWiki == "undefined") {
  XWiki = new Object();
}
if (typeof XWiki.index == "undefined") {
  XWiki.index = new Object();
}
if (typeof XWiki.index.trash == "undefined") {
  XWiki.index.trash = new Object();
}
if (typeof XWiki.index.trash.attachments == "undefined") {
  XWiki.index.trash.attachments = new Object();
}

/**
 * Callback function used by the DeletedAttachments livetable for generating the HTML code needed to display an entry.
 * 
 * @param row the JSON data corresponding to the entry to be displayed
 * @param i the index of the row in the list of entries
 * @param table the LiveTable javascript object
 */
XWiki.index.trash.attachments.displayEntry = function (row, i, table) {
  var tr = new Element('tr'); // The resulting table row
  var file = new Element('a', {'href' : row.url}).update(row.filename);
  tr.appendChild(new Element('td').update(file));
  var doc = new Element('a', {'href' : row.documentUrl}).update(row.title);
  doc.appendChild(document.createTextNode(' (' + row.docName + ')'));
  tr.appendChild(new Element('td').update(doc));
  tr.appendChild(new Element('td').update(row.date));
  var deleter = new Element('a', {'href' : row.deleterurl}).update(row.deletername);
  tr.appendChild(new Element('td').update(deleter));
  var actions = new Element('td', {'class' : 'itemActions'});
  if(row.canDelete) {
    var delete_ = new Element('a', {
        'href' : row.deleteUrl,
        'class' : "tool delete",
        'title' : "$services.localization.render('platform.index.trashAttachmentsActionsDeleteTooltip')"
      }).update("$services.localization.render('platform.index.trashAttachmentsActionsDeleteText')");
    actions.appendChild(delete_);
    delete_.observe('click', XWiki.index.trash.attachments.confirmDelete.bindAsEventListener(delete_, table, i));
  }
  tr.appendChild(actions);
  return tr;
}

/**
 * Event listener, called when clicking a delete version link. It displays a confirmation box, speeding up the two-step
 * deletion process.
 * 
 * @param event the link activation event
 * @param table the LiveTable javascript object
 * @param rowIdx the index of the row corresponding to the entry to be deleted
 */
XWiki.index.trash.attachments.confirmDelete = function(event, table, rowIdx) {
  event.stop();
  if (this.disabled) {
    // Do nothing if the button was already clicked and it's waiting for a response from the server.
    return;
  } else {
    new XWiki.widgets.ConfirmedAjaxRequest(
      /* Ajax request URL */
      this.href + '&amp;confirm=1' + (Prototype.Browser.Opera ? "" : "&amp;ajax=1"),
      /* Ajax request parameters */
      {
        onCreate : function() {
          // Disable the button, to avoid a cascade of clicks from impatient users
          this.disabled = true;
        }.bind(this),
        onSuccess : function(table, rowIdx) {
          // Remove the corresponding HTML element from the UI and update the livetable
          table.deleteRow(rowIdx);
        }.bind(this, table, rowIdx),
        // This is an expected 404, returned when the document has been successfully deleted and is no longer found
        on404 : function(response, table, rowIdx) {
          response.request.options.onSuccess(table, rowIdx);
        }.bindAsEventListener(this, table, rowIdx),
        onComplete : function() {
          // In the end: re-enable the button
          this.disabled = false;
        }.bind(this)
      },
      /* Interaction parameters */
      {
         confirmationText: "$services.localization.render('core.recyclebin.completelyDeleteConfirm')",
         progressMessageText : "$services.localization.render('platform.index.trashAttachmentsDeleteInProgress')",
         successMessageText : "$services.localization.render('platform.index.trashAttachmentsDeleteDone')",
         failureMessageText : "$services.localization.render('platform.index.trashAttachmentsDeleteFailed')"
      }
      );
  }
}
/*
 * The livetable is hidden when javascript is disabled, so that an alternative &lt;noscript&gt; table is displayed.
 * Re-display it when the document loads and Javascript is available.
 */
document.observe('xwiki:dom:loaded', function() {
  if ($('attachmentTrash')) {
    $('attachmentTrash').up('.hidden').removeClassName('hidden');
  }
});</code>
    </property>
    <property>
      <name/>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>XWiki.DeletedAttachments</name>
    <number>0</number>
    <className>XWiki.StyleSheetExtension</className>
    <guid>33778e4e-5d86-472e-b065-c9c87b5b282e</guid>
    <class>
      <name>XWiki.StyleSheetExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <contentType>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>contentType</name>
        <number>6</number>
        <prettyName>Content Type</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>CSS|LESS</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </contentType>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>.itemActions .tool {
  width: 16px;
  height: 16px;
  margin: 0 2px;
  float: left;
  text-indent: -1000em;
  overflow: hidden;
  background: transparent no-repeat center center;
}
.itemActions .delete {
  background-image: url("$xwiki.getSkinFile('icons/silk/cross.png')") !important;
}
.itemActions .restore {
   background-image: url("$xwiki.getSkinFile('icons/silk/arrow_refresh.png')") !important;
}
.itemActions .cannot-restore {
   background-image: url("$xwiki.getSkinFile('icons/silk/page_error.png')") !important;
}</code>
    </property>
    <property>
      <contentType>CSS</contentType>
    </property>
    <property>
      <name/>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>XWiki.DeletedAttachments</name>
    <number>0</number>
    <className>XWiki.XWikiRights</className>
    <guid>8d68ba7a-72d3-4f9f-a984-c7c47139b0a8</guid>
    <class>
      <name>XWiki.XWikiRights</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <allow>
        <defaultValue>1</defaultValue>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>allow</displayType>
        <name>allow</name>
        <number>4</number>
        <prettyName>Allow/Deny</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </allow>
      <groups>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>groups</name>
        <number>1</number>
        <picker>1</picker>
        <prettyName>Groups</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
      </groups>
      <levels>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>1</multiSelect>
        <name>levels</name>
        <number>2</number>
        <prettyName>Levels</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>3</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
      </levels>
      <users>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>users</name>
        <number>3</number>
        <picker>1</picker>
        <prettyName>Users</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
      </users>
    </class>
    <property>
      <allow>1</allow>
    </property>
    <property>
      <groups>XWiki.XWikiAdminGroup</groups>
    </property>
    <property>
      <levels>view,edit</levels>
    </property>
    <property>
      <users/>
    </property>
  </object>
</xwikidoc>
