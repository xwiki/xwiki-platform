#macro(handleStepAction $action)
  ## Allow the current step to handle the action or to perform something before moving to the next step.
  #set ($discard = $services.distribution.renderCurrentStepToXHTML())
  ## Standard step actions are in upper case (custom step actions should be in camel case).
  #if ($action == $action.toUpperCase())
    #set ($distributionJobStatus = $services.distribution.jobStatus)
    #set ($distributionQuestion = $distributionJobStatus.question)
    #if ($distributionQuestion)
      #if ($action.endsWith('_STEP'))
        ## Action that targets the current step.
        #set ($actionToState = {
          'COMPLETE_STEP': 'COMPLETED',
          'SKIP_STEP': $NULL,
          'CANCEL_STEP': 'CANCELED'})
        #set ($discard = $distributionQuestion.step.setState($actionToState.get($action)))
      #else
        ## Action that targets the wizard (skip/cancel).
        #set ($discard = $distributionQuestion.setAction($action))
      #end
      #set ($discard = $distributionJobStatus.answered())
    #end
  #end
  $response.sendRedirect($xwiki.getURL('XWiki.Distribution', 'distribution',
    "xredirect=$!escapetool.url($request.xredirect)"))
#end

#macro(displayStep)
  #template('xwikivars.vm')
  #template('htmlheader.vm')
  $xwiki.ssfx.use('uicomponents/wizard/wizard.css', true)
  $xwiki.ssfx.use('uicomponents/extension/distribution.css', true)
  $xwiki.jsfx.use('uicomponents/extension/distribution.js', true)
  <div id="distributionWizard">
    <div class="xdialog-screen"></div>
    <div class="xdialog-box">
      <div class="xdialog-header">
#set($themeDocFullName = "$!xwiki.getUserPreference('colorTheme')")
#set($themeDoc = $xwiki.getDocument($themeDocFullName))
#set($logoname = $themeDoc.getObject('ColorThemes.ColorThemeClass').getProperty('logoImage').value)
#if("$!{logoname}" != '')
  #set($logourl = $themeDoc.getAttachmentURL($logoname))
#else
  #set($logourl = $xwiki.getSkinFile('uicomponents/extension/logo.png'))
#end
        <img alt="XWiki Logo" src="$logourl"/>
      </div>
      #set ($currentStep = $services.distribution.jobStatus.question.step)
      #set ($stepId = $currentStep.id)
      <div#if($stepId) id="$stepId"#end class="xdialog-content">
        #if ($request.extensionId)
          ## The user can get here by clicking on an extension link.
          #handleExtensionRequest()
        #else
          #displayStepHeader($stepId)
          #set ($formOpenTag = '<form action="" class="xform">')
          #set ($stepOutput = $services.distribution.renderCurrentStepToXHTML())
          #if (!$stepOutput.contains('<form') && ($stepOutput.contains('<input') || $stepOutput.contains('<select')
              || $stepOutput.contains('<textarea')))
            ## This step has input elements without a form element so we let the step buttons submit the step data.
            $formOpenTag
            $stepOutput
          #else
            ## This step contains at least one form element or no input elements so the step controls how its data is
            ## submitted.
            $stepOutput
            $formOpenTag
          #end
          #displayStepFooter()
          </form>
        #end
      </div>
    </div>
  </div>
  #template('htmlfooter.vm')
#end

#macro(displayStepHeader $currentStepId)
  <div class="wizard-header">
    #set ($currentStepIndex = $services.distribution.jobStatus.currentStateIndex)
    <h1>$services.localization.render('platform.extension.distributionWizard.stepHeading', [$currentStepIndex,
      $services.localization.render("platform.extension.distributionWizard.${currentStepId}StepTitle")])</h1>
    #set ($steps = $services.distribution.jobStatus.steps)
    ## Ignore the welcome step.
    #set ($steps = $steps.subList(1, $steps.size()))
    <ul class="steps">
      #foreach ($step in $steps)
        <li>
          #set ($stepStatus = '')
          #set ($stepNumber = $velocityCount)
          #if ($step.id == $currentStepId)
            #set ($stepStatus = " active")
          #elseif($velocityCount < $currentStepIndex)
            #set ($stepStatus = " done")
            #set ($stepNumber = '&#10004;')
          #end
          <span class="number$stepStatus">$stepNumber</span>
          <span class="name$stepStatus">
            $services.localization.render("platform.extension.distributionWizard.${step.id}StepTitle")
          </span>
        </li>
      #end
    </ul>
    <div class="clearfloats"></div>
  </div>
#end

#macro(displayStepFooter)
  <div id="stepButtons" class="wizard-footer buttons">
    #if ($request.xredirect)
      <input type="hidden" name="xredirect" value="$escapetool.xml($request.xredirect)" />
    #end
    ## Normally we shouldn't generate the buttons that are not supposed to be visible but we want to simplify the
    ## JavaScript code and to avoid duplicating the HTML by adding the buttons dynamically.
    <span class="buttonwrapper#if (!$showCompleteStepButton) hidden#end">
      <button type="submit" name="action" value="COMPLETE_STEP">
        $services.localization.render('platform.extension.distributionWizard.continueLabel')
      </button>
    </span>
    <span class="buttonwrapper#if ($showCompleteStepButton && !$canCloseWizard) hidden#end">
      <button class="secondary" type="submit" name="action" value="SKIP#if(!$canCloseWizard)_STEP#end"
        title="$escapetool.xml($services.localization.render('platform.extension.distributionWizard.skipHint'))">
        $services.localization.render('platform.extension.distributionWizard.skipLabel')</button>
    </span>
    <span class="buttonwrapper#if ($showCompleteStepButton && !$canCloseWizard) hidden#end">
      <button class="secondary" type="submit" name="action" value="CANCEL#if(!$canCloseWizard)_STEP#end"
        title="$escapetool.xml($services.localization.render('platform.extension.distributionWizard.cancelHint'))">
        $services.localization.render('platform.extension.distributionWizard.cancelLabel')</button>
    </span>
  </div>
#end

## Make sure to skip all right checking for guest user
#if (!$xcontext.userReference)
  #set ($extensionConfig = {})
  #set ($discard = $extensionConfig.put('skipCheckRight', true))
  #set ($discard = $extensionConfig.put('skipCurrentUser', true))
#end

## Keep displaying the wizard after the distribution job is done if the request targets a specific extension (e.g. if
## you follow the link to an extension dependency).
#if ($services.distribution.jobStatus.state == 'FINISHED' && "$!request.extensionId" == '')
  #set ($redirectURL = $request.xredirect)
  #if ("$!redirectURL" == '')
    #set ($redirectURL = $xwiki.getURL($services.model.resolveDocument('', 'default')))
  #end
  $response.sendRedirect($redirectURL)
#else
  ## NOTE: We use #parse instead of #template because the later currently registers the Velocity macros in a different
  ## namespace which makes them unavailable in the current wiki page or the current template. Switch back to #template
  ## when this problem is fixed because #parse doesn't allow the template to be overridden from the skin.
  #parse('extension.vm')
  #if ("$!request.action" != '')
    #handleStepAction($request.action)
  #elseif ($isAjaxRequest)
    #if ($request.extensionId)
      #handleExtensionRequest()
    #else
      ## Let the current step handle the AJAX request.
      $services.distribution.renderCurrentStepToXHTML()
    #end
  #else
    #displayStep()
  #end
#end
