###
### Rename document template
###
#if(!$xwiki.checkAccess($doc.fullName, 'delete'))
  #template("accessdenied.vm")
#elseif($doc.isNew())
  $response.setStatus(404)
  #template("startpage.vm")
  <div class="main layoutsubsection"><div id="mainContentArea">
    #error($services.localization.render('core.rename.nonexistingDocument'))
  </div></div>
  #template("endpage.vm")
#else
  #template("startpage.vm")
  ## TODO: Improve the interface, splitting the operation into more steps.
  #if("$!{step}" == '')
    #set($step = "$!{request.getParameter('step')}")
  #end
  #if("$!{step}" == '')
    #set($step = '1')
  #end
  #set($step = $mathtool.toInteger("$step"))
  <div class="main layoutsubsection">
  <div id="mainContentArea">
    #if($step == 1)
      ## Display the rename form
      #template("renameStep1.vm")
    #elseif(!${services.csrf.isTokenValid("$!{request.getParameter('form_token')}")})
      ## CSRF protection
      $response.sendRedirect("$!{services.csrf.getResubmissionURL()}")
    #else
      ## Do the rename. It's the form in renameStep1.vm page that calls this page with step=2.
      #if("$!{request.newPageName.trim()}" == '')
        $response.setStatus(400)
        #error($services.localization.render('core.rename.emptyName'))
        #template("renameStep1.vm")
      #else
        #set($newDocReference = $services.model.createDocumentReference('', $!{request.newSpaceName}, $!{request.newPageName}))
        #set($newDocReferenceAsString = $services.model.serialize($newDocReference))
        #if($xwiki.exists($newDocReference))
          $response.setStatus(409)
          #error($services.localization.render('core.rename.alreadyExists', [${escapetool.xml($newDocReferenceAsString)}, $xwiki.getURL($newDocReference)]))
          #template("renameStep1.vm")
        #elseif(!$xwiki.hasAccessLevel('edit', $xcontext.user, $newDocReferenceAsString))
          $response.setStatus(403)
          #error($services.localization.render('core.rename.targetNotWritable', [${escapetool.xml($newDocReferenceAsString)}]))
          #template('renameStep1.vm')
        #else
          #set($backlinks = [])
          #set($children = [])
          #foreach($param in $request.parameterNames)
            #if($param.startsWith("backlink_"))
              #set($discard = $backlinks.add($services.model.resolveDocument($param.substring(9))))
            #elseif($param.startsWith("child_"))
              #set($discard = $children.add($services.model.resolveDocument($param.substring(6))))
            #end
          #end
          ## Save the old document name so that we can display it in the notice box. After the rename the
          ## doc points to the new reference!
          #set ($oldDocReference = $doc.documentReference)
          $doc.rename($newDocReference, $backlinks, $children)
          #xwikimessageboxstart($services.localization.render('notice') $services.localization.render('core.rename.success', [${escapetool.xml($oldDocReference.name)}, ${escapetool.xml($doc.name)}, $doc.getURL(), ${escapetool.xml($oldDocReference.getLastSpaceReference().getName())}, ${escapetool.xml($doc.space)}]))
          #xwikimessageboxend()
        #end
      #end
    #end
<div class="clearfloats"></div>
</div>## mainContentArea
</div>## main
#template("endpage.vm")
#end
