/*
 #set ($l10nKeys = [
  'edit',
  'cancel',
  'save',
  'core.editors.saveandcontinue.notification.inprogress',
  'core.editors.saveandcontinue.notification.done',
  ['core.editors.saveandcontinue.notification.error', '<span id="saveFailureReason"></span>'],
  'web.editableProperty.editFailed',
  'web.editableProperty.viewFailed'
])
#set ($l10n = {})
#foreach ($key in $l10nKeys)
  #set ($params = $key.subList(1, $key.size()))
  #if ($params)
    #set ($discard = $l10n.put($key[0], $services.localization.render($key[0], $params)))
  #else
    #set ($discard = $l10n.put($key, $services.localization.render($key)))
  #end
#end
#set ($iconNames = ['pencil', 'cross', 'check'])
#set ($icons = {})
#foreach ($iconName in $iconNames)
  #set ($discard = $icons.put($iconName, $services.icon.renderHTML($iconName)))
#end
#[[*/
'use strict';(function(f,k){define("editableProperty",["jquery","xwiki-meta"],function(b,g){b.fn.editableProperty=function(){return this.each(l)};var l=function(){if(0===b(this).find(".editableProperty-edit").length){var a=b('<a href="#editProperty" class="editableProperty-edit"></a>');a.attr("title",f.edit);a.html(k.pencil);var c=b('<a href="#cancelProperty" class="editableProperty-cancel"></a>');c.attr("title",f.cancel);c.hide().html(k.cross);var e=b('<a href="#saveProperty" class="editableProperty-save"></a>');
e.attr("title",f.save);e.hide().html(k.check);b(this).find("label").after(a,c,e)}a=b(this).next("dd").addClass("editableProperty-viewer");b('<dd class="editableProperty-editor form"></dd>').hide().insertAfter(a)};b(document).on("click.editProperty",".editableProperty-edit",function(a){a.preventDefault();a=b(this);a.hasClass("disabled")||h(a.closest(".editableProperty"))});b(document).on("click.saveProperty",".editableProperty-save",function(a){a.preventDefault();a=b(this);a.hasClass("disabled")||
(a=a.closest(".editableProperty"),n(a).then(p.bind(null,a)))});b(document).on("click.cancelProperty",".editableProperty-cancel",function(a){a.preventDefault();a=b(this);a.hasClass("disabled")||m(a.closest(".editableProperty"))});var h=function(a){var c=a.find(".editableProperty-edit").addClass("disabled");return Promise.resolve(b.get(XWiki.currentDocument.getURL("get"),{xpage:"display",mode:"edit",property:a.data("property"),type:a.data("propertyType"),objectPolicy:a.data("objectPolicy"),language:g.locale})).then(e=>
{c.hide();a.find(".editableProperty-save, .editableProperty-cancel").show();var d=a.next(".editableProperty-viewer").hide().next(".editableProperty-editor");d.html(e).show();b(document).trigger("xwiki:dom:updated",{elements:d.toArray()});d.find(":input").filter(":visible").focus()}).catch(()=>{new XWiki.widgets.Notification(f["web.editableProperty.editFailed"],"error");return Promise.reject()}).finally(()=>{c.removeClass("disabled")})},m=function(a){a.next(".editableProperty-viewer").show().next(".editableProperty-editor").filter(":visible").trigger("xwiki:actions:cancel").hide();
a.find(".editableProperty-save, .editableProperty-cancel").hide();a.find(".editableProperty-edit").show()},n=function(a){a.find(".editableProperty-save, .editableProperty-cancel").addClass("disabled");var c=new XWiki.widgets.Notification(f["core.editors.saveandcontinue.notification.inprogress"],"inprogress"),e=a.next(".editableProperty-viewer").next(".editableProperty-editor");e.trigger("xwiki:actions:beforeSave");var d=e.find(":input").serializeArray();d.push({name:"language",value:g.locale});d.push({name:"comment",
value:"Update property "+a.data("property")});d.push({name:"minorEdit",value:!0});d.push({name:"form_token",value:g.form_token});d.push({name:"ajax",value:!0});d.push({name:"objectPolicy",value:a.data("objectPolicy")});return Promise.resolve(b.post(XWiki.currentDocument.getURL("save"),d)).then(()=>{e.trigger("xwiki:document:saved");c.replace(new XWiki.widgets.Notification(f["core.editors.saveandcontinue.notification.done"],"done"))}).catch(q=>{e.trigger("xwiki:document:saveFailed");c.replace(new XWiki.widgets.Notification(f["core.editors.saveandcontinue.notification.error"],
"error"));b("#saveFailureReason").text(q.statusText);return Promise.reject()}).finally(()=>{a.find(".editableProperty-save, .editableProperty-cancel").removeClass("disabled")})},p=function(a){return Promise.resolve(b.get(XWiki.currentDocument.getURL("get"),{xpage:"display",property:a.data("property"),type:a.data("propertyType"),objectPolicy:a.data("objectPolicy"),language:g.locale})).then(c=>{c=a.next(".editableProperty-viewer").html(c);m(a);b(document).trigger("xwiki:dom:updated",{elements:c.toArray()})}).catch(()=>
{new XWiki.widgets.Notification(f["web.editableProperty.viewFailed"],"error");return Promise.reject()})}});require(["jquery","editableProperty","xwiki-events-bridge"],function(b){var g=function(l,h){b(h&&h.elements||document).find("dt.editableProperty").editableProperty()};b(document).on("xwiki:dom:updated",g);b(g)})}).apply("]]#",$jsontool.serialize([$l10n,$icons]));

//# sourceMappingURL=editableProperty.min.js.map
