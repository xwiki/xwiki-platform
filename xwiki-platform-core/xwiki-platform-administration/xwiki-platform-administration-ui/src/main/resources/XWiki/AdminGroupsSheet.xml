<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.3" reference="XWiki.AdminGroupsSheet" locale="">
  <web>XWiki</web>
  <name>AdminGroupsSheet</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>XWiki.AdminSheet</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title>AdminGroupsSheet</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.0</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity output="false"}}
#macro (createGroupModal)
  &lt;form action="" class="modal xform" id="createGroupModal" tabindex="-1" role="dialog"
      aria-labelledby="createGroupModal-label" data-backdrop="static" data-keyboard="false"&gt;
    &lt;div class="modal-dialog" role="document"&gt;
      &lt;div class="modal-content"&gt;
        &lt;div class="modal-header"&gt;
          &lt;button type="button" class="close" data-dismiss="modal" aria-label="Close"&gt;
            &lt;span aria-hidden="true"&gt;&amp;times;&lt;/span&gt;
          &lt;/button&gt;
          &lt;div class="modal-title" id="createGroupModal-label"&gt;
            $escapetool.xml($services.localization.render('rightsmanager.creategroup'))
          &lt;/div&gt;
        &lt;/div&gt;
        &lt;div class="modal-body"&gt;
          &lt;div class="hidden"&gt;
            &lt;input type="hidden" name="form_token" value="$!services.csrf.token" /&gt;
            &lt;input type="hidden" name="template" value="XWiki.XWikiGroupTemplate" /&gt;
          &lt;/div&gt;
          &lt;dl&gt;
            &lt;dt&gt;
              &lt;label for="createGroupModal-groupName" class="sr-only"&gt;
                $escapetool.xml($services.localization.render('xe.admin.groups.name'))
              &lt;/label&gt;
            &lt;/dt&gt;
            &lt;dd class="form-group has-feedback"&gt;
              &lt;input type="text" class="form-control" id="createGroupModal-groupName" name="name" autocomplete="off"
                placeholder="$escapetool.xml($services.localization.render('xe.admin.groups.name'))" /&gt;
              &lt;span class="form-control-feedback loading hidden" aria-hidden="true"&gt;&lt;/span&gt;
              &lt;span class="form-control-feedback success hidden" aria-hidden="true"&gt;$services.icon.renderHTML('check')&lt;/span&gt;
              &lt;span class="form-control-feedback error hidden" aria-hidden="true"&gt;$services.icon.renderHTML('cross')&lt;/span&gt;
              &lt;span class="help-block hidden"&gt;&lt;/span&gt;
            &lt;/dd&gt;
          &lt;/dl&gt;
        &lt;/div&gt;
        &lt;div class="modal-footer"&gt;
          &lt;button type="button" class="btn btn-default" data-dismiss="modal"&gt;
            $escapetool.xml($services.localization.render('cancel'))
          &lt;/button&gt;
          &lt;button type="submit" class="btn btn-primary"&gt;
            $escapetool.xml($services.localization.render('create'))
          &lt;/button&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/form&gt;
#end

#macro (editGroupModal)
  &lt;div class="modal" id="editGroupModal" tabindex="-1" role="dialog" aria-labelledby="editGroupModal-label"
      data-backdrop="static" data-keyboard="false" data-liveTable="#groupstable" data-liveTableAction="edit"&gt;
    &lt;div class="modal-dialog" role="document"&gt;
      &lt;div class="modal-content"&gt;
        &lt;div class="modal-header"&gt;
          &lt;button type="button" class="close" data-dismiss="modal" aria-label="Close"&gt;
            &lt;span aria-hidden="true"&gt;&amp;times;&lt;/span&gt;
          &lt;/button&gt;
          &lt;div class="modal-title" id="editGroupModal-label"&gt;
            $escapetool.xml($services.localization.render('xe.admin.groups.editGroup'))
          &lt;/div&gt;
        &lt;/div&gt;
        &lt;div class="modal-body"&gt;&lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
#end

#macro (deleteGroupModal)
  &lt;div class="modal" id="deleteGroupModal" tabindex="-1" role="dialog" aria-labelledby="deleteGroupModal-label"
       data-liveTable="#groupstable" data-liveTableAction="delete"&gt;
    &lt;div class="modal-dialog" role="document"&gt;
      &lt;div class="modal-content"&gt;
        &lt;div class="modal-header"&gt;
          &lt;button type="button" class="close" data-dismiss="modal" aria-label="Close"&gt;
            &lt;span aria-hidden="true"&gt;&amp;times;&lt;/span&gt;
          &lt;/button&gt;
          &lt;div class="modal-title" id="deleteGroupModal-label"&gt;
            $escapetool.xml($services.localization.render('xe.admin.groups.deleteGroup'))
          &lt;/div&gt;
        &lt;/div&gt;
        &lt;div class="modal-body"&gt;
          #set ($message = $escapetool.xml($services.localization.render('rightsmanager.confirmdeletegroup')))
          &lt;p&gt;$message.replace('__name__', '&lt;span class="groupName"&gt;&lt;/span&gt;')&lt;/p&gt;
        &lt;/div&gt;
        &lt;div class="modal-footer"&gt;
          &lt;button type="button" class="btn btn-default" data-dismiss="modal"&gt;
            $escapetool.xml($services.localization.render('cancel'))
          &lt;/button&gt;
          &lt;button type="submit" class="btn btn-danger" data-dismiss="modal"&gt;
            $escapetool.xml($services.localization.render('delete'))
          &lt;/button&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
#end

#macro (groupScopeFilter)
  &lt;select name="wiki"&gt;
    &lt;option selected="selected" value="local"&gt;
      $escapetool.xml($services.localization.render('xe.admin.groups.local'))
    &lt;/option&gt;
    &lt;option value="global"&gt;
      $escapetool.xml($services.localization.render('xe.admin.groups.global'))
    &lt;/option&gt;
    &lt;option value="both"&gt;
      $escapetool.xml($services.localization.render('xe.admin.groups.both'))
    &lt;/option&gt;
  &lt;/select&gt;
#end
{{/velocity}}

{{velocity}}
#set ($discard = $xwiki.ssx.use('XWiki.AdminGroupsSheet'))
#set ($discard = $xwiki.jsx.use('XWiki.AdminGroupsSheet'))
## The following are needed when editing a group (e.g. for adding new members).
#userPicker_import()
#set ($discard = $xwiki.ssx.use('XWiki.XWikiGroupSheet'))
#set ($discard = $xwiki.jsx.use('XWiki.XWikiGroupSheet'))
#set ($columnOptions = {
  'name': {'type': 'text', 'html': true, 'sortable': false},
  'members': {'filterable': false, 'sortable': false},
  'scope': {'type': 'list', 'sortable': false},
  '_actions': {
    'actions': ['edit', 'delete'],
    'labels': {
      'delete': $services.localization.render('platform.livetable._actions.delete')
    },
    'filterable': false
   }
})
#set ($columns = ['name', 'members', '_actions'])
#set ($liveTableOptions = {
  'url': $doc.getURL('view', 'xpage=getgroups'),
  'translationPrefix': 'xe.admin.groups.',
  'outputOnlyHtml': true
})
#if (!$xcontext.isMainWiki())
  #set ($discard = $columns.add(2, 'scope'))
  ## We use the top filters option to show only the local groups by default because the JavaScript code from the sheet
  ## is executed after the livetable is loaded. The JavaScript code removes the top filters and updates the scope filter
  ## afterwards.
  #set ($liveTableOptions.topFilters = "#groupScopeFilter")
#end
{{html clean="false"}}
&lt;div class="medium-avatars"&gt;
  #livetable('groupstable' $columns $columnOptions $liveTableOptions)
&lt;/div&gt;
&lt;p&gt;
  &lt;button type="button" class="btn btn-primary" data-toggle="modal" data-target="${escapetool.h}createGroupModal"&gt;
    $escapetool.xml($services.localization.render('rightsmanager.creategroup'))
  &lt;/button&gt;
&lt;/p&gt;
#createGroupModal
#editGroupModal
#deleteGroupModal
{{/html}}
{{/velocity}}</content>
  <object>
    <name>XWiki.AdminGroupsSheet</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>41afe63a-d8ec-43ff-b1f3-1ab39f765330</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>define('bootstrap-form-validation', ['jquery'], function($) {
  return {
    resetValidation: function(formControl) {
      var formGroup = formControl.closest('.form-group');
      formGroup.removeClass('has-success has-error has-warning');
      formGroup.find('.form-control-feedback').addClass('hidden');
      formGroup.find('.help-block').addClass('hidden').empty();
    },
    setLoading: function(formControl) {
      this.resetValidation(formControl);
      formControl.closest('.form-group').find('.form-control-feedback.loading').removeClass('hidden');
    },
    setSuccess: function(formControl) {
      this.resetValidation(formControl);
      formControl.closest('.form-group').addClass('has-success').find('.form-control-feedback.success')
        .removeClass('hidden');
    },
    setError: function(formControl, message) {
      this.resetValidation(formControl);
      formControl.closest('.form-group').addClass('has-error')
        .find('.form-control-feedback.error').removeClass('hidden').end()
        .find('.help-block').removeClass('hidden').text(message);
    }
  };
});

//
// Group Creation
//
require(['jquery', 'bootstrap-form-validation'], function($, validation) {
  var createGroupModal = $('#createGroupModal');
  var createGroupButton = createGroupModal.find('button.btn-primary');
  createGroupModal.on('shown.bs.modal', function() {
    // Reset the form each time the modal is shown.
    createGroupModal.trigger('reset');
    createGroupModal.find('.form-control').each(function() {
      validation.resetValidation($(this));
    }).first().focus();
    createGroupButton.prop('disabled', true);
  });

  // Group name validation.
  var groupNameTimeout;
  var groupNameInput = createGroupModal.find('input[name="name"]');
  groupNameInput.on('input', function() {
    clearTimeout(groupNameTimeout);
    createGroupButton.prop('disabled', true);
    validation.resetValidation(groupNameInput);
    if (groupNameInput.val() !== '') {
      validation.setLoading(groupNameInput);
      groupNameTimeout = setTimeout(function() {
        var groupName = groupNameInput.val();
        var groupURL = new XWiki.Document(groupName, 'XWiki').getRestURL();
        $.get(groupURL).done(function() {
          // A document with the specified name already exists.
          var message = $jsontool.serialize($services.localization.render('rightsmanager.groupexist'))
            .replace('__name__', groupName);
          validation.setError(groupNameInput, message);
        }).fail(function(response) {
          if (response.status === 404) {
            // The document does not exist, so we can use it.
            validation.setSuccess(groupNameInput);
            createGroupButton.prop('disabled', false);
          } else {
            // Something else happened. This was not intended.
            var message = $jsontool.serialize($services.localization.render(
              'platform.core.rightsManagement.ajaxFailure'));
            validation.setError(groupNameInput, message);
          }
        });
      }, 500);
    }
  });

  createGroupModal.submit(function(event) {
    event.preventDefault();
    var data = createGroupModal.serializeArray();
    data.push({name: 'ajax', value: 1});
    var groupName = groupNameInput.val();
    var createGroupURL = new XWiki.Document(groupName, 'XWiki').getURL('save');
    // Disable the form to prevent it from being submitted twice.
    createGroupModal.find(':input').prop('disabled', true);
    var notification = new XWiki.widgets.Notification(
      $jsontool.serialize($services.localization.render('xe.admin.groups.create.inProgress')),
      'inprogress'
    );
    $.post(createGroupURL, data).done(function() {
      notification.replace(new XWiki.widgets.Notification(
        $jsontool.serialize($services.localization.render('xe.admin.groups.create.done')),
        'done'
      ));
      // Close the modal and refresh the groups live table.
      createGroupModal.modal('hide');
      window.livetable_groupstable.refresh();
    }).fail(function() {
      notification.replace(new XWiki.widgets.Notification(
        $jsontool.serialize($services.localization.render('xe.admin.groups.create.failed')),
        'error'
      ));
    }).always(function() {
      // Re-enable the form.
      createGroupModal.find(':input').prop('disabled', false);
    });
  });
});

//
// Scope Filtering
//
require(['jquery'], function($) {
  var options = $('#groupstable').prev('.tipfilters').remove().find('select[name="wiki"]').html();
  var scopeFilter = $('#groupstable .xwiki-livetable-display-filters select[name="scope"]')
  scopeFilter.attr('name', 'wiki').html(options);
});

//
// Live Table Modals
//

define('xwiki-livetable-modal', ['jquery', 'bootstrap'], function($) {
  $.fn.bindActionToModal = function(action, modal) {
    var actionToModal = action;
    if (typeof action === 'string') {
      var actionToModal = {};
      actionToModal[action] = modal;
    }
    return this.each(function() {
      var liveTableElement = $(this);
      var liveTable = window['livetable_' + liveTableElement.attr('id')];
      $.each(actionToModal, function(action, modal) {
        liveTableElement.on('click', 'a.action' + action, function(event) {
          event.preventDefault();
          var actionTrigger = $(this);
          var row = actionTrigger.closest('tr');
          var rowIndex = parseInt(row.attr('data-index'));
          $(modal).data({
            rowData: liveTable.fetchedRows[rowIndex],
            rowIndex: rowIndex,
            liveTable: liveTable
          }).modal('show');
        });
      });
    });
  };

  $('.modal[data-liveTable]').each(function() {
    var modal = $(this);
    $(modal.attr('data-liveTable')).bindActionToModal(modal.attr('data-liveTableAction'), modal);
  });
});

require(['jquery', 'xwiki-meta', 'xwiki-livetable-modal'], function($, xm) {
  //
  // Group Editing
  //
  var editGroupModal = $('#editGroupModal');
  editGroupModal.on('show.bs.modal', function() {
    var rowData = editGroupModal.data('rowData');
    var groupReference = XWiki.Model.resolve(rowData.doc_fullName, XWiki.EntityType.DOCUMENT, [rowData.doc_wiki]);
    var groupDocument = new XWiki.Document(groupReference);
    var editGroupURL = groupDocument.getURL('edit', 'xpage=plain');
    editGroupModal.find('.modal-body').empty().addClass('loading').load(editGroupURL, function() {
      this.removeClass('loading');
      $(document).trigger('xwiki:dom:updated', {'elements': this.toArray()});
    });
  }).on('hide.bs.modal', function() {
    editGroupModal.data('liveTable').refresh();
  });

  //
  // Group Deletion
  //
  var deleteGroupModal = $('#deleteGroupModal');
  deleteGroupModal.on('show.bs.modal', function() {
    var rowData = deleteGroupModal.data('rowData');
    var groupReference = rowData.doc_fullName;
    if (XWiki.currentWiki !== rowData.doc_wiki) {
      groupReference = XWiki.Model.resolve(groupReference, XWiki.EntityType.DOCUMENT, [rowData.doc_wiki]);
      groupReference = XWiki.Model.serialize(groupReference);
    }
    deleteGroupModal.find('.groupName').text(groupReference);
  }).find('.btn-danger').click(function() {
    $.post('', {
      xpage: 'deleteuorg',
      docname: deleteGroupModal.find('.groupName').text(),
      form_token: xm.form_token
    }).done(function() {
      deleteGroupModal.data('liveTable').deleteRow(deleteGroupModal.data('rowIndex'));
    });
  });
});</code>
    </property>
    <property>
      <name/>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>XWiki.AdminGroupsSheet</name>
    <number>0</number>
    <className>XWiki.StyleSheetExtension</className>
    <guid>1e6539da-e9e3-41ef-a9c0-43a6c2cd920d</guid>
    <class>
      <name>XWiki.StyleSheetExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <contentType>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>contentType</name>
        <number>6</number>
        <prettyName>Content Type</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>CSS|LESS</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </contentType>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>/**
 * Groups Live Table
 */
#groupstable td[data-title] {
  vertical-align: middle;
}

/**
 * Create Group Modal
 */

#createGroupModal dl,
#createGroupModal dd:last-child {
  margin-bottom: 0;
}

#createGroupModal .help-block {
  font-size: smaller;
}

/**
 * Delete Group Modal
 */

#deleteGroupModal .groupName {
  font-weight: bolder;
}</code>
    </property>
    <property>
      <contentType>CSS</contentType>
    </property>
    <property>
      <name/>
    </property>
    <property>
      <parse>0</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
</xwikidoc>
