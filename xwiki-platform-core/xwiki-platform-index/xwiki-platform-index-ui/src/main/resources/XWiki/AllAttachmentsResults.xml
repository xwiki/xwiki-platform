<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.4" reference="XWiki.AllAttachmentsResults" locale="">
  <web>XWiki</web>
  <name>AllAttachmentsResults</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>XWiki.AllAttachments</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title>$services.localization.render('platform.index.attachmentsResults')</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.0</syntaxId>
  <hidden>true</hidden>
  <content>{{template name="hierarchy_macros.vm" /}}
{{template name="attachment_macros.vm" /}}

{{velocity wiki="false"}}
## ========================================================================================
## This page is requested asynchronously by the Attachments live table and returns a set of
## results serialized in JSON format.
## ========================================================================================
#if ($xcontext.action == 'get')
  #set ($offset = $numbertool.toNumber($request.offset).intValue())
  ## The offset sent by the live table starts at 1.
  #set ($offset = $offset - 1)
  #if (!$offset || $offset &lt; 0)
    #set ($offset = 0)
  #end
  #set ($limit = $numbertool.toNumber($request.limit).intValue())
  #if (!$limit)
    #set ($limit = 15)
  #end
  ##
  ## Apply live table filters.
  ##
  #set ($constraints = [])
  #set ($queryParameters = [])
  #maybeApplyStringFilter('mimeType' 'prefix' $constraints $queryParameters)
  #maybeApplyStringFilter('filename' 'partial' $constraints $queryParameters)
  #maybeApplyStringFilter('doc.fullName' 'partial' $constraints $queryParameters)
  #maybeApplyIntegerRangeFilter('filesize' $constraints $queryParameters)
  #maybeApplyDateRangeFilter('date' $constraints $queryParameters)
  #maybeApplyStringFilter('author' 'partial' $constraints $queryParameters)
  #set ($whereClause = '')
  #if ($constraints.size() &gt; 0)
    #set ($whereClause = 'where ' + $stringtool.join($constraints, ' and '))
  #end
  ##
  ## Determine the sort field and direction.
  ##
  #set ($validSortFields = ['mimeType', 'filename', 'doc.fullName', 'filesize', 'date', 'author'])
  #set ($sortField = $request.sort)
  #if (!$validSortFields.contains($sortField))
    #set ($sortField = 'filename')
  #end
  #set ($caseInsensitiveSort = $sortField != 'date' &amp;&amp; $sortField != 'filesize')
  #if (!$sortField.startsWith('doc.'))
    #set ($sortField = "attachment.$sortField")
  #end
  #set ($direction = 'asc')
  #if ("$!request.dir" == 'desc')
    #set ($direction = 'desc')
  #end
  #if ($caseInsensitiveSort)
    #set ($orderByClause = "order by lower($sortField) $direction, $sortField $direction")
  #else
    #set ($orderByClause = "order by $sortField $direction")
  #end
  ##
  ## Compute the final query.
  ##
  #set ($query = $services.query.hql("$whereClause $orderByClause"))
  #set ($discard = $query.addFilter('attachment').addFilter('hidden'))
  #set ($discard = $query.setLimit($limit).setOffset($offset))
  #foreach ($queryParameter in $queryParameters)
    #if ($queryParameter.match == 'exact')
      #set ($discard = $query.bindValue($queryParameter.name, $queryParameter.value))
    #elseif ($queryParameter.match == 'prefix')
      #set ($query = $query.bindValue($queryParameter.name).literal($queryParameter.value).anyChars().query())
    #else
      ## Partial match.
      #set ($query = $query.bindValue($queryParameter.name).anyChars().literal($queryParameter.value).anyChars().query())
    #end
  #end
  #set ($attachmentReferences = $query.execute())
  #set ($results = {
    "totalrows": $query.count(),
    "returnedrows": $mathtool.min($attachmentReferences.size(), $limit),
    "offset": $mathtool.add($offset, 1),
    "reqNo": $numbertool.toNumber($request.reqNo).intValue(),
    "rows": []
  })
  #foreach ($attachmentReference in $attachmentReferences)
    #set ($hasAccess = $services.security.authorization.hasAccess('view', $attachmentReference))
    #set ($location = "#hierarchy($attachmentReference.parent, {
      'limit': 5,
      'plain': $hasAccess.equals(false),
      'local': true,
      'displayTitle': false
    })")
    ## The field "fullName" was used by Livetable and is needed for backwards-compatibility.
    ## The field "doc.fullName" is needed by LiveData as doc.fullName is the actual field name.
    #set ($row = {
      'acclev': $hasAccess,
      'fullName': $location,
      'doc.fullName': $location,
      'filename': $attachmentReference.name,
      'fileurl': $xwiki.getURL($attachmentReference)
    })
    #if ($hasAccess)
      #set ($document = $xwiki.getDocument($attachmentReference.parent))
      #set ($attachment = $document.getAttachment($attachmentReference.name))
      #set ($authorReference = $services.model.resolveDocument($attachment.author))
      #set ($discard = $row.putAll({
        'mimeType': "#displayAttachmentMimeType($attachment)",
        'filesize': "#displayAttachmentSize($attachment.longSize)",
        'date': $xwiki.formatDate($attachment.date),
        'author': "#displayUserNameWithAvatar($attachment.author)"
      }))
    #end
    #set ($discard = $results.rows.add($row))
  #end
  #jsonResponse($results)
#end
{{/velocity}}</content>
</xwikidoc>
