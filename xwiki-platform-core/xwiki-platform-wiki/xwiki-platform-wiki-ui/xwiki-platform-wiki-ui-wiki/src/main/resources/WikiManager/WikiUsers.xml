<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.3" reference="WikiManager.WikiUsers" locale="">
  <web>WikiManager</web>
  <name>WikiUsers</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>XWiki.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title>$services.localization.render('platform.wiki.currentwiki.wikiusers.title')</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.0</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity output="false"}}
## Use XWikiAllGroup as the group target.
#set($groupDoc = $xwiki.getDocument('XWiki.XWikiAllGroup'))
#macro(hasGroupRight $right $hasGroupRight)
  #set($result = $xwiki.hasAccessLevel($right, $xcontext.user, $groupDoc.fullName))
  #set($hasGroupRight = $NULL)
  #setVariable("$hasGroupRight" $result)
#end
#hasGroupRight('edit' $hasEditGroupRight)
#hasGroupRight('delete' $hasDeleteGroupRight)

#macro (displayInviteWikiUserForm)
  &lt;form id='inviteUserForm' class='xform' method='post'&gt;
    &lt;h2&gt;$services.localization.render('platform.wiki.currentwiki.member.add')&lt;/h2&gt;
    &lt;dl&gt;
      &lt;dt&gt;
        &lt;label for='userInput'&gt;
          $services.localization.render('platform.wiki.currentwiki.invite.username.label')
        &lt;/label&gt;
        &lt;span class='xHint'&gt;
          $services.localization.render('platform.wiki.currentwiki.invite.username.hint')
        &lt;/span&gt;
      &lt;/dt&gt;
      &lt;dd&gt;
        ## The workspace can accept only global users.
        #set ($userPickerParams = {
          'id': 'userInput',
          'name': 'name',
          'data-userScope': 'GLOBAL_ONLY'
        })
        #userPicker(true $userPickerParams)
      &lt;/dd&gt;
      &lt;dt&gt;
        &lt;label for='message'&gt;
          $services.localization.render('platform.wiki.currentwiki.invite.message.label')
        &lt;/label&gt;
        &lt;span class='xHint'&gt;
          $services.localization.render('platform.wiki.currentwiki.invite.message.hint')
        &lt;/span&gt;
      &lt;/dt&gt;
      &lt;dd&gt;
        &lt;textarea name='message'&gt;&lt;/textarea&gt;
      &lt;/dd&gt;
    &lt;/dl&gt;
    &lt;p class="buttons"&gt;
      &lt;span class='buttonwrapper'&gt;
        &lt;input type="submit" id="addMembers" class="button"
          value="$services.localization.render('xe.admin.groups.addUser.submit')" /&gt;
      &lt;/span&gt;
      &lt;span class='buttonwrapper'&gt;
        &lt;input id='inviteUserButton' type='submit' class='button' name='inviteUser'
          value="$services.localization.render('platform.wiki.currentwiki.invite.button.label')"/&gt;
      &lt;/span&gt;
    &lt;/p&gt;
    &lt;div class="hidden"&gt;
      &lt;input type='hidden' name='form_token' value='$!services.csrf.getToken()' /&gt;
      &lt;input type='hidden' name='editor' value='globaladmin'/&gt;
      &lt;input type='hidden' name='section' value='Users'/&gt;
    &lt;/div&gt;
  &lt;/form&gt;
#end

#macro (displayWikiMembers)
  &lt;div class='xform'&gt;
    &lt;h2&gt;$services.localization.render('admin.xwiki.members.title')&lt;/h2&gt;
  &lt;/div&gt;
  #set ($columnOptions = {
    "member" : {'type': 'text', 'html': true},
    'scope': {'filterable': false, 'sortable': false, 'html': true},
    "_actions" : {
      'actions': ['delete'],
      'actionCallbacks': {'delete': 'table.deleteRow(i);'},
      'ajaxActions': {'delete': true},
      'filterable': false
     }
  })
  #set ($columns = ['member'])
  #if ($services.wiki.user.userScope != 'LOCAL_ONLY')
    #set ($discard = $columns.add('scope'))
  #end
  #if ($hasDeleteGroupRight)
    #set ($discard = $columns.add('_actions'))
  #end
  &lt;div class="medium-avatars"&gt;
    #livetable('groupusers', $columns, $columnOptions, {
      'url': $groupDoc.getURL('view', 'xpage=getgroupmembers'),
      'translationPrefix': 'xe.admin.groups.',
      'javascriptName': 'editgrouptable',
      'outputOnlyHtml': true
    })
  &lt;/div&gt;
#end

#macro (displayWikiCandidateMembers)
  &lt;div id='candidates' class='xform'&gt;
    &lt;h2&gt;$services.localization.render('platform.wiki.currentwiki.candidates.label')&lt;/h2&gt;
    #set ($groupDoc = $xwiki.getDocument('XWiki.XWikiAllGroup'))
    #set ($candidateMembers = $groupDoc.getObjects($candidateClass))
    #if ($candidateMembers.isEmpty())
      &lt;p&gt;$services.localization.render('platform.wiki.currentwiki.candidates.empty')&lt;/p&gt;
    #else
      &lt;div class='xHint'&gt;$services.localization.render('platform.wiki.currentwiki.candidates.hint')&lt;/div&gt;
      #foreach ($candidateMember in $candidateMembers)
        #displayWikiCandidateMember($candidateMember)
      #end
    #end
  &lt;/div&gt;
#end

#macro (displayWikiCandidateMember $candidateMember)
  #set ($userFullName = $candidateMember.getValue('userName'))
  #set ($userURL = $xwiki.getURL($userFullName))
  #set ($userComment = $candidateMember.getValue('userComment'))
  #set ($status = $candidateMember.getValue('status'))
  #set ($type = $candidateMember.getValue('type'))
  &lt;div class='candidate'&gt;
    &lt;div class='candidateAvatar'&gt;&lt;a href="$userURL"&gt;#mediumUserAvatar($userFullName)&lt;/a&gt;&lt;/div&gt;
    &lt;div class='candidateDetails'&gt;
      &lt;form class='xformInline' method='post'&gt;
        &lt;div class='candidateNameAndComment'&gt;
          $xwiki.getUserName($userFullName)#if("$!userComment" != ''): &lt;span class='candidateCommentSpan'&gt;$userComment&lt;/span&gt;#end
        &lt;/div&gt;
        &lt;div class='date xHint'&gt;
          #if ($candidateMember.getValue('date'))
            $candidateMember.date
          #end
        &lt;/div&gt;
        &lt;div class='candidateStatus'&gt;
          &lt;label&gt;$services.localization.render('platform.wiki.currentwiki.candidates.status.label')&lt;/label&gt; $status
        &lt;/div&gt;
        &lt;div class='candidateType'&gt;
          &lt;label&gt;$services.localization.render('platform.wiki.currentwiki.candidates.type.label')&lt;/label&gt; $type
        &lt;/div&gt;
        #if ($status != 'pending' || $type == 'invitation')
        &lt;div class='reviewer'&gt;
          &lt;label&gt;$services.localization.render('platform.wiki.currentwiki.candidates.reviewer.label')&lt;/label&gt;
          $xwiki.getUserName($candidateMember.getValue('reviewer'))
        &lt;/div&gt;
        #end
        &lt;div class='reviewerComment'&gt;
          &lt;label&gt;
              $services.localization.render('platform.wiki.currentwiki.candidates.reviewermessage.label')
          &lt;/label&gt;
          #if($status == 'pending' &amp;&amp; $type == 'request')
            &lt;textarea name='reviewerComment'/&gt;
          #else
            &lt;span class='reviewerCommentSpan'&gt;$!candidateMember.getValue('reviewerComment')&lt;/span&gt;
          #end
        &lt;/div&gt;
        &lt;div class='reviewerPrivateComment'&gt;
          &lt;label&gt;$services.localization.render('platform.wiki.currentwiki.candidates.reviewerprivatecomment.label')&lt;/label&gt;
          #if($status == 'pending' &amp;&amp; $type == 'request')
            &lt;textarea name='reviewerPrivateComment'/&gt;
          #else
            &lt;span class='reviewerPrivateCommentSpan'&gt;$!candidateMember.getValue('reviewerPrivateComment')&lt;/span&gt;
          #end
        &lt;/div&gt;
        &lt;div class='date xHint'&gt;
          #if ($candidateMember.getValue('resolutionDate'))
            $candidateMember.resolutionDate
          #end
        &lt;/div&gt;
        &lt;div class='reviewerActions'&gt;
          #if ($status == 'pending' &amp;&amp; $type == 'request')
          &lt;span class='buttonwrapper acceptUserButton'&gt;
            &lt;input type='submit' class='button' name='acceptUser'
              value="$services.localization.render('platform.wiki.currentwiki.candidates.accept.label')"/&gt;
          &lt;/span&gt;
          &lt;/span class='buttonwrapper rejectUserButton'&gt;
            &lt;input type='submit' class='button secondary' name='rejectUser'
              value="$services.localization.render('platform.wiki.currentwiki.candidates.reject.label')"/&gt;
          &lt;/span&gt;
          #end
          #if ($status == 'pending' &amp;&amp; $type == 'invitation')
          &lt;/span class='buttonwrapper cancelInvitationButton'&gt;
            &lt;input type='submit' class='button' name='cancelInvitation'
              value="$services.localization.render('platform.wiki.currentwiki.candidates.invitation.cancel.label')"/&gt;
          &lt;/span&gt;
          #end
        &lt;/div&gt;
        &lt;input type='hidden' name='candidateNumber' value='$candidateMember.number'/&gt;
        &lt;input type='hidden' name='editor' value='globaladmin'/&gt;
        &lt;input type='hidden' name='section' value='Users'/&gt;
        &lt;input type='hidden' name='form_token' value='$!services.csrf.token' /&gt;
      &lt;/form&gt;
    &lt;/div&gt;
    &lt;div class='clearfloats'&gt;&lt;/div&gt;
  &lt;/div&gt;
#end

#macro (printException $exception)

  #if($exception.message)
    {{error}}$services.localization.render('platform.wiki.error.exceptionWithMessage', [$exception.message]){{/error}}
  #else
    {{error}}$exception.class{{/error}}
  #end

#end
{{/velocity}}

{{velocity}}
### MANAGE CANDIDACIES ###
#set ($candidateClass = 'WikiManager.WikiCandidateMemberClass')
#set ($xwikiGroupsClass = 'XWiki.XWikiGroups')
#set ($messageStream = $services.messageStream)
#set ($wiki = $services.wiki.getById($services.wiki.currentWikiId))
#set ($wikiPrettyName = $wiki.prettyName)
#if ("$!wikiPrettyName" == '')
  #set ($wikiPrettyName = $wiki.id)
#end
## OPERATIONS
#if(($request.acceptUser || $request.rejectUser || $request.inviteUser || $request.cancelInvitation) &amp;&amp; $hasAdmin)
  ## Operation are enabled if the form_token is valid
  #if ($services.csrf.isTokenValid($request.form_token))
    #if ($request.acceptUser || $request.rejectUser)
      ## Handle a candidate members's request.
      ##
      #set ($candidateNumber = $mathtool.toInteger("$!{request.candidateNumber}"))
      #set ($candidacy = $services.wiki.user.getCandidacy($wiki.id, $candidateNumber))
      #if ($candidacy &amp;&amp; $candidacy.status == 'PENDING')
        #if ($request.acceptUser)
          #set ($success = $services.wiki.user.acceptRequest($candidacy, $request.reviewerComment, $request.reviewerPrivateComment))
          #if ($success)
            #set ($notificationMessage = $services.localization.render('platform.wiki.currentwiki.joinRequestAcceptedNotification', [$wikiPrettyName]))
          #end
        #elseif ($request.rejectUser)
          #set ($success = $services.wiki.user.refuseRequest($candidacy, $request.reviewerComment, $request.reviewerPrivateComment))
          #if ($success)
            #set ($notificationMessage = $services.localization.render('platform.wiki.currentwiki.joinRequestRejectedNotification', [$wikiPrettyName]))
          #end
        #end
        ## Notify the user.
        #if ("$!{request.reviewerComment}" != '')
          ## FIXME: replace newline with ${escapetool.newline} when upgrading velocity-tools to 2.0 (in xwiki3.1+?)
          #set ($notificationMessage = "${notificationMessage}
    $services.localization.render('platform.wiki.currentwiki.candidateHandledComment') ${request.reviewerComment}")
        #end
        #set ($userDocumentReference = $services.model.resolveDocument($candidacy.userId))
        #set ($temp = $messageStream.postDirectMessageToUser($notificationMessage, $userDocumentReference))
        #if ($success)

          #if ($request.acceptUser)
            {{info}}{{translation key="platform.wiki.currentwiki.candidateAcceptedSuccess"/}}{{/info}}
          #else
            {{info}}{{translation key="platform.wiki.currentwiki.candidateRejectedSuccess"/}}{{/info}}
          #end

        #else

            {{error}}{{translation key="platform.wiki.currentwiki.candidateReviewFailure"/}}{{/error}}

        #end
      #end
    #elseif($request.inviteUser)
      ## Handle inviting users.
      ##
      #set ($names = [])
      #set ($namesArray = $request.getParameterValues('name'))
      #set ($discard = $names.addAll($namesArray.subList(0, $namesArray.size())))
      #set ($discard = $names.removeAll(['']))
      #set ($message = $request.message)
      ##
      ## Remove users that are already members.
      #set ($alreadyMembers = [])
      #set ($members = $services.wiki.user.getMembers($wiki.id))
      #foreach ($name in $names)
        #if ($members.contains($name))
          #set ($discard = $alreadyMembers.add($name))

          {{error}}$services.localization.render('platform.wiki.currentwiki.inviteUserAlreadyMember', [$xwiki.getUserName($name, false)]){{/error}}

        #end
      #end
      #set ($discard = $names.removeAll($alreadyMembers))
      ##
      ## Remove users that have already been invited.
      #set ($alreadyInvited = [])
      #set ($allInvitations = $services.wiki.user.getAllInvitations($wiki.id))
      #foreach ($name in $names)
        #foreach ($candidateMember in $allInvitations)
          #if ($name == $candidateMember.userId &amp;&amp; $candidateMember.status == 'PENDING')
            #set ($errorMessageKey = 'platform.wiki.currentwiki.inviteUserAlreadyInvited')
            #set ($errorMessageKey = 'platform.wiki.currentwiki.inviteRequestAlreadyExists')

            {{error}}$services.localization.render($errorMessageKey, [$xwiki.getUserName($name, false)]){{/error}}

            #set ($discard = $alreadyInvited.add($name))
            #break
          #end
        #end
      #end
      #set ($discard = $names.removeAll($alreadyInvited))
      ##
      #foreach ($userName in $names)
        #set ($temp = $services.wiki.user.invite($userName, $wiki.id, $message))
        ## Notify the user.
        #set ($notificationMessage = $services.localization.render('platform.wiki.currentwiki.inviteNotification', [$wikiPrettyName]))
        #if ("$!message" != '')
          ## FIXME: remplace newline with ${escapetool.newline} when upgrading velocity-tools to 2.0 (in xwiki3.1+?)
          #set ($notificationMessage = "$notificationMessage
    $services.localization.render('platform.wiki.currentwiki.candidateHandledComment') $message")
        #end
        #set ($userDocumentReference = $services.model.resolveDocument($userName))
        #set ($temp = $messageStream.postDirectMessageToUser($notificationMessage, $userDocumentReference))

        {{info}}$services.localization.render('platform.wiki.currentwiki.inviteSuccess', [$xwiki.getUserName($userName, false)]){{/info}}

      #end
    #elseif ($request.cancelInvitation)
      ##
      ## Handle cancelling an invitation.
      #set ($candidateNumber = $mathtool.toInteger("$!{request.candidateNumber}"))
      #set ($candidateMember = $services.wiki.user.getCandidacy($wiki.id, $candidateNumber))
      #if ($candidateMember &amp;&amp; $candidateMember.status == 'PENDING')
        ## Remove the invitation
        #set ($success = $services.wiki.user.cancelCandidacy($candidateMember))
        #if($success)
          ## Notify the user.
          #set ($notificationMessage = $services.localization.render('platform.wiki.currentwiki.invitationCancelNotification'))
          #set ($userDocumentReference = $services.model.resolveDocument($candidateMember.userId))
          #set ($temp = $messageStream.postDirectMessageToUser($notificationMessage, $userDocumentReference))

          {{info}}{{translation key="platform.wiki.currentwiki.invitationCancelSuccess"/}}{{/info}}

        #else

          {{error}}{{translation key="platform.wiki.currentwiki.invitationCancelFailure"/}}{{/error}}

        #end
      #end
    #end
  #else

    {{warning}}
      {{translation key="platform.wiki.csrf.error" /}}
    {{/warning}}

  #end
#end
### MEMBERSHIP TYPE AND USER SCOPE ###
#set($discard = $xwiki.ssx.use('XWiki.XWikiGroupSheet'))
#set($discard = $xwiki.jsx.use('WikiManager.WikiUsers'))
#set($userConfRef = $services.model.createDocumentReference('', 'WikiManager', 'WikiUserConfiguration'))
#set($userConfDoc = $xwiki.getDocument($userConfRef))
#set($userConfObj = $userConfDoc.getObject('WikiManager.WikiUserClass'))
#if("$!userConfDoc.getValue('membershipType', $userConfObj)" == '')
  ## set a default value for membershipType
  #set($discard = $userConfObj.set('membershipType', 'invite'))
#end
#set($updateWikiUserReference = $services.model.createDocumentReference('', 'WikiManager', 'UpdateWikiUser'))
#set($redirectURL = $doc.getExternalURL($xcontext.action, $request.queryString))
{{html clean="false" wiki="true"}}
  &lt;form id='setUserConfigurationForm' class='xform' action="$xwiki.getURL($updateWikiUserReference)" method='POST'&gt;
    &lt;input type="hidden" name="form_token" value="$!services.csrf.getToken()" /&gt;
    &lt;h2&gt;$services.localization.render('admin.xwiki.usersconfiguration.title')&lt;/h2&gt;
    &lt;dl&gt;
      &lt;dt&gt;
        &lt;span class='xHint'&gt;{{translation key="platform.wiki.currentwiki.prop.membershipType.hint"/}}&lt;/span&gt;
      &lt;/dt&gt;
      &lt;dd&gt;((($userConfDoc.display('membershipType', 'edit'))))&lt;/dd&gt;
    &lt;/dl&gt;
    &lt;dl&gt;
      &lt;dt&gt;
        &lt;span class='xHint'&gt;{{translation key="platform.wiki.create.wizard.userScope.hint"/}}&lt;/span&gt;
      &lt;/dt&gt;
      &lt;dd&gt;((($userConfDoc.display('userScope', 'edit'))))&lt;/dd&gt;
    &lt;/dl&gt;
    &lt;p class="buttons"&gt;
      &lt;span class='buttonwrapper'&gt;
        &lt;input type="submit" class="button" value="$services.localization.render('admin.save')"/&gt;
      &lt;/span&gt;
    &lt;/p&gt;
{{/html}}

{{html clean="false"}}
    &lt;div class="hidden"&gt;
      #set ($redirectURL = $doc.getExternalURL($xcontext.action, $request.queryString))
      &lt;input type='hidden' name='xredirect' value="$redirectURL" /&gt;
    &lt;/div&gt;
  &lt;/form&gt;

  ## CANDIDACIES AND MEMBERS MANAGEMENT UI
  ## This part is enabled only if we allow glocal users
  #if ("$!services.wiki.user.userScope" != 'LOCAL_ONLY')
    #if ($hasEditGroupRight)
      #set ($discard = $xwiki.ssx.use('WikiManager.WikiUsers'))
      #displayInviteWikiUserForm
    #end
    #displayWikiMembers
    #displayWikiCandidateMembers
  #end

  #if ("$!services.wiki.user.userScope" != 'GLOBAL_ONLY')
    &lt;div class='xform'&gt;
      &lt;h2&gt;$services.localization.render('admin.xwiki.users.title')&lt;/h2&gt;
    &lt;/div&gt;
  #end
{{/html}}
{{/velocity}}</content>
  <object>
    <name>WikiManager.WikiUsers</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>97a34330-a9ab-4bab-8295-73bb1a6ed2a9</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>(function() {
  var addMembers = function(event) {
    event &amp;&amp; event.stop();
    var form = event.element().form;
    var parameters = form.serialize(true);
    var names = Object.isArray(parameters.name) ? parameters.name : [parameters.name];
    if (names.join('').strip() === '') {
      // Nothing to add.
      return;
    }
    new Ajax.Request("$xwiki.getURL('XWiki.XWikiAllGroup', 'get', 'xpage=adduorg')", {
      parameters: parameters,
      onSuccess: function() {
        // Clear the list of selected users.
        jQuery('#userInput')[0].selectize.clear(true);
        // Reload the live table.
        var end = editgrouptable.limit;
        var start = Math.max(editgrouptable.lastOffset, 1);
        editgrouptable.clearCache();
        editgrouptable.getRows(start, end, start, end);
        // Show notification message.
        new XWiki.widgets.Notification("$services.localization.render('xe.admin.groups.addSuccess')", 'done', {timeout: 5});
      },
      onFailure: function(response) {
        new XWiki.widgets.Notification("$services.localization.render('xe.admin.groups.addFailure')" + response.statusText, 'error', {timeout: 5});
      }
    });
  }
  var init = function() {
    $('addMembers') &amp;&amp; $('addMembers').observe('click', addMembers);
    return true;
  };
  (XWiki.domIsLoaded &amp;&amp; init()) || document.observe('xwiki:dom:loaded', init);
})();</code>
    </property>
    <property>
      <name>Code for adding members</name>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>WikiManager.WikiUsers</name>
    <number>1</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>d8d01109-2ab9-4447-a8ed-b4ad084c0462</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>(function(){

  /**
   * Init
   */
  function init() {
    userScopeChanged();
    $$('input[type=radio][name=WikiManager\\.WikiUserClass_0_userScope]').each(function (item){
      item.observe('click', userScopeChanged);
    });
  }
  
  function userScopeChanged(){
    var value = $$('input:checked[type=radio][name=WikiManager\\.WikiUserClass_0_userScope]')[0].value
    if (value=='local_only') {
      // Disable membership type radio button
      $$('input[type=radio][name=WikiManager\\.WikiUserClass_0_membershipType]').each(function (item){
        item.disabled = true;
      });
    } else {
      // Enable membership type radio button
      $$('input[type=radio][name=WikiManager\\.WikiUserClass_0_membershipType]').each(function (item){
        item.disabled = false;
      });
    }
  }

  /**
   * Call Init
   */
  (XWiki &amp;&amp; XWiki.domIsLoaded &amp;&amp; init()) || document.observe("xwiki:dom:loaded", init);

})();
</code>
    </property>
    <property>
      <name>Code for the users configuration</name>
    </property>
    <property>
      <parse>0</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>WikiManager.WikiUsers</name>
    <number>0</number>
    <className>XWiki.StyleSheetExtension</className>
    <guid>22d44dd4-dd1f-41ff-ad2f-00cf192b2346</guid>
    <class>
      <name>XWiki.StyleSheetExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <contentType>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>contentType</name>
        <number>6</number>
        <prettyName>Content Type</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>CSS|LESS</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </contentType>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>#candidates {
  padding-left: 4px;
}

.candidate {
  display: inline-block;
  width: 100%;
  margin-top: 10px;
}

.candidateAvatar {
  display: inline;
  float: left;
  margin-left: 11px;
  margin-right: 11px;
}

.candidateDetails {
  display: block;
  float: left;
  width: 83%;
  padding-left: 4px;
}

.reviewerComment {
  display: inline-block;
  width: 49%;
}

.reviewerComment textarea {
  width: 100%;
}

.reviewerPrivateComment {
  display: inline-block;
  width: 49%;
}

.reviewerPrivateComment textarea {
  width: 100%;
}</code>
    </property>
    <property>
      <contentType>CSS</contentType>
    </property>
    <property>
      <name>Style extension</name>
    </property>
    <property>
      <parse>0</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
</xwikidoc>
