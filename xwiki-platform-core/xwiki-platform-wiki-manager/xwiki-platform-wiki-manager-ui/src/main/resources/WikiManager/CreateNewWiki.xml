<?xml version="1.0" encoding="UTF-8"?>

<xwikidoc>
  <web>WikiManager</web>
  <name>CreateNewWiki</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <parent>WikiManager.WebHome</parent>
  <creator>xwiki:XWiki.Admin</creator>
  <author>xwiki:XWiki.Admin</author>
  <customClass/>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <creationDate>1186676964000</creationDate>
  <date>1319464582000</date>
  <contentUpdateDate>1319464582000</contentUpdateDate>
  <version>1.1</version>
  <title>$services.localization.render('wikimanager.createwiki')</title>
  <template/>
  <defaultTemplate/>
  <validationScript/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/1.0</syntaxId>
  <hidden>true</hidden>
  <object>
    <class>
      <name>XWiki.RequiredRightClass</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <level>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>level</name>
        <number>1</number>
        <picker>0</picker>
        <prettyName>level</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <sort>none</sort>
        <unmodifiable>0</unmodifiable>
        <validationMessage/>
        <validationRegExp/>
        <values>edit|programming</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </level>
    </class>
    <name>WikiManager.CreateNewWiki</name>
    <number>0</number>
    <className>XWiki.RequiredRightClass</className>
    <guid>7dad4f7e-a1b7-4606-95d1-4237991c76fe</guid>
    <property>
      <level>programming</level>
    </property>
  </object>
  <content>############################################################################################
## Create a new wiki with initial minimum informations step by step or in one page.
##
## Can use URL parameters :
## -doc
##   0   : Just show input and properties names
##   1   : Print documentation for each field
## -stepbystep
##   0   : All informations in one page and create button
##   1   : Step by step based on javascript
##
############################################################################################
## PLUGINS DEPENDANCIES
#set ($WikiManager = $services.wikimanager)
#if (!$WikiManager)
  #error($services.localization.render('wikimanager.pluginnotenabled'))
#end
#if (!$services.applicationmanager)
  #error($services.localization.render('xapp.pluginnotenabled'))
#end
############################################################################################
## MACROS
#macro(getRequestList $paramlist $paramname)
  #set ($paramtable = [])
  #set ($paramtable = $request.getParameterValues($paramname))
  #if ($paramtable  &amp;&amp; $paramlist)
    #set ($ok = $paramlist.clear())
    #foreach($paramvalue in $paramtable)
      #set ($ok = $paramlist.add($paramvalue))
    #end
  #end
#end
##
#macro(printUsersAndGroups $users $groups $rightlevel $userlist $grouplist $hidden)
  &lt;select #if ($hidden) type="hidden" #end name="${rightlevel}users" id="${rightlevel}users" multiple="multiple"&gt;
    #foreach ($user in $users)
      #if ($xcontext.isMainWiki()) #set ($user = "${xcontext.mainWikiName}:${user}") #end
      &lt;option value="$user" #if ($userlist &amp;&amp; $userlist.contains($user)) selected="selected" #end&gt;$xwiki.getUserName($user, $NULL, false)&lt;/option&gt;
    #end
  &lt;/select&gt;
  &lt;select #if ($hidden) type="hidden" #end name="${rightlevel}groups" id="${rightlevel}groups" multiple="multiple"&gt;
    #foreach ($group in $groups)
      #if ($xcontext.isMainWiki()) #set ($group = "${xcontext.mainWikiName}:${group}") #end
      #set ($pointindex = $group.indexOf(".") + 1)
      &lt;option value="$group" #if ($grouplist &amp;&amp; $grouplist.contains($group)) selected="selected" #end&gt;$group.substring($pointindex)&lt;/option&gt;
    #end
  &lt;/select&gt;
#end
##
#macro(addRights $prefdoc $userlist $grouplist $rights $needsave)
  #set ($users = "")
  #foreach($user in $userlist)
    #if ($users != "")
      #set ($users = "${users},${user}")
    #else
      #set ($users = $user)
    #end
  #end
  #set ($groups = "")
  #foreach($group in $grouplist)
    #if ($groups != "")
      #set ($groups = "${groups},${group}")
    #else
      #set ($groups = $group)
    #end
  #end
  ##
  #if (($users != "") || ($groups != ""))
    #set ($rightsobj = $prefdoc.newObject("XWiki.XWikiGlobalRights"))
    ##
    #set ($ok = $rightsobj.set("users", $users))
    #set ($ok = $rightsobj.set("groups", $groups))
    #set ($ok = $rightsobj.set("levels", $rights))
    #set ($ok = $rightsobj.set("allow", 1))
    ##
    #set ($needsave = true)
  #end
#end
############################################################################################
## TOOLS
#set ($Exception = $WikiManager.DefaultException)
#set ($ALIASSUFFIX = ".localdomain.com")
#set ($WSTEPID_INTRO = 0)    ## Wiki creation introduction
#set ($WSTEPNAME_INTRO = "wstep_intro")
#set ($WSTEPID_WIKINAME = 1) ## Wiki name
#set ($WSTEPNAME_WIKINAME = "wstep_wikiname")
#set ($WSTEPID_WIKIDESC = 2) ## Wiki descriptor informations
#set ($WSTEPNAME_WIKIDESC = "wstep_wikidesc")
#set ($WSTEPID_DATAFROM = 3) ## Initialise wiki data from wiki template or XAR package
#set ($WSTEPNAME_DATAFROM = "wstep_datafrom")
#set ($WSTEPID_USERS = 4)    ## Preregistered users
#set ($WSTEPNAME_USERS = "wstep_users")
#set ($WSTEPID_SUMMARY = 5)  ## Summary be fore create
#set ($WSTEPNAME_SUMMARY = "wstep_summary")
#set ($WSTEPLIST = [$WSTEPNAME_INTRO, $WSTEPNAME_WIKINAME, $WSTEPNAME_WIKIDESC, $WSTEPNAME_DATAFROM, $WSTEPNAME_USERS, $WSTEPNAME_SUMMARY])
#set ($ISWIKINAMEAVAILABLE = $xwiki.getDocument("WikiCode.IsWikiOrDatabaseAvailableService").URL)
#set ($MSG_ERROR_WIKIALREADYEXISTS = "&lt;span class='errormessage'&gt;&lt;span class='messagetype'&gt;$services.localization.render('error'): &lt;/span&gt;$services.localization.render('wikimanager.wikiname.error.wikialreadyexists')&lt;/span&gt;")
#set ($MSG_WARNING_DATABASEALREADYEXISTS = "&lt;span class='warningmessage'&gt;&lt;span class='messagetype'&gt;$services.localization.render('warning'): &lt;/span&gt;$services.localization.render('wikimanager.wikiname.error.databasealreadyexists')&lt;/span&gt;")
#set ($MSG_ERROR_DATABASEALREADYEXISTS = "&lt;span class='errormessage'&gt;&lt;span class='messagetype'&gt;$services.localization.render('error'): &lt;/span&gt;$services.localization.render('wikimanager.wikiname.error.databasealreadyexists')&lt;/span&gt;")
#set ($MSG_ERROR_WIKINAMEALREADYUSED = "&lt;span class='errormessage'&gt;&lt;span class='messagetype'&gt;$services.localization.render('error'): &lt;/span&gt;$services.localization.render('wikimanager.wikiname.error.alreadyused')&lt;/span&gt;")
#set ($MSG_ERROR_WIKINAMEEMPTY = "&lt;span class='errormessage'&gt;&lt;span class='messagetype'&gt;$services.localization.render('error'): &lt;/span&gt;$services.localization.render('wikimanager.wikiname.error.empty')&lt;/span&gt;")
#set ($MSG_INFO_WIKINAMEVALID = "&lt;span class='infomessage'&gt;&lt;span class='messagetype'&gt;$services.localization.render('info'): &lt;/span&gt;$services.localization.render('wikimanager.wikiname.info.valid')&lt;/span&gt;")
##
############################################################################################
## REQUEST PARAMETERS
#if ($request.stepbystep)
  #set ($wstepbystep = $request.stepbystep)
#end
#if ($request.doc &amp;&amp; $request.doc == "1")
  #set ($documentation = 1)
#end
##
#set ($wikidocument = $WikiManager.createWikiDocument())
#set ($wikidocumentobject = $wikidocument.updateObjectFromRequest("XWiki.XWikiServerClass"))
##
#if ($request.actioncreate)
  #set ($action = "create")
#else
  #set ($action = $request.getParameter("action"))
#end
##
#set ($wikiname = $request.getParameter("wikiname"))
#set ($wikitemplate = $request.getParameter("wikitemplate"))
#set ($wikipackage = $request.getParameter("wikipackage"))
#if ($wikidocument.owner == "")
  $wikidocument.set("owner", $xcontext.user)
#end
#if ($wikidocument.server == "" &amp;&amp; $wikiname &amp;&amp; $wikiname != "")
  $wikidocument.set("server", "${wikiname}.${DOMAINNAME}")
#end
##
#set($readeruserlist = [])
#getRequestList($readeruserlist "readersusers")
#set($readergrouplist = [])
#getRequestList($readergrouplist "readersgroups")
#set($writeruserlist = [])
#getRequestList($writeruserlist "writersusers")
#set($writergrouplist = [])
#getRequestList($writergrouplist "writersgroups")
#set($adminuserlist = [])
#getRequestList($adminuserlist "adminsusers")
#set($admingrouplist = [])
#getRequestList($admingrouplist "adminsgroups")
#if ($request.forcewikiname &amp;&amp; $request.forcewikiname == 'on')
  #set ($failonexist = false)
#else
  #set ($failonexist = true)
#end
##
#############################################################################
##
1 $services.localization.render('wikimanager.createwiki')
#if ($wstepbystep)
  [$services.localization.render('wikimanager.action.createwiki.nonstepbystep')&gt;CreateNewWiki#if($documentation)?doc=1#end]
#else
  [$services.localization.render('wikimanager.action.createwiki.stepbystep')&gt;CreateNewWiki?stepbystep=0&amp;amp;#if($documentation)doc=1#end]
#end
##
#if ($action &amp;&amp; $action == "create")
  #set ($result = $WikiManager.createNewWiki($wikiname, $wikitemplate, $wikipackage, $wikidocument, $failonexist))
  ##
  #if ($result == $Exception.ERROR_NOERROR)
    ## Init new wiki global rights
    #set ($currentwiki = $xcontext.database)
    #set ($ok = $xcontext.setDatabase($wikidocument.wikiName))
    ##
    #set ($prefdoc = $xwiki.getDocument("XWiki.XWikiPreferences"))
    ##
    #set ($needsave = false)
    ##
    #addRights($prefdoc $readeruserlist $readergrouplist "view, comment" $needsave)
    #addRights($prefdoc $writeruserlist $writergrouplist "edit, view, comment" $needsave)
    #addRights($prefdoc $adminuserlist $admingrouplist "admin" $needsave)
    ##
    #if ($needsave)
      $prefdoc.save()
    #end
    ##
    #set ($ok = $xcontext.setDatabase($currentwiki))
    ##
    #info($services.localization.render('wikimanager.successcreatewiki', [$wikiname, $wikidocument.getHomePageUrl()]))
  #else
    #if ($result == $Exception.ERROR_WM_WIKIALREADYEXISTS)
      #error($services.localization.render('wikimanager.errorcreatewiki.ERROR_WM_WIKIALREADYEXISTS', [$wikiname, $result]))
    #else
      #error($services.localization.render('wikimanager.errorcreatewiki', [$wikiname, $xcontext.lastexception]))
    #end
  #end
#end
##
#############################################################################
##
{pre}
&lt;script type="text/javascript"&gt;
// &lt;![CDATA[
 var domainnamesetted = false;
 var prettynamesetted = false;
 var lastwikiname;
#if ($wstepbystep)
 var steps = new Array(#foreach ($wstep in $WSTEPLIST)#if ($velocityCount &gt; 1), #end"$wstep"#end)
 var currentstep = $wstepbystep;

 function getUsersGroupsValue(users, groups)
 {
   var str = "";

   if (users.value != "" || groups.value != "") {
     str = "&lt;ul class=\"star\"&gt;";

     if (users.value != "")
       str += "&lt;li&gt;Users: " + users.value + "&lt;\/li&gt;"
     if (groups.value != "")
       str += "&lt;li&gt;Groups: " + groups.value + "&lt;\/li&gt;"

     str += "&lt;\/ul&gt;";
   }
   
   return str;
 }

 function refreshSummary()
 {
   $("summarywikiname").innerHTML = "&lt;p&gt;" + $("wikiname").value + "&lt;\/p&gt;";
   $("summarywikiprettyname").innerHTML = "&lt;p&gt;" + $("XWiki.XWikiServerClass_0_wikiprettyname").value + "&lt;\/p&gt;";
   $("summarywikidesc").innerHTML = "&lt;p&gt;" + $("XWiki.XWikiServerClass_0_description").value + "&lt;\/p&gt;";
   $("summarywikidomain").innerHTML = "&lt;p&gt;" + $("XWiki.XWikiServerClass_0_server").value + "&lt;\/p&gt;";
   $("summarywikiadmin").innerHTML = "&lt;p&gt;" + $("XWiki.XWikiServerClass_0_owner").value + "&lt;\/p&gt;";
   $("summarywikitemplate").innerHTML = "&lt;p&gt;" + $("wikitemplate").value + "&lt;\/p&gt;";
   $("summarywikipackage").innerHTML = "&lt;p&gt;" + $("wikipackage").value + "&lt;\/p&gt;";
   $("summaryreaders").innerHTML = getUsersGroupsValue($("readersusers"), $("readersgroups"));
   $("summarywriters").innerHTML = getUsersGroupsValue($("writersusers"), $("writersgroups"));
   $("summaryadmins").innerHTML = getUsersGroupsValue($("adminsusers"), $("adminsgroups"));
 }

 function showStep()
 {
   for (var i = 0; i &lt; steps.length; ++i) {
     if (i != currentstep)
       addClass($(steps[i]), "hidden");
     else
       rmClass($(steps[i]), "hidden");
   }
   
   if (currentstep &gt; 0)
     rmClass($("actionprevious"), "hidden");
   else
     addClass($("actionprevious"), "hidden");
     
   if (currentstep &lt; steps.length-1) {
     rmClass($("actionnext"), "hidden");
     addClass($("actioncreate"), "hidden");
   } else {
     addClass($("actionnext"), "hidden");
     rmClass($("actioncreate"), "hidden");
     
     refreshSummary();
   }
 }
 
 function goNext()
 {
   ++currentstep;
   showStep();
 }
 
 function goPrevious()
 {
   --currentstep;
   showStep();
 }
 
#end

 function validateWikiName()
 {
   $('wikiname').value = noaccent($('wikiname').value).toLowerCase();

   var wikiname = $('wikiname').value;

   if (lastwikiname == wikiname)
   {
     return;
   }

   lastwikiname = wikiname;
   
   if (wikiname &amp;&amp; wikiname != "")
   {
     $('wikinamevalidation').innerHTML = "$MSG_ERROR_WIKINAMEEMPTY";
   
     var surl = "$ISWIKINAMEAVAILABLE" + "?xpage=plain&amp;ajax=1&amp;wikiname=" + escape(wikiname);
     surl += "&amp;form_token=$!{services.csrf.getToken()}";
     new Ajax.Request(surl,
               {
                 method: 'get',
                 onSuccess: function(transport) {
                     var hideForceWikiName = true;

                     if (transport.responseText == "true")
                     {
                       $('wikinamevalidation').innerHTML = "$MSG_INFO_WIKINAMEVALID";
                       $('actioncreatebutton').disabled = false;
                     }
                     else if (transport.responseText == "database")
                     {
                       hideForceWikiName = false;

                       forceWikiNameChanged();
                     }
                     else if (transport.responseText == "wiki")
                     {
                       $('wikinamevalidation').innerHTML = "$MSG_ERROR_WIKIALREADYEXISTS";
                       $('actioncreatebutton').disabled = true;
                     }
                     else
                     {
                       $('wikinamevalidation').innerHTML = "$MSG_ERROR_WIKINAMEALREADYUSED";
                       $('actioncreatebutton').disabled = true;
                     }

                     if (hideForceWikiName)
                     {
                       addClass($('forcewikinamediv'), "hidden");
                     }
                     else
                     {
                       rmClass($('forcewikinamediv'), "hidden");
                     }
                   }
               });
   }
   else
   {
     $('wikinamevalidation').innerHTML = "$MSG_ERROR_WIKINAMEEMPTY";
     $('actioncreatebutton').disabled = true;
     addClass($('forcewikinamediv'), "hidden");
   }
 }

 function forceWikiNameChanged()
 {
   if ($('forcewikiname').checked == true)
   {
     $('wikinamevalidation').innerHTML = "$MSG_WARNING_DATABASEALREADYEXISTS";
     $('actioncreatebutton').disabled = false;
   }
   else
   {
     $('wikinamevalidation').innerHTML = "$MSG_ERROR_DATABASEALREADYEXISTS";
     $('actioncreatebutton').disabled = true;
   }
 }

 function wikiNameChanged()
 {
   validateWikiName();

   if (domainnamesetted == false) {
     $("XWiki.XWikiServerClass_0_server").value = $("wikiname").value + "$ALIASSUFFIX";
   }

   if (prettynamesetted == false) {
     $("XWiki.XWikiServerClass_0_wikiprettyname").value = $("wikiname").value.substring(0,1).toUpperCase() + $("wikiname").value.substring(1);
   }
 }
 
 function domainNameChanged()
 {
   domainnamesetted = true;
 }
 
 function prettyNameChanged()
 {
   prettynamesetted = true;
 }
 
 function validate()
 {
 }
// ]]&gt;
&lt;/script&gt;
{/pre}
&lt;form method="get" action="" id="wikicreationform"&gt;
  #if ($wstepbystep)
  &lt;div id="$WSTEPNAME_INTRO"&gt;
    ##1.1 $services.localization.render('wikimanager.title.createwiki.intro')
    &lt;p&gt;$services.localization.render('wikimanager.doc.createwiki.intro')&lt;/p&gt;
  &lt;/div&gt;
  #end
  ##
  #############################################################################
  ##
  &lt;div id="$WSTEPNAME_WIKINAME"&gt;
    1.1 $services.localization.render('wikimanager.title.createwiki.wikiname')

    &lt;dl&gt;
      &lt;dt&gt;&lt;label  for="wikiname"&gt;$services.localization.render('wikimanager.prop.wiki.wikiname')&lt;/label&gt;&lt;/dt&gt;
      #if ($documentation) &lt;dd&gt;$services.localization.render('wikimanager.doc.createwiki.wikiname')&lt;/dd&gt; #end
      &lt;dd&gt;
        &lt;input size="40" id="wikiname" name="wikiname" type="text" onchange="wikiNameChanged();" onkeyup="wikiNameChanged();" /&gt;
        &lt;span id="wikinamevalidation"&gt;&lt;/span&gt;
        &lt;div id="forcewikinamediv"&gt;&lt;input id="forcewikiname" name="forcewikiname" type="checkbox" #if ($failonexist == false)checked="true"#end onchange="forceWikiNameChanged();"/&gt;&lt;label for="forcewikiname"&gt;$services.localization.render('wikimanager.wikiname.force')&lt;/label&gt;&lt;/div&gt;
      &lt;/dd&gt;
    &lt;/dl&gt;
  &lt;/div&gt;
  ##
  #############################################################################
  ##
  &lt;div id="$WSTEPNAME_WIKIDESC"&gt;
    1.1 $services.localization.render('wikimanager.title.createwiki.desc')
    #if ($documentation) $services.localization.render('wikimanager.doc.createwiki.desc') #end

    &lt;dl&gt;
      &lt;dt&gt;&lt;label for="XWiki.XWikiServerClass_0_wikiprettyname"&gt;$services.localization.render('wikimanager.prop.wiki.wikiprettyname')&lt;/label&gt;&lt;/dt&gt;
      #if ($documentation) &lt;dd&gt;$services.localization.render('wikimanager.doc.createwiki.desc.wikiprettyname')&lt;/dd&gt; #end
      &lt;dd&gt;&lt;input size="40" id="XWiki.XWikiServerClass_0_wikiprettyname" name="XWiki.XWikiServerClass_0_wikiprettyname" type="text" onchange="prettyNameChanged();" /&gt;&lt;/dd&gt;
    &lt;/dl&gt;

    &lt;dl&gt;
      &lt;dt&gt;&lt;label for="XWiki.XWikiServerClass_0_description"&gt;$services.localization.render('wikimanager.prop.wiki.description')&lt;/label&gt;&lt;/dt&gt;
      #if ($documentation) &lt;td&gt;$services.localization.render('wikimanager.doc.createwiki.desc.description')&lt;/td&gt; #end
      &lt;dd&gt;$wikidocument.display("description", "edit")&lt;/dd&gt;
    &lt;/dl&gt;

    &lt;dl&gt;
      &lt;dt&gt;&lt;label for="XWiki.XWikiServerClass_0_server"&gt;$services.localization.render('wikimanager.prop.wiki.server')&lt;/label&gt;&lt;/dt&gt;
      #if ($documentation) &lt;dd&gt;$services.localization.render('wikimanager.doc.createwiki.desc.server.creation', [$ALIASSUFFIX])&lt;/dd&gt; #end
      &lt;dd&gt;&lt;input size="40" id="XWiki.XWikiServerClass_0_server" name="XWiki.XWikiServerClass_0_server" type="text" onchange="domainNameChanged();" /&gt;&lt;/dd&gt;
    &lt;/dl&gt;

    &lt;dl&gt;
      &lt;dt&gt;&lt;label for="XWiki.XWikiServerClass_0_owner"&gt;$services.localization.render('wikimanager.prop.wiki.owner')&lt;/label&gt;&lt;/dt&gt;
      #if ($documentation) &lt;dd&gt;$services.localization.render('wikimanager.doc.createwiki.desc.owner')&lt;/dd&gt; #end
      &lt;dd&gt;$wikidocument.display("owner", "edit")&lt;/dd&gt;
    &lt;/dl&gt;
  &lt;/div&gt;
  ##
  #############################################################################
  ##
  &lt;div id="$WSTEPNAME_DATAFROM"&gt;
    1.1 $services.localization.render('wikimanager.title.createwiki.datafrom')
    #if ($documentation) $services.localization.render('wikimanager.doc.createwiki.datafrom') #end

    &lt;dl&gt;
      &lt;dt&gt;&lt;label for="wikitemplate"&gt;$services.localization.render('wikimanager.wikitemplate')&lt;/label&gt;&lt;/dt&gt;
      #if ($documentation) &lt;dd&gt;$services.localization.render('wikimanager.doc.createwiki.datafrom.template')&lt;/dd&gt; #end
      &lt;dd&gt;
        #set ($listtemplate=$WikiManager.getWikiTemplateList())
        &lt;select #if($listtemplate.size() == 0)disabled="disabled"#end name="wikitemplate" id="wikitemplate"&gt;
          &lt;option value=""&gt;---&lt;/option&gt;
          #foreach ($template in $listtemplate)
            &lt;option value="$template.wikiName"&gt;#if($template.wikiPrettyName != "")$template.wikiPrettyName#else$template.wikiName#end&lt;/option&gt;
          #end
        &lt;/select&gt;
      &lt;/dd&gt;
    &lt;/dl&gt;

    &lt;dl&gt;
      &lt;dt&gt;&lt;label for="wikipackage"&gt;$services.localization.render('wikimanager.wikipackage')&lt;/label&gt;&lt;/dt&gt;
      #if ($documentation) &lt;dd&gt;$services.localization.render('wikimanager.doc.createwiki.datafrom.package')&lt;/dd&gt; #end
      &lt;dd&gt;
        #set ($listpackage=$doc.getAttachmentList())
        &lt;select #if($listpackage.size() == 0)disabled="disabled"#end name="wikipackage" id="wikipackage"&gt;
          &lt;option value=""&gt;---&lt;/option&gt;
          #foreach ($package in $listpackage)
            &lt;option value="$package.getFilename()"&gt;$package.getFilename()&lt;/option&gt;
          #end
        &lt;/select&gt;
      &lt;/dd&gt;
    &lt;/dl&gt;
  &lt;/div&gt;
  ##
  #############################################################################
  ##
  #set ($rightsmanager = $xwiki.rightsmanager)
  #set ($users = $rightsmanager.usersApi.allGlobalUsersNames)
  #set ($groups = $rightsmanager.groupsApi.allGlobalGroupsNames)
  &lt;div id="$WSTEPNAME_USERS"&gt;
    1.1 $services.localization.render('wikimanager.title.createwiki.members')
    #if ($documentation) $services.localization.render('wikimanager.doc.createwiki.members') #end

    &lt;dl&gt;
      &lt;dt&gt;&lt;label for="readersusers"&gt;$services.localization.render('wikimanager.readers')&lt;/label&gt;&lt;/dt&gt;
      #if ($documentation) &lt;td&gt;$services.localization.render('wikimanager.doc.createwiki.members.readers')&lt;/td&gt; #end
      &lt;dd&gt;#printUsersAndGroups($users $groups "readers" $readeruserlist $readergrouplist false)&lt;/dd&gt;
    &lt;/dl&gt;

    &lt;dl&gt;
      &lt;dt&gt;&lt;label for="writersusers"&gt;$services.localization.render('wikimanager.writers')&lt;/label&gt;&lt;/dt&gt;
      #if ($documentation) &lt;td&gt;$services.localization.render('wikimanager.doc.createwiki.members.writers')&lt;/td&gt; #end
      &lt;dd&gt;#printUsersAndGroups($users $groups "writers" $writeruserlist $writergrouplist false)&lt;/dd&gt;
    &lt;/dl&gt;

    &lt;dl&gt;
      &lt;dt&gt;&lt;label for="adminsusers"&gt;$services.localization.render('wikimanager.admins')&lt;/label&gt;&lt;/dt&gt;
      #if ($documentation) &lt;td&gt;$services.localization.render('wikimanager.doc.createwiki.members.administrators')&lt;/td&gt; #end
      &lt;dd&gt;#printUsersAndGroups($users $groups "admins" $adminuserlist $admingrouplist false)&lt;/dd&gt;
    &lt;/dl&gt;
  &lt;/div&gt;
  ##
  #############################################################################
  ##
  #if ($wstepbystep)
  &lt;div id="$WSTEPNAME_SUMMARY"&gt;
    1.1 $services.localization.render('wikimanager.title.createwiki.summary')
    #if ($documentation) $services.localization.render('wikimanager.doc.createwiki.summary') #end
    &lt;table class="wiki-table" border="0" cellpadding="0" cellspacing="0"&gt;
      &lt;tbody&gt;
        &lt;tr&gt;&lt;th&gt;Properties&lt;/th&gt;&lt;th&gt;Values&lt;/th&gt;&lt;/tr&gt;
        &lt;tr class="table-odd"&gt;&lt;td&gt;*$services.localization.render('wikimanager.prop.wiki.wikiname')*&lt;/td&gt;&lt;td id="summarywikiname"&gt;---&lt;/td&gt;&lt;/tr&gt;
        &lt;tr class="table-odd"&gt;&lt;td&gt;*$services.localization.render('wikimanager.prop.wiki.wikiprettyname')*&lt;/td&gt;&lt;td id="summarywikiprettyname"&gt;---&lt;/td&gt;&lt;/tr&gt;
        &lt;tr class="table-odd"&gt;&lt;td&gt;*$services.localization.render('wikimanager.prop.wiki.description')*&lt;/td&gt;&lt;td id="summarywikidesc"&gt;---&lt;/td&gt;&lt;/tr&gt;
        &lt;tr class="table-even"&gt;&lt;td&gt;*$services.localization.render('wikimanager.prop.wiki.server')*&lt;/td&gt;&lt;td id="summarywikidomain"&gt;---&lt;/td&gt;&lt;/tr&gt;
        &lt;tr class="table-odd"&gt;&lt;td&gt;*$services.localization.render('wikimanager.prop.wiki.owner')*&lt;/td&gt;&lt;td id="summarywikiadmin"&gt;---&lt;/td&gt;&lt;/tr&gt;
        &lt;tr class="table-odd"&gt;&lt;td&gt;*$services.localization.render('wikimanager.wikitemplate')*&lt;/td&gt;&lt;td id="summarywikitemplate"&gt;---&lt;/td&gt;&lt;/tr&gt;
        &lt;tr class="table-odd"&gt;&lt;td&gt;*$services.localization.render('wikimanager.wikipackage')*&lt;/td&gt;&lt;td id="summarywikipackage"&gt;---&lt;/td&gt;&lt;/tr&gt;
        &lt;tr class="table-odd"&gt;&lt;td&gt;*$services.localization.render('wikimanager.readers')*&lt;/td&gt;&lt;td id="summaryreaders"&gt;---&lt;/td&gt;&lt;/tr&gt;
        &lt;tr class="table-odd"&gt;&lt;td&gt;*$services.localization.render('wikimanager.writers')*&lt;/td&gt;&lt;td id="summarywriters"&gt;---&lt;/td&gt;&lt;/tr&gt;
        &lt;tr class="table-odd"&gt;&lt;td&gt;*$services.localization.render('wikimanager.admins')*&lt;/td&gt;&lt;td id="summaryadmins"&gt;---&lt;/td&gt;&lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/div&gt;
  #end
  ##
  #############################################################################
  ##
  &lt;div&gt;
    #if ($wstepbystep)
      &lt;a href="javascript:void(0)" id="actionprevious" class="button" onclick="goPrevious();"&gt;${services.localization.render("wikimanager.action.previous")}&lt;/a&gt;
      |
      &lt;a href="javascript:void(0)" id="actionnext" class="button" onclick="goNext();"&gt;${services.localization.render("wikimanager.action.next")}&lt;/a&gt;
    #end
    &lt;div id="actioncreate"&gt;
      &lt;br /&gt;
      #if ($request.stepbystep) &lt;input type="hidden" name="stepbystep" value="$request.stepbystep" /&gt; #end
      #if ($request.doc) &lt;input type="hidden" name="doc" value="$request.doc" /&gt; #end
      &lt;input type="hidden" name="form_token" value="$!{services.csrf.getToken()}" /&gt;
      &lt;input class="button" type="submit" id="actioncreatebutton" name="actioncreate" value="${services.localization.render("create")}" onclick="return validate();" /&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/form&gt;
{pre}
&lt;script type="text/javascript"&gt;
// &lt;![CDATA[
 validateWikiName()

#if ($wstepbystep) 
 showStep();

 if ($("XWiki.XWikiServerClass_0_server").value != "")
   domainnamesetted = true;
  
 if ($("XWiki.XWikiServerClass_0_wikiprettyname").value != "")
   prettynamesetted = true;
#end
// ]]&gt;
&lt;/script&gt;
{/pre}</content>
</xwikidoc>
