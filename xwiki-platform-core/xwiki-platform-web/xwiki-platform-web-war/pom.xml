<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.xwiki.platform</groupId>
    <artifactId>xwiki-platform-web</artifactId>
    <version>15.5-SNAPSHOT</version>
  </parent>
  <artifactId>xwiki-platform-web-war</artifactId>
  <name>XWiki Platform - Web - WAR</name>
  <packaging>war</packaging>
  <description>WAR for the XWiki platform</description>
  <!-- Explicitly put product home page so that it's found by core extension scanner no mater what -->
  <url>https://www.xwiki.org</url>
  <properties>
    <!-- TODO: This is currently required for the Packager Mojo which currently doesn't create its own distribution
         descriptor (as xwiki-platform-distribution-web and xwiki-enterprise-web do). -->
    <xwiki.extension.features>xwiki</xwiki.extension.features>
  </properties>
  <dependencies>
    <dependency>
      <groupId>org.xwiki.platform</groupId>
      <artifactId>xwiki-platform-tree-war</artifactId>
      <version>${project.version}</version>
      <type>war</type>
    </dependency>
    <dependency>
      <groupId>org.xwiki.platform</groupId>
      <artifactId>xwiki-platform-index-tree-war</artifactId>
      <version>${project.version}</version>
      <type>war</type>
    </dependency>
    <dependency>
      <groupId>org.xwiki.platform</groupId>
      <artifactId>xwiki-platform-livedata-war</artifactId>
      <version>${project.version}</version>
      <type>war</type>
    </dependency>
    <dependency>
      <groupId>org.xwiki.platform</groupId>
      <artifactId>xwiki-platform-web-templates</artifactId>
      <version>${project.version}</version>
      <type>jar</type>
      <!-- Prevent the WAR from including it (we unpack it). We still need the dependency for ensuring the right
           reactor order and to make sure that the local repo has the dependency artifact when the dependency plugin
           executes -->
      <scope>provided</scope>
    </dependency>
    <!-- Test dependencies -->
    <dependency>
      <groupId>org.webjars</groupId>
      <artifactId>requirejs</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.webjars</groupId>
      <artifactId>jquery</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.webjars</groupId>
      <artifactId>bootstrap</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.webjars</groupId>
      <artifactId>prototype</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.xwiki.platform</groupId>
      <artifactId>xwiki-platform-tree-webjar</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <!-- Unpack the templates so that they are included in the war -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.xwiki.platform</groupId>
                  <artifactId>xwiki-platform-web-templates</artifactId>
                  <type>jar</type>
                  <version>${project.version}</version>
                  <excludes>META-INF/**</excludes>
                </artifactItem>
              </artifactItems>
              <outputDirectory>${project.build.directory}/${project.build.finalName}</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Minify and optimize the JavaScript code. -->
      <plugin>
        <groupId>com.github.blutorange</groupId>
        <artifactId>closure-compiler-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>minify-strict</id>
            <goals>
              <goal>minify</goal>
            </goals>
            <configuration>
              <excludes>
                <!-- See the next execution for the reason we exclude these files. -->
                <exclude>**/panelWizard.js</exclude>
              </excludes>
            </configuration>
          </execution>
          <!-- Some JavaScript files cannot run in strict mode so we minify them separately. -->
          <execution>
            <id>minify-non-strict</id>
            <goals>
              <goal>minify</goal>
            </goals>
            <configuration>
              <includes>
                <!-- Sets many global variables. -->
                <include>**/panelWizard.js</include>
              </includes>
              <closureStrictModeInput>false</closureStrictModeInput>
              <closureEmitUseStrict>false</closureEmitUseStrict>
              <closureWarningLevels>
                <es5Strict>WARNING</es5Strict>
              </closureWarningLevels>
            </configuration>
          </execution>
          <execution>
            <id>merge</id>
            <goals>
              <goal>minify</goal>
            </goals>
            <configuration>
              <includes>
                <include>**/xwiki.js</include>
                <include>**/modalPopup.js</include>
                <include>**/jumpToPage.js</include>
                <include>**/confirmationBox.js</include>
                <include>**/confirmedAjaxRequest.js</include>
                <include>**/notification.js</include>
                <include>**/xlist.js</include>
                <include>**/suggest.js</include>
              </includes>
              <skipMerge>false</skipMerge>
              <targetDir>resources/js/xwiki</targetDir>
              <outputFilename>xwiki.bundle.min.js</outputFilename>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <!-- TODO: Find a way to fix the path to the source file from the generated source maps. The following doesn't
            work but it makes the source paths shorter. -->
          <closureSourceMapLocationMappings>
            <closureSourceMapLocationMapping>
              <name>**/*</name>
              <!-- We can't leave the value empty because it generates "null" in the path. -->
              <value>./</value>
            </closureSourceMapLocationMapping>
          </closureSourceMapLocationMappings>
        </configuration>
      </plugin>
      <!-- Minify the CSS code. -->
      <plugin>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>yuicompressor-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>compress</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <aggregations>
            <!-- Aggregate the CSS code that is loaded on every page. -->
            <aggregation>
              <insertNewLine>true</insertNewLine>
              <inputDir>${project.build.directory}/${project.build.finalName}/resources</inputDir>
              <output>${project.build.directory}/${project.build.finalName}/resources/css/xwiki.bundle.min.css</output>
              <includes>
                <include>**/modalPopup.min.css</include>
                <include>**/jumpToPage.min.css</include>
                <include>**/confirmationBox.min.css</include>
                <include>**/notification.min.css</include>
                <include>**/suggest.min.css</include>
              </includes>
            </aggregation>
          </aggregations>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <webResources>
            <!-- Include License resources -->
            <resource>
              <directory>${project.build.directory}/maven-shared-archive-resources/META-INF</directory>
              <targetPath>META-INF</targetPath>
            </resource>
            <!-- Include version.properties file -->
            <resource>
              <directory>${basedir}/src/main/webInfResources</directory>
              <targetPath>WEB-INF</targetPath>
              <filtering>true</filtering>
            </resource>
          </webResources>
          <!-- Exclude the LICENSE/NOTICE files from the classes/ directory since we're including them in META-INF/ at
               the root of the WAR -->
          <packagingExcludes>WEB-INF/classes/META-INF/**</packagingExcludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.mycila</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <configuration>
          <licenseSets>
            <licenseSet>
              <excludes>
                <!-- Exclude JS files that not under an XWiki license, so that we don't check the license for them -->
                <exclude>src/**/xwiki/accordion/accordion.js</exclude>
                <exclude>src/**/xwiki/panelwizard/ieemu.js</exclude>
                <exclude>src/**/xwiki/table/tablefilterNsort.js</exclude>
                <exclude>src/**/uicomponents/widgets/validation/livevalidation_prototype.js</exclude>
              </excludes>
            </licenseSet>
          </licenseSets>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <!-- We don't use the 'integration-tests' profile because we cannot run the tests on CI (Chrome is not installed)
        and we're waiting for this issue https://github.com/searls/jasmine-maven-plugin/issues/349 to use docker. -->
      <id>integration-tests-chrome</id>
      <build>
        <plugins>
          <plugin>
            <groupId>com.github.searls</groupId>
            <artifactId>jasmine-maven-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>test</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <!-- Run the tests on the minified files in order to verify the minification also. -->
              <jsSrcDir>${project.build.directory}/${project.build.finalName}/resources</jsSrcDir>
              <customRunnerConfiguration>
                ${project.basedir}/src/test/resources/jasmine-require-config.txt
              </customRunnerConfiguration>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
