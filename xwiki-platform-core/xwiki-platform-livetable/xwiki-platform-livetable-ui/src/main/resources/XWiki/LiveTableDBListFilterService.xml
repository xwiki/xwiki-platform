<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.3" reference="XWiki.LiveTableDBListFilterService" locale="">
  <web>XWiki</web>
  <name>LiveTableDBListFilterService</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1496336171000</creationDate>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1499180169000</date>
  <contentUpdateDate>1499180164000</contentUpdateDate>
  <version>1.1</version>
  <title/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>false</hidden>
  <content>{{velocity wiki="false"}}
#set($reqClass = "$!request.get('class')")
#set($reqProperty = "$!request.get('property')")
#set($reqInput = "$!request.get('input')")
#set($reqLimit = "$!request.get('limit')")
#set ($limit = $mathtool.max($mathtool.toInteger($reqLimit), 1))
#if ("$!limit" == '')
  ## The fallback limit is hardcoded here, as we are only dealing with suggestions
  #set ($limit = 10)
#end
#if ($reqClass != '' &amp;&amp; $reqProperty != '' &amp;&amp; $reqInput != '')
  #set ($discard = $response.setContentType('application/json'))
  #set ($classRef = $xwiki.getClass($reqClass))
  #set ($field = $classRef.get($reqProperty))
  #set ($results = [])
  #if ($field.classType == 'DBList')
    #set ($sql = $!field.getProperty('sql').value)
    #if ($sql != '')
      ## Use SOLR
      #set ($dbId = "$!field.getProperty('idField').value")
      #set ($dbValue = "$!field.getProperty('valueField').value")
      #set ($dbClassName = "$!field.getProperty('classname').value")
      #set ($dbClass = $xwiki.getClass($dbClassName))
      #set ($solrId = $services.model.serialize($dbClass.get($dbId).reference, 'solr'))
      #set ($solrValue = $services.model.serialize($dbClass.get($dbValue).reference, 'solr'))
      #set ($solr = "${reqInput}")
      #set ($query = $services.query.createQuery($solr, 'solr'))
      #set ($discard = $query.bindValue('fq', ["type:DOCUMENT", "class:$dbClassName"]))
      ## set ($discard = $query.bindValue('qf', "property.${solrValue}"))
      #set ($discard = $query.setLimit($limit))
      #foreach ($obj in $query.execute()[0].results)
        #set ($res = {
          'id': $obj.getFieldValue("property.${solrId}"),
          'name': $obj.getFieldValue("property.${solrValue}")
        })
        #set($discard = $results.add($res))
      #end
    #else
      ## Use HQL as there is a query present
      #set ($sql = $sql + " AND UPPER(doc.title) LIKE UPPER(:input)")
      #set ($query = $services.query.hql($sql))
      #set ($discard = $query.bindValue('input', "%$reqInput%"))
      #set ($discard = $query.setLimit($limit))
      #foreach ($obj in $query.execute())
        #set ($res = {
          'id': $obj[0],
          'name': $obj[1]
        })
        #set($discard = $results.add($res))
      #end
    #end
  #end
  $jsontool.serialize($results)
#end
{{/velocity}}

{{velocity}}
#if ($reqClass == '' || $reqProperty == '')
  {{info}}
    This service provides filtering results for the LiveTable.
  {{/info}}
#end
{{/velocity}}</content>
</xwikidoc>
