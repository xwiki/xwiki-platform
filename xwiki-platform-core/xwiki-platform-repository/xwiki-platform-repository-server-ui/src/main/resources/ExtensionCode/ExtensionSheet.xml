<?xml version="1.0" encoding="UTF-8"?>

<xwikidoc>
  <web>ExtensionCode</web>
  <name>ExtensionSheet</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <parent>ExtensionCode.ExtensionClass</parent>
  <creator>xwiki:XWiki.Admin</creator>
  <author>xwiki:XWiki.Admin</author>
  <customClass/>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <creationDate>1312816151000</creationDate>
  <date>1349706717000</date>
  <contentUpdateDate>1349706717000</contentUpdateDate>
  <version>1.1</version>
  <title>#if($doc.getObject('ExtensionCode.ExtensionClass'))$doc.getObject('ExtensionCode.ExtensionClass').getProperty('name').value#{else}Extension sheet#end</title>
  <template/>
  <defaultTemplate/>
  <validationScript/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <object>
    <class>
      <name>XWiki.StyleSheetExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <name>ExtensionCode.ExtensionSheet</name>
    <number>0</number>
    <className>XWiki.StyleSheetExtension</className>
    <guid>a11d8ef9-3862-4e83-81de-38c743abf3fe</guid>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>#template('colorThemeInit.vm')

.box, div.floatinginfobox {
  background-color: #fafafa;
}

.box.floatinginfobox {
  margin-top: 0;
}

.extensionSummary {
  background-color: $theme.backgroundSecondaryColor;
  border: 1px dotted $theme.borderColor;
  padding: 5px;
  display: block;
}

.errormessage, .warningmessage, .infomessage, .plainmessage {
  background-color: $theme.backgroundSecondaryColor;
}

.main .extensionInfo {
  margin: 0;
}

.label {
  font-size: 0.85em;
  font-weight: bold;
  text-transform: uppercase;
}

.toc .label {
  display: block;
  margin-top: 1.1em;
  padding: 0 1em;
}

.toc ul {
  margin-top: 0;
}</code>
    </property>
    <property>
      <name>Extension CSS</name>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>always</use>
    </property>
  </object>
  <content>{{include document="ExtensionCode.RepositoryCode"/}}

{{velocity output="false"}}
#if ($context.action == 'edit' || $context.action == 'inline')
  #set($isEditMode = true)
#else
  #set($isViewMode = true)
#end

#set($extension = $doc.getObject("ExtensionCode.ExtensionClass"))

#if ($extension)
  #set($id = $extension.getProperty('id').value)
  #set($type = $extension.getProperty('type').value)

  #set ($extensionTypeDocumentNames = $services.query.xwql('from doc.object(ExtensionCode.ExtensionTypeClass) as type where type.id = :id').bindValue("id", $type).execute())
  #if ($extensionTypeDocumentNames.size() &gt; 0)
    #set ($extensionTypeDocumentName = $extensionTypeDocumentNames.get(0))
    #set($extensionTypeObject = $xwiki.getDocument($extensionTypeDocumentName).getObject("ExtensionCode.ExtensionTypeClass"))
  #end

  #set ($extensionSheetExtensionDocumentNames = $services.query.xwql('from doc.object(ExtensionCode.ExtensionSheetExtensionClass) as sheetExtension').execute())
  #set($sheetExtensions = [])
  #foreach($extensionSheetExtensionDocumentName in $extensionSheetExtensionDocumentNames)
    #set($sheetExtension = $xwiki.getDocument($extensionSheetExtensionDocumentName).getObject('ExtensionCode.ExtensionSheetExtensionClass'))
    #if ($sheetExtension.getProperty('type').value == '' || $sheetExtension.getProperty('type').value == $type)
      #set($void = $sheetExtensions.add($sheetExtension))
    #end
  #end
#end
{{/velocity}}

{{velocity}}
#if ($extension)
  $doc.use("ExtensionCode.ExtensionClass")
  #if ($isViewMode)
    ##------- Icon &amp; Summary -----------------
    (% class="extensionSummary" %)
    #set($icon = $doc.getValue("icon"))
    #if ("$!{icon.trim()}" != "")
      |[[image:${doc.getValue('icon')}]]|**{{{$doc.getValue("summary")}}}**
    #else
      |[[image:icon:cog]]|**{{{$doc.getValue("summary")}}}**
    #end

    ## Viewing
    ##
    {{box cssClass="floatinginfobox"}}
      #if ($hasEdit)
        #set($proxyExtensionObject = $doc.getObject('ExtensionCode.ExtensionProxyClass'))
        #if ($proxyExtensionObject)
          #set($repositoryId = $proxyExtensionObject.getProperty('repositoryId').value)
          #set($repositoryURI = $proxyExtensionObject.getProperty('repositoryURI').value)
          {{info}}Extension imported from repository [[$repositoryId&gt;&gt;$repositoryURI]]{{/info}} #if ($hasEdit)[[image:icon:arrow_refresh&gt;&gt;ExtensionCode.ImportExtension||title="Update extension" queryString="importExtension=true&amp;extensionId=$escapetool.url($id)&amp;repositoryId=$escapetool.url($repositoryId)"]]#end
        #end
      #end

      (% class="extensionInfo" %)
      ##------- Type --------------
      #set($typeDisplay = $extensionTypeObject.getProperty('name').value)
      #if ("$!typeDisplay" == '')
        #set($typeDisplay = $type)
      #end
      |(% class="label" %)Type(%%)|$typeDisplay
      ##------- Developed By --------
      #set($authors = $doc.getValue("authors"))
      |(% class="label" %)Developed by(%%)|#if ($authors.isEmpty())
          Unknown
        #else
          $doc.authors
        #end
      ##------- Features --------
      #set($features = $doc.getValue("features"))
      #if ($features &amp;&amp; $features.size() &gt; 0)
        |(% class="label" %)Features(%%)|#if($features.size() &gt; 1)
          (((
            #foreach($feature in $features)
              * ${feature}
            #end
          )))
          #elseif ($features.size() == 1)
            $features.get(0)
          #else

          #end
      #end
      ##------- Website --------------
      #set($website = $extension.getProperty("website").value)
      #if ("$!website" != '')
        |(% class="label" %)Website(%%)|#if ($website.length() &gt; 40)
            [[{{{$website.substring(0, 40)...}}}&gt;&gt;url:$website]]
          #else
            $website
          #end
      #end
      ##------- License --------
      #set($licenseName = $doc.getValue("licenseName"))
      #if ("$!licenseName" != "")
        |(% class="label" %)License(%%)|$licenseName
      #else
        |(% class="label" %)License(%%)|Unknown
      #end
      ##---------------------------------
      ##------- Sheet extensions --------
      #if (!$sheetExtensions.isEmpty())

        #foreach($sheetExtension in $sheetExtensions)
          $doc.display('view_info', 'view', $sheetExtension)
        #end
      #end
      ##-------------------------------------------
      ##------- Extension Manager -----------------
      #if ($doc.getValue('validExtension') == 1)

        {{success}}**Installable with the Extension Manager**{{/success}}
      #end
      ##------------------------
      ##------- Source --------
      #set($source = $doc.getValue("source"))
      #if ("$!source" != "")

        [[View Source&gt;&gt;$source||class="extension-link small-extension-link source-extension"]]
      #end
      ##------- Download button ------
      ## Get the last ExtensionVersion object and consider it corresponds to the last version
      #set ($versions = $doc.getObjects("ExtensionCode.ExtensionVersionClass"))
      #if (!$versions.isEmpty())
        #set ($latestVersion = $versions.lastElement())

        #set ($version = $!{latestVersion.getProperty('version').value})
        #if ("$!version" == '')
          [[Download&gt;&gt;$latestVersion.getProperty("download").getValue()||class="extension-link small-extension-link download-extension"]]
        #else
          #set($download = $latestVersion.getProperty("download").getValue())
          #if ("$!download" == '')
            #if ($doc.getAttachment("${id}-${version}.${type}"))
              [[Download v$version&gt;&gt;attach:${id}-${version}.${type}||class="extension-link small-extension-link download-extension"]]
            #end
          #else
            [[Download v$version&gt;&gt;$latestVersion.getProperty("download").getValue()||class="extension-link small-extension-link download-extension"]]
          #end
        #end
      #end
    {{/box}}

    {{box cssClass="toc"}}(% class="label" %)Table of contents(%%)((({{toc/}}))){{/box}}
  #else
    ## Editing
    ##
    {{toc/}}

    = Summary =
    #if ($doc.isNew())
      #if ($request.name)
        $extension.set('id', "${defaultIdPrefix}${request.name.toLowerCase().replace(' ', '-')}")##
        $extension.set('name', $request.name)##
      #else
        $extension.set('id', "${defaultIdPrefix}${doc.name.toLowerCase().replace(' ', '-')}")##
        $extension.set('name', $doc.name)##
      #end
      $extension.set('authors', $xcontext.user)##
      {{html}}&lt;input value="${escapetool.xml($extension.getProperty('id').value)}" name="ExtensionCode.ExtensionClass_0_id" type="hidden"&gt;{{/html}}
    #end

    (% class="extension" %)
    |Name|$doc.display('name')
    |Type|$doc.display('type')
    |Summary|$doc.display('summary')
    |Authors|$doc.display('authors')
    |License|$doc.display('licenseName')
    |Source|$doc.display('source')
    |Display Icon Location
(Syntax: #set($comment = '##')${comment}icon:{{html}}&lt;a href="http://www.famfamfam.com/lab/icons/silk/previews/index_abc.png" target="_blank"&gt;icon name&lt;/a&gt;{{/html}}${comment})|$doc.display("icon")
    #if (!$doc.isNew())
      |Features (a list of virtual ids, e.g. an old id for an extension which changed its id)|$doc.display('features')
    #end

    #foreach($sheetExtension in $sheetExtensions)
      $doc.display('edit', 'view', $sheetExtension)
    #end
  #end

    = Description =
    #if ($isViewMode)
      ## Make sure to resolve reference based on the right document
      $doc.getValue("description")
    #else
      $doc.display("description")
    #end

    #if ($extensionTypeObject &amp;&amp; $latestVersion &amp;&amp; "$!{extension.getProperty('customInstallationOnly').value}" != '1')
      #set($standardInstallation = "$!{extensionTypeObject.getProperty('installation').value}")
    #else
      #set($standardInstallation = '')
    #end
    #set($extraInstallation = "$!{doc.getValue('installation')}")

    #if ($isEditMode || $standardInstallation != '' || $extraInstallation != '')
      = Prerequisites &amp; Installation Instructions =

      #if ($isEditMode)
        ; Custom installation only
        : $extension.customInstallationOnly
      #end
      ##
      ## Standard installation
      #if ($standardInstallation != '')
        #if ($isEditMode)
          == Standard installation instructions

        #end
        $extensionTypeObject.display('installation', 'view')
      #end
      ##
      ## Extra installation
      #if ($isEditMode)
        == Custom installation instructions

      #end
      #if ($isEditMode || $extraInstallation != '')
        $extension.installation
      #end
    #end

    ## Only display release notes if there are downloads and release notes
    #if ($latestVersion)
      #set ($releaseNotes = [])
      #foreach ($versionObject in $versions)
        #set ($notes = $!{versionObject.getProperty('notes').value})
        #set ($version = $!{versionObject.getProperty('version').value})
        #if ("$!notes" != '' &amp;&amp; "$!version" != '')
          #set ($discard = $releaseNotes.add([$version, $notes]))
        #end
      #end
      #if (!$releaseNotes.isEmpty())
        = Release Notes =
        #foreach ($entry in $releaseNotes)
          == v$entry.get(0) ==
          $entry.get(1)
        #end
      #end

      #set($extensionDependencies = $doc.getObjects('ExtensionCode.ExtensionDependencyClass', 'extensionVersion', $latestVersion.version))
      #if ($extensionDependencies.size() &gt; 0)
        = Dependencies =

         #foreach($extensionDependency in $extensionDependencies)
          #set($dependencyDocumentName = $null)
          #set($dependencyDocumentNames = $services.query.xwql('from doc.object(ExtensionCode.ExtensionClass) as extension where extension.id = :id').bindValue("id", $extensionDependency.id).execute())
          #if (!$dependencyDocumentNames.isEmpty())
            #set($dependencyDocumentName = $dependencyDocumentNames.get(0))
          #end
          #if ($dependencyDocumentName)
            * [[$extensionDependency.id&gt;&gt;$dependencyDocumentName]] $extensionDependency.constraint
          #else
            * $extensionDependency.id $extensionDependency.constraint
          #end
        #end
      #end
    #end

    #if ($isEditMode)
      = Add/Edit Downloads =
      #if ($doc.isNew())
        {{info}}In order to add Download information for this extension, save this page first and edit it again.{{/info}}
      #else
        {{warning}}If you've made changes to this form, make sure to save the page before clicking on the links below since you would loose the information you entered otherwise.{{/warning}}

        We don't have a slick UI yet to add new download versions or edit existing downloads version so for the moment it's a 2 step process:
        * If you're providing a new download, [[attach the new version to this page&gt;&gt;path:$xwiki.getURL($doc.fullName, 'view', 'viewer=attachments')]] and come back to this page. Make sure you put the version in the filename (e.g. ubercoolmacro-1.0.xar).
        * Add Download information for the new attachment by going to the [[object editor&gt;&gt;path:$xwiki.getURL($doc.fullName, 'edit', 'editor=object')]] and adding an object of type ${escapetool.h}#ExtensionCode.ExtensionVersionClass${escapetool.h}#. Make sure to fill the data, especially the version and the link to the attachment. To link to an attachment, you can use {{{attach:ubercoolmacro-1.0.xar}}}

        You can also associate dependencies to each version using the ${escapetool.h}#ExtensionCode.ExtensionDependencyClass${escapetool.h}#:
        * ${escapetool.h}#Extension version${escapetool.h}# is the version on which this dependency is assigned
        * ${escapetool.h}#Dependency id${escapetool.h}# is the identifier of the dependency extension on the repository where it is localed
        * ${escapetool.h}#Dependency version constraint${escapetool.h}# is the version related information of the dependency. Can be a version (e.g. ${escapetool.h}#1.0${escapetool.h}#) or one or several ranges of versions based on Maven standard syntax (e.g. ${escapetool.h}#[1.0,)${escapetool.h}# which mean at least ${escapetool.h}#1.0${escapetool.h}#)
      #end
    #end
#else
  This class sheet must be applied on a document containing an ExtensionCode.ExtensionClass object
#end
{{/velocity}}</content>
</xwikidoc>
