<?xml version="1.0" encoding="UTF-8"?>
<xwikidoc>
<web>XWiki</web>
<name>CoreExtensions</name>
<language></language>
<defaultLanguage>en</defaultLanguage>
<translation>0</translation>
<parent>XWiki.AdminSheet</parent>
<creator>xwiki:XWiki.Admin</creator>
<author>xwiki:XWiki.Admin</author>
<customClass></customClass>
<contentAuthor>xwiki:XWiki.Admin</contentAuthor>
<creationDate>1321508427000</creationDate>
<date>1322042689000</date>
<contentUpdateDate>1322042689000</contentUpdateDate>
<version>1.1</version>
<title>$msg.get("admin.xwiki.coreextensions")</title>
<template></template>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment></comment>
<minorEdit>false</minorEdit>
<syntaxId>xwiki/2.1</syntaxId>
<hidden>false</hidden><attachment>
<filename>icon.png</filename>
<filesize>7862</filesize>
<author>xwiki:XWiki.Admin</author>
<date>1322042689000</date>
<version>1.1</version>
<comment></comment><content>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
</content></attachment>
<content>{{include document="ExtensionManagerMacros" /}}

{{velocity}}
## Ajax call for a single extension
#if ($request.extensionid &amp;&amp; $request.extensionversion &amp;&amp; $request.ajax)
  #set ($actions = [])
  #if ($request.actionshowdetails)
    #set ($discard = $actions.add("&lt;span class=""buttonwrapper""&gt;&lt;input type=""submit"" name=""showdetails"" value=""Show details"" class=""button visibilityAction"" /&gt;&lt;/span&gt;"))
    #set ($discard = $actions.add("&lt;span class=""buttonwrapper""&gt;&lt;input type=""submit"" name=""hidedetails"" value=""Hide details"" class=""button visibilityAction"" /&gt;&lt;/span&gt;"))
  #end
  #displayExtension($extensionManager.resolve($request.extensionid, $request.extensionversion) $actions)
#else
##
(% class="full column" %)(((
= Core extensions

#displayExtensionSearchBar()

#if ($request.extensionid &amp;&amp; $request.extensionversion)
  #set ($extensions = [$extensionManager.resolve($request.extensionid, $request.extensionversion)])
#else
  #set($extensions = $extensionManager.getCoreExtensions())
#end
#if ($extensions.isEmpty())
  {{info}}No extension installed.{{/info}}##
#else
  #if ($extensions.size() &gt; 1)
    #set ($paginationParams = {'totalItems': $extensions.size(), 'url': $doc.getURL($xcontext.action, $request.getQueryString().replaceAll('(^|&amp;)firstIndex=[^&amp;]++&amp;?', '$1'))})
    {{html}}#pagination($paginationParams){{/html}}
    #set ($extensions = $extensions.subList($paginationParams.firstItem, $mathtool.min($extensions.size(), $mathtool.add($paginationParams.firstItem, $paginationParams.itemsPerPage))))
  #end
  #set ($actions = [])
  #computeXBack()
  #if ($request.actionshowdetails)
    #set ($discard = $actions.add("&lt;span class=""buttonwrapper""&gt;&lt;a href=""${xback}"" class=""button""&gt;Back to list&lt;/a&gt;&lt;/span&gt;"))
  #else
    #set ($discard = $actions.add("&lt;span class=""buttonwrapper""&gt;&lt;input type=""submit"" name=""actionshowdetails"" value=""Show details"" class=""button""/&gt;&lt;/span&gt;&lt;input type=""hidden"" name=""xback"" value=""${xback}"" /&gt;"))
  #end
  #foreach($extension in $extensions)
    #displayExtension($extension $actions)
  #end
  #if ($paginationParams)
    #set ($discard = $paginationParams.put('position', 'bottom'))
    {{html}}#pagination($paginationParams){{/html}}
  #end
#end
)))
#end
{{/velocity}}</content></xwikidoc>
