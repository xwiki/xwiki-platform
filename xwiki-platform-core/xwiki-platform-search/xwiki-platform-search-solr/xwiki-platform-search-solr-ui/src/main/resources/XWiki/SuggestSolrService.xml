<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.1">
  <web>XWiki</web>
  <name>SuggestSolrService</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1378723528000</creationDate>
  <parent>XWiki.SearchCode</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1392296157000</date>
  <contentUpdateDate>1392296157000</contentUpdateDate>
  <version>1.1</version>
  <title>Solr Suggestion Service</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{include reference="XWiki.SuggestSolrMacros" /}}

{{velocity output="false"}}
#macro (serializeResultsAsXML $results)
  #set ($discard = $response.setContentType('text/xml'))
  &lt;?xml version="1.0" encoding="UTF-8"?&gt;
  &lt;results&gt;
    #foreach ($result in $results)
      #set ($documentReference = $services.model.createDocumentReference($result.wiki, $result.space, $result.name))
      #set ($document = $xwiki.getDocument($documentReference))
      #set ($translatedDocument = $document.getTranslatedDocument($result.locale))
      #set ($title = $translatedDocument.plainTitle)
      #set ($url = $document.getURL())
      #if ($result.type == 'ATTACHMENT')
        #set ($title = $result.filename.get(0))
        #set ($url = $document.getAttachmentURL($title))
      #elseif ($result.type == 'DOCUMENT' &amp;&amp; $result.locale != '' &amp;&amp; $xcontext.language != $result.locale)
        #set ($url = $document.getURL('view', "language=$result.locale"))
      #end
      #if ($result.type == 'DOCUMENT' &amp;&amp; $result.locale != '')
        ## Display the document language after the title.
        #set ($title = "$title ($escapetool.xml($result.locale))")
      #end
      &lt;rs id="$escapetool.xml($url)" info="$escapetool.xml($documentReference)"&gt;$escapetool.xml($title)&lt;/rs&gt;
    #end
  &lt;/results&gt;
#end
{{/velocity}}

{{velocity wiki="false"}}
#if ("$!request.query" != '' &amp;&amp; "$!request.input" != '')
  #getSearchSuggestResults($results)
  #if ($request.media == 'json' || $request.getHeader('Accept') == 'application/json')
    #set ($discard = $response.setContentType('application/json'))
    $jsontool.serialize($results)
  #else
    #serializeResultsAsXML($results)
  #end
#end
{{/velocity}}

{{velocity}}
#if ("$!request.query" == '' || "$!request.input" == '')
  {{info}}
    This service provides search results for the search suggest UI component.
    Examples:
    * [[$doc.getExternalURL('get', 'outputSyntax=plain&amp;query=__INPUT__*&amp;input=test')]]
  {{/info}}
#end
{{/velocity}}</content>
</xwikidoc>
